{"ast":null,"code":"var _jsxFileName = \"/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/components/patients.js\";\nimport PatientsView from './patientsview';\nimport { parse } from 'date-fns';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport * as Icon from 'react-feather';\nimport { useLockBodyScroll } from 'react-use';\n\nfunction Patients(props) {\n  const [patients, setPatients] = useState(props.patients);\n  const [patient, setPatient] = useState(props.patients.slice(-1));\n  const [logs, setLogs] = useState({});\n  const [modal, setModal] = useState(false);\n  useLockBodyScroll(modal);\n\n  window.onclick = function (event) {\n    const modal = document.getElementById('modal');\n\n    if (event.target === modal) {\n      setModal(false);\n    }\n  };\n\n  useEffect(() => {\n    setPatients(props.patients);\n  }, [props.patients]);\n  const parseByDate = useCallback(patients => {\n    const log = {};\n\n    for (let i = 0; i < patients.length; i++) {\n      const day = new Date(parse(patients[i].dateannounced, 'dd/MM/yyyy', new Date()));\n\n      if (!(day in log)) {\n        const list = [];\n        list.push(patients[i]);\n        log[day] = list;\n      } else {\n        const list = log[day];\n        list.push(patients[i]);\n        log[day] = list;\n      }\n    }\n\n    setLogs(log);\n  }, []);\n  useEffect(() => {\n    if (patients.length) {\n      parseByDate(patients);\n    }\n  }, [parseByDate, patients]);\n\n  const switchPatient = patientIndexArg => {\n    if (patientIndexArg === '') return;\n\n    try {\n      const patientIndex = patientIndexArg.slice(1); // eslint-disable-next-line\n\n      patients.map((patient, index) => {\n        if (patient.patientnumber === patientIndex) setPatient(patient);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getClassNameFn = colorMode => {\n    switch (colorMode) {\n      case 'genders':\n        return patient => {\n          return `patient-card ${patient.gender === 'F' ? 'is-femme' : patient.gender === 'M' ? 'is-male' : ''} ${props.expand ? '' : 'is-small'}`;\n        };\n\n      case 'transmission':\n        return patient => {\n          return `patient-card ${patient.typeoftransmission === 'Local' ? 'is-local' : patient.typeoftransmission === 'Imported' ? 'is-imported' : ''} ${props.expand ? '' : 'is-small'}`;\n        };\n\n      case 'nationality':\n        return patient => {\n          return `patient-card ${patient.nationality === 'India' ? 'is-in' : patient.nationality === 'Myanmar' ? 'is-mm' : patient.nationality === 'Indonesia' ? 'is-id' : patient.nationality === 'United Kingdom' ? 'is-uk' : patient.nationality === 'United States of America' ? 'is-us' : patient.nationality === 'Thailand' ? 'is-th' : patient.nationality === 'Phillipines' ? 'is-ph' : patient.nationality === 'Italy' ? 'is-it' : patient.nationality === 'Canada' ? 'is-ca' : ''} ${props.expand ? '' : 'is-small'}`;\n        };\n\n      case 'age':\n        return patient => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n\n      default:\n        return patient => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PatientsView, {\n    logs: logs,\n    setModal: setModal,\n    setPatient: setPatient,\n    expand: props.expand,\n    applyClass: getClassNameFn(props.colorMode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }), modal && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    id: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `modal-content ${modal ? 'fadeInUp' : 'fadeOutDown'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon.XCircle, {\n    onClick: () => {\n      setModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, \"#\", patient.patientnumber)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"meta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Date Announced\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, patient.dateannounced ? patient.dateannounced : '?'), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, \"Contracted from\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"contracted-from\",\n    onClick: () => {\n      switchPatient(patient.contractedfromwhichpatientsuspected);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, patient.contractedfromwhichpatientsuspected ? patient.contractedfromwhichpatientsuspected : '?'), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, \"Detected City\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, patient.detectedcity ? patient.detectedcity : '?'), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, \"Detected District\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, patient.detecteddistrict ? patient.detecteddistrict : '?'), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, \"Detected State\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, patient.detectedstate ? patient.detectedstate : '?'), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \"Nationality\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, patient.nationality ? patient.nationality : '?'), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"Age\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, patient.agebracket ? patient.agebracket : '?'), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"Gender\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, patient.gender ? patient.gender : '?'), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, \"State Patient Number\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, patient.statepatientnumber ? patient.statepatientnumber : '?'), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"Type of transmission\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, patient.typeoftransmission ? patient.typeoftransmission : '?')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, patient.notes)), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, \"Source 1\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: patient.source1,\n    target: \"_noblank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, patient.source1)), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, \"Source 2\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: patient.source2,\n    target: \"_noblank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, patient.source2)), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"Source 3\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: patient.source3,\n    target: \"_noblank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }, patient.source3)))));\n}\n\nexport default Patients;","map":{"version":3,"sources":["/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/components/patients.js"],"names":["PatientsView","parse","React","useState","useEffect","useCallback","Icon","useLockBodyScroll","Patients","props","patients","setPatients","patient","setPatient","slice","logs","setLogs","modal","setModal","window","onclick","event","document","getElementById","target","parseByDate","log","i","length","day","Date","dateannounced","list","push","switchPatient","patientIndexArg","patientIndex","map","index","patientnumber","err","console","getClassNameFn","colorMode","gender","expand","typeoftransmission","nationality","contractedfromwhichpatientsuspected","detectedcity","detecteddistrict","detectedstate","agebracket","statepatientnumber","notes","source1","source2","source3"],"mappings":"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","sourcesContent":["import PatientsView from './patientsview';\n\nimport {parse} from 'date-fns';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {useLockBodyScroll} from 'react-use';\n\nfunction Patients(props) {\n  const [patients, setPatients] = useState(props.patients);\n  const [patient, setPatient] = useState(props.patients.slice(-1));\n  const [logs, setLogs] = useState({});\n  const [modal, setModal] = useState(false);\n\n  useLockBodyScroll(modal);\n\n  window.onclick = function (event) {\n    const modal = document.getElementById('modal');\n    if (event.target === modal) {\n      setModal(false);\n    }\n  };\n\n  useEffect(() => {\n    setPatients(props.patients);\n  }, [props.patients]);\n\n  const parseByDate = useCallback((patients) => {\n    const log = {};\n    for (let i = 0; i < patients.length; i++) {\n      const day = new Date(\n        parse(patients[i].dateannounced, 'dd/MM/yyyy', new Date())\n      );\n      if (!(day in log)) {\n        const list = [];\n        list.push(patients[i]);\n        log[day] = list;\n      } else {\n        const list = log[day];\n        list.push(patients[i]);\n        log[day] = list;\n      }\n    }\n    setLogs(log);\n  }, []);\n\n  useEffect(() => {\n    if (patients.length) {\n      parseByDate(patients);\n    }\n  }, [parseByDate, patients]);\n\n  const switchPatient = (patientIndexArg) => {\n    if (patientIndexArg === '') return;\n    try {\n      const patientIndex = patientIndexArg.slice(1);\n      // eslint-disable-next-line\n      patients.map((patient, index) => {\n        if (patient.patientnumber === patientIndex) setPatient(patient);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getClassNameFn = (colorMode) => {\n    switch (colorMode) {\n      case 'genders':\n        return (patient) => {\n          return `patient-card ${\n            patient.gender === 'F'\n              ? 'is-femme'\n              : patient.gender === 'M'\n              ? 'is-male'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'transmission':\n        return (patient) => {\n          return `patient-card ${\n            patient.typeoftransmission === 'Local'\n              ? 'is-local'\n              : patient.typeoftransmission === 'Imported'\n              ? 'is-imported'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'nationality':\n        return (patient) => {\n          return `patient-card ${\n            patient.nationality === 'India'\n              ? 'is-in'\n              : patient.nationality === 'Myanmar'\n              ? 'is-mm'\n              : patient.nationality === 'Indonesia'\n              ? 'is-id'\n              : patient.nationality === 'United Kingdom'\n              ? 'is-uk'\n              : patient.nationality === 'United States of America'\n              ? 'is-us'\n              : patient.nationality === 'Thailand'\n              ? 'is-th'\n              : patient.nationality === 'Phillipines'\n              ? 'is-ph'\n              : patient.nationality === 'Italy'\n              ? 'is-it'\n              : patient.nationality === 'Canada'\n              ? 'is-ca'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'age':\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n      default:\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PatientsView\n        logs={logs}\n        setModal={setModal}\n        setPatient={setPatient}\n        expand={props.expand}\n        applyClass={getClassNameFn(props.colorMode)}\n      />\n\n      {modal && (\n        <div className=\"modal\" id=\"modal\">\n          <div\n            className={`modal-content ${modal ? 'fadeInUp' : 'fadeOutDown'}`}\n          >\n            <div className=\"close-button\">\n              <Icon.XCircle\n                onClick={() => {\n                  setModal(false);\n                }}\n              />\n            </div>\n\n            <div className=\"modal-top\">\n              <h1>#{patient.patientnumber}</h1>\n            </div>\n\n            <div className=\"meta\">\n              <h5>Date Announced</h5>\n              <h3>{patient.dateannounced ? patient.dateannounced : '?'}</h3>\n\n              <h5>Contracted from</h5>\n              <h3\n                className=\"contracted-from\"\n                onClick={() => {\n                  switchPatient(patient.contractedfromwhichpatientsuspected);\n                }}\n              >\n                {patient.contractedfromwhichpatientsuspected\n                  ? patient.contractedfromwhichpatientsuspected\n                  : '?'}\n              </h3>\n\n              <h5>Detected City</h5>\n              <h3>{patient.detectedcity ? patient.detectedcity : '?'}</h3>\n\n              <h5>Detected District</h5>\n              <h3>\n                {patient.detecteddistrict ? patient.detecteddistrict : '?'}\n              </h3>\n\n              <h5>Detected State</h5>\n              <h3>{patient.detectedstate ? patient.detectedstate : '?'}</h3>\n\n              <h5>Nationality</h5>\n              <h3>{patient.nationality ? patient.nationality : '?'}</h3>\n\n              <h5>Age</h5>\n              <h3>{patient.agebracket ? patient.agebracket : '?'}</h3>\n\n              <h5>Gender</h5>\n              <h3>{patient.gender ? patient.gender : '?'}</h3>\n\n              <h5>State Patient Number</h5>\n              <h3>\n                {patient.statepatientnumber ? patient.statepatientnumber : '?'}\n              </h3>\n\n              <h5>Type of transmission</h5>\n              <h3>\n                {patient.typeoftransmission ? patient.typeoftransmission : '?'}\n              </h3>\n            </div>\n\n            <div className=\"notes\">\n              <h5>Notes</h5>\n              <h3>{patient.notes}</h3>\n            </div>\n\n            <h5>Source 1</h5>\n            <div className=\"link\">\n              <a href={patient.source1} target=\"_noblank\">\n                {patient.source1}\n              </a>\n            </div>\n\n            <h5>Source 2</h5>\n            <div className=\"link\">\n              <a href={patient.source2} target=\"_noblank\">\n                {patient.source2}\n              </a>\n            </div>\n\n            <h5>Source 3</h5>\n            <div className=\"link\">\n              <a href={patient.source3} target=\"_noblank\">\n                {patient.source3}\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Patients;\n"]},"metadata":{},"sourceType":"module"}