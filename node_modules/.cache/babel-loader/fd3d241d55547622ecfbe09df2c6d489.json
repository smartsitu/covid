{"ast":null,"code":"var _jsxFileName = \"/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/components/timeseriesexplorer.js\";\nimport TimeSeries from './timeseries';\nimport React from 'react';\nimport * as Icon from 'react-feather';\nimport { useLocalStorage } from 'react-use';\n\nfunction TimeSeriesExplorer({\n  timeseries,\n  activeStateCode,\n  onHighlightState,\n  states,\n  anchor,\n  setAnchor\n}) {\n  const [graphOption, setGraphOption] = useLocalStorage('timeseriesGraphOption', 1);\n  const [timeseriesMode, setTimeseriesMode] = useLocalStorage('timeseriesMode', true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useLocalStorage('timeseriesLogMode', false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `TimeSeriesExplorer ${anchor === 'timeseries' ? 'stickied' : ''}`,\n    style: {\n      display: anchor === 'mapexplorer' ? 'none' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeseries-header fadeInUp\",\n    style: {\n      animationDelay: '2.5s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, window.innerWidth > 769 && anchor !== undefined && /*#__PURE__*/React.createElement(\"div\", {\n    className: `anchor ${anchor === 'timeseries' ? 'stickied' : ''}`,\n    onClick: () => {\n      setAnchor(anchor === 'timeseries' ? null : 'timeseries');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon.Anchor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Spread Trends\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `tab ${graphOption === 1 ? 'focused' : ''}`,\n    onClick: () => {\n      setGraphOption(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Cumulative\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `tab ${graphOption === 2 ? 'focused' : ''}`,\n    onClick: () => {\n      setGraphOption(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Daily\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scale-modes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Scale Modes\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeseries-mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"timeseries-mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Uniform\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"timeseries-mode\",\n    type: \"checkbox\",\n    checked: timeseriesMode,\n    className: \"switch\",\n    \"aria-label\": \"Checked by default to scale uniformly.\",\n    onChange: event => {\n      setTimeseriesMode(!timeseriesMode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `timeseries-logmode ${graphOption !== 1 ? 'disabled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"timeseries-logmode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Logarithmic\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"timeseries-logmode\",\n    type: \"checkbox\",\n    checked: graphOption === 1 && timeseriesLogMode,\n    className: \"switch\",\n    disabled: graphOption !== 1,\n    onChange: event => {\n      setTimeseriesLogMode(!timeseriesLogMode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }))), states && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trends-state-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: activeStateCode,\n    onChange: ({\n      target\n    }) => {\n      const selectedState = target.selectedOptions[0].getAttribute('statedata');\n      onHighlightState(JSON.parse(selectedState));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, states.map(s => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: s.statecode,\n      key: s.statecode,\n      statedata: JSON.stringify(s),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, s.statecode === 'TT' ? 'All States' : s.state);\n  })))), /*#__PURE__*/React.createElement(TimeSeries, {\n    timeseries: timeseries,\n    type: graphOption,\n    mode: timeseriesMode,\n    logMode: timeseriesLogMode,\n    isTotal: activeStateCode === 'TT',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default React.memo(TimeSeriesExplorer);","map":{"version":3,"sources":["/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/components/timeseriesexplorer.js"],"names":["TimeSeries","React","Icon","useLocalStorage","TimeSeriesExplorer","timeseries","activeStateCode","onHighlightState","states","anchor","setAnchor","graphOption","setGraphOption","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","display","animationDelay","window","innerWidth","undefined","event","target","selectedState","selectedOptions","getAttribute","JSON","parse","map","s","statecode","stringify","state","memo"],"mappings":"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","sourcesContent":["import TimeSeries from './timeseries';\n\nimport React from 'react';\nimport * as Icon from 'react-feather';\nimport {useLocalStorage} from 'react-use';\n\nfunction TimeSeriesExplorer({\n  timeseries,\n  activeStateCode,\n  onHighlightState,\n  states,\n  anchor,\n  setAnchor,\n}) {\n  const [graphOption, setGraphOption] = useLocalStorage(\n    'timeseriesGraphOption',\n    1\n  );\n\n  const [timeseriesMode, setTimeseriesMode] = useLocalStorage(\n    'timeseriesMode',\n    true\n  );\n  const [timeseriesLogMode, setTimeseriesLogMode] = useLocalStorage(\n    'timeseriesLogMode',\n    false\n  );\n\n  return (\n    <div\n      className={`TimeSeriesExplorer ${\n        anchor === 'timeseries' ? 'stickied' : ''\n      }`}\n      style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n    >\n      <div\n        className=\"timeseries-header fadeInUp\"\n        style={{animationDelay: '2.5s'}}\n      >\n        {window.innerWidth > 769 && anchor !== undefined && (\n          <div\n            className={`anchor ${anchor === 'timeseries' ? 'stickied' : ''}`}\n            onClick={() => {\n              setAnchor(anchor === 'timeseries' ? null : 'timeseries');\n            }}\n          >\n            <Icon.Anchor />\n          </div>\n        )}\n\n        <h1>Spread Trends</h1>\n        <div className=\"tabs\">\n          <div\n            className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n            onClick={() => {\n              setGraphOption(1);\n            }}\n          >\n            <h4>Cumulative</h4>\n          </div>\n          <div\n            className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n            onClick={() => {\n              setGraphOption(2);\n            }}\n          >\n            <h4>Daily</h4>\n          </div>\n        </div>\n\n        <div className=\"scale-modes\">\n          <label className=\"main\">Scale Modes</label>\n          <div className=\"timeseries-mode\">\n            <label htmlFor=\"timeseries-mode\">Uniform</label>\n            <input\n              id=\"timeseries-mode\"\n              type=\"checkbox\"\n              checked={timeseriesMode}\n              className=\"switch\"\n              aria-label=\"Checked by default to scale uniformly.\"\n              onChange={(event) => {\n                setTimeseriesMode(!timeseriesMode);\n              }}\n            />\n          </div>\n          <div\n            className={`timeseries-logmode ${\n              graphOption !== 1 ? 'disabled' : ''\n            }`}\n          >\n            <label htmlFor=\"timeseries-logmode\">Logarithmic</label>\n            <input\n              id=\"timeseries-logmode\"\n              type=\"checkbox\"\n              checked={graphOption === 1 && timeseriesLogMode}\n              className=\"switch\"\n              disabled={graphOption !== 1}\n              onChange={(event) => {\n                setTimeseriesLogMode(!timeseriesLogMode);\n              }}\n            />\n          </div>\n        </div>\n\n        {states && (\n          <div className=\"trends-state-name\">\n            <select\n              value={activeStateCode}\n              onChange={({target}) => {\n                const selectedState = target.selectedOptions[0].getAttribute(\n                  'statedata'\n                );\n                onHighlightState(JSON.parse(selectedState));\n              }}\n            >\n              {states.map((s) => {\n                return (\n                  <option\n                    value={s.statecode}\n                    key={s.statecode}\n                    statedata={JSON.stringify(s)}\n                  >\n                    {s.statecode === 'TT' ? 'All States' : s.state}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        )}\n      </div>\n\n      <TimeSeries\n        timeseries={timeseries}\n        type={graphOption}\n        mode={timeseriesMode}\n        logMode={timeseriesLogMode}\n        isTotal={activeStateCode === 'TT'}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(TimeSeriesExplorer);\n"]},"metadata":{},"sourceType":"module"}