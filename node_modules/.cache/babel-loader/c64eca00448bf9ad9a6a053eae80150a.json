{"ast":null,"code":"var _jsxFileName = \"/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/components/patientsview.js\";\nimport { format } from 'date-fns';\nimport React from 'react';\n\nfunction PatientsView({\n  logs,\n  summary,\n  setModal,\n  setPatient,\n  expand,\n  applyClass\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Patients fadeInUp\",\n    style: {\n      animationDelay: '1s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, Object.keys(logs).slice(summary ? -1 : 0).map((day, index) => {\n    if (day !== 'Invalid Date') {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"daylabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, format(new Date(day), 'dd MMM, yyyy'), ' ', '(' + logs[day].length + ')'), /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: `day ${summary ? 'summary' : ''}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, logs[day].slice(summary ? -40 : 0).map((patient, indexTwo) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: indexTwo,\n          className: applyClass(patient),\n          onClick: () => {\n            setModal(true);\n            setPatient(patient);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 27\n          }\n        }, expand ? `P${patient.patientnumber}` : ''));\n      })));\n    } else {\n      return null;\n    }\n  }));\n}\n\nexport default PatientsView;","map":{"version":3,"sources":["/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/components/patientsview.js"],"names":["format","React","PatientsView","logs","summary","setModal","setPatient","expand","applyClass","animationDelay","Object","keys","slice","map","day","index","Date","length","patient","indexTwo","patientnumber"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,UAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,CAAsB;AACpBC,EAAAA,IADoB;AAEpBC,EAAAA,OAFoB;AAGpBC,EAAAA,QAHoB;AAIpBC,EAAAA,UAJoB;AAKpBC,EAAAA,MALoB;AAMpBC,EAAAA;AANoB,CAAtB,EAOG;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,KAAK,EAAE;AAACC,MAAAA,cAAc,EAAE;AAAjB,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,IAAP,CAAYR,IAAZ,EACES,KADF,CACQR,OAAO,GAAG,CAAC,CAAJ,GAAQ,CADvB,EAEES,GAFF,CAEM,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACnB,QAAID,GAAG,KAAK,cAAZ,EAA4B;AAC1B,0BACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,EAAEC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGf,MAAM,CAAC,IAAIgB,IAAJ,CAASF,GAAT,CAAD,EAAgB,cAAhB,CADT,EAC0C,GAD1C,EAEG,MAAMX,IAAI,CAACW,GAAD,CAAJ,CAAUG,MAAhB,GAAyB,GAF5B,CADF,eAKE;AAAK,QAAA,GAAG,EAAEF,KAAV;AAAiB,QAAA,SAAS,EAAG,OAAMX,OAAO,GAAG,SAAH,GAAe,EAAG,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACW,GAAD,CAAJ,CACEF,KADF,CACQR,OAAO,GAAG,CAAC,EAAJ,GAAS,CADxB,EAEES,GAFF,CAEM,CAACK,OAAD,EAAUC,QAAV,KAAuB;AAC1B,4BACE;AACE,UAAA,GAAG,EAAEA,QADP;AAEE,UAAA,SAAS,EAAEX,UAAU,CAACU,OAAD,CAFvB;AAGE,UAAA,OAAO,EAAE,MAAM;AACbb,YAAAA,QAAQ,CAAC,IAAD,CAAR;AACAC,YAAAA,UAAU,CAACY,OAAD,CAAV;AACD,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKX,MAAM,GAAI,IAAGW,OAAO,CAACE,aAAc,EAA7B,GAAiC,EAA5C,CARF,CADF;AAYD,OAfF,CADH,CALF,CADF;AA0BD,KA3BD,MA2BO;AACL,aAAO,IAAP;AACD;AACF,GAjCF,CADH,CADF;AAsCD;;AAED,eAAelB,YAAf","sourcesContent":["import {format} from 'date-fns';\nimport React from 'react';\n\nfunction PatientsView({\n  logs,\n  summary,\n  setModal,\n  setPatient,\n  expand,\n  applyClass,\n}) {\n  return (\n    <div className=\"Patients fadeInUp\" style={{animationDelay: '1s'}}>\n      {Object.keys(logs)\n        .slice(summary ? -1 : 0)\n        .map((day, index) => {\n          if (day !== 'Invalid Date') {\n            return (\n              <React.Fragment key={index}>\n                <h5 className=\"daylabel\">\n                  {format(new Date(day), 'dd MMM, yyyy')}{' '}\n                  {'(' + logs[day].length + ')'}\n                </h5>\n                <div key={index} className={`day ${summary ? 'summary' : ''}`}>\n                  {logs[day]\n                    .slice(summary ? -40 : 0)\n                    .map((patient, indexTwo) => {\n                      return (\n                        <div\n                          key={indexTwo}\n                          className={applyClass(patient)}\n                          onClick={() => {\n                            setModal(true);\n                            setPatient(patient);\n                          }}\n                        >\n                          <h3>{expand ? `P${patient.patientnumber}` : ''}</h3>\n                        </div>\n                      );\n                    })}\n                </div>\n              </React.Fragment>\n            );\n          } else {\n            return null;\n          }\n        })}\n    </div>\n  );\n}\n\nexport default PatientsView;\n"]},"metadata":{},"sourceType":"module"}