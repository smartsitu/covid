{"ast":null,"code":"if (process.env.NODE_ENV !== 'production') {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    throw new Error('React Native does not have a built-in secure random generator. ' + 'If you don’t need unpredictable IDs, you can use `nanoid/non-secure`. ' + 'For secure ID install `expo-random` locally and use `nanoid/async`.');\n  }\n\n  if (typeof self === 'undefined' || !self.crypto && !self.msCrypto) {\n    throw new Error('Your browser does not have secure random generator. ' + 'If you don’t need unpredictable IDs, you can use nanoid/non-secure.');\n  }\n}\n\nvar crypto = self.crypto || self.msCrypto;\n/*\n * This alphabet uses a-z A-Z 0-9 _- symbols.\n * Symbols order was changed for better gzip compression.\n */\n\nvar url = 'Uint8ArdomValuesObj012345679BCDEFGHIJKLMNPQRSTWXYZ_cfghkpqvwxyz-';\n\nmodule.exports = function (size) {\n  size = size || 21;\n  var id = '';\n  var bytes = crypto.getRandomValues(new Uint8Array(size));\n\n  while (size--) {\n    id += url[bytes[size] & 63];\n  }\n\n  return id;\n};","map":{"version":3,"sources":["/Users/maclaptop/Documents/GitHub/ashokpandey.com/node_modules/nanoid/index.browser.js"],"names":["process","env","NODE_ENV","navigator","product","Error","self","crypto","msCrypto","url","module","exports","size","id","bytes","getRandomValues","Uint8Array"],"mappings":"AAAA,IAAIA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAAS,CAACC,OAAV,KAAsB,aAA9D,EAA6E;AAC3E,UAAM,IAAIC,KAAJ,CACJ,oEACA,wEADA,GAEA,qEAHI,CAAN;AAKD;;AACD,MAAI,OAAOC,IAAP,KAAgB,WAAhB,IAAgC,CAACA,IAAI,CAACC,MAAN,IAAgB,CAACD,IAAI,CAACE,QAA1D,EAAqE;AACnE,UAAM,IAAIH,KAAJ,CACJ,yDACA,qEAFI,CAAN;AAID;AACF;;AAED,IAAIE,MAAM,GAAGD,IAAI,CAACC,MAAL,IAAeD,IAAI,CAACE,QAAjC;AAEA;;;;;AAIA,IAAIC,GAAG,GAAG,kEAAV;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/BA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,MAAIC,EAAE,GAAG,EAAT;AACA,MAAIC,KAAK,GAAGP,MAAM,CAACQ,eAAP,CAAuB,IAAIC,UAAJ,CAAeJ,IAAf,CAAvB,CAAZ;;AACA,SAAOA,IAAI,EAAX,EAAe;AACbC,IAAAA,EAAE,IAAIJ,GAAG,CAACK,KAAK,CAACF,IAAD,CAAL,GAAc,EAAf,CAAT;AACD;;AACD,SAAOC,EAAP;AACD,CARD","sourcesContent":["if (process.env.NODE_ENV !== 'production') {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n      'If you don’t need unpredictable IDs, you can use `nanoid/non-secure`. ' +\n      'For secure ID install `expo-random` locally and use `nanoid/async`.'\n    )\n  }\n  if (typeof self === 'undefined' || (!self.crypto && !self.msCrypto)) {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n      'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nvar crypto = self.crypto || self.msCrypto\n\n/*\n * This alphabet uses a-z A-Z 0-9 _- symbols.\n * Symbols order was changed for better gzip compression.\n */\nvar url = 'Uint8ArdomValuesObj012345679BCDEFGHIJKLMNPQRSTWXYZ_cfghkpqvwxyz-'\n\nmodule.exports = function (size) {\n  size = size || 21\n  var id = ''\n  var bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += url[bytes[size] & 63]\n  }\n  return id\n}\n"]},"metadata":{},"sourceType":"script"}