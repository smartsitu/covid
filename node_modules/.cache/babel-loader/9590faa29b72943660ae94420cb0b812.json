{"ast":null,"code":"import deepmerge from 'deepmerge';\nimport { defaults } from 'react-chartjs-2';\ndefaults.global = deepmerge(defaults.global, {\n  defaultFontFamily: 'Archia',\n  elements: {\n    line: {\n      fill: false\n    },\n    point: {\n      pointStyle: 'rectRounded'\n    }\n  },\n  tooltips: {\n    intersect: false,\n    mode: 'nearest',\n    position: 'average',\n    displayColors: false,\n    borderWidth: 0,\n    titleSpacing: 4,\n    titleMarginBottom: 8,\n    bodySpacing: 5,\n    cornerRadius: 3,\n    xPadding: 6,\n    yPadding: 6,\n    caretSize: 0\n  },\n  legend: {\n    display: true,\n    position: 'bottom',\n    labels: {\n      padding: 15,\n      usePointStyle: true\n    }\n  },\n  hover: {\n    intersect: false\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 20\n    }\n  }\n});\n\nconst formatNumber = number => 'Intl' in window ? new Intl.NumberFormat('en-IN').format(number) : number;\n\nconst defaultOptions = {\n  responsive: true,\n  events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n  maintainAspectRatio: false,\n  tooltips: {\n    backgroundColor: 'rgba(20,20,20,0.9)',\n    titleFontColor: 'rgba(255,255,255, 0.9)',\n    bodyFontColor: 'rgba(255,255,255, 0.9)',\n    caretSize: 0,\n    borderWidth: 0,\n    mode: 'index',\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += formatNumber(Math.round(tooltipItem.yLabel * 100) / 100);\n        return label;\n      }\n    }\n  },\n  elements: {\n    point: {\n      radius: 0\n    },\n    line: {\n      tension: 0.1\n    }\n  }\n};\nconst yAxisDefaults = {\n  type: 'linear',\n  ticks: {\n    beginAtZero: true,\n    max: undefined,\n    precision: 0,\n    callback: value => formatNumber(value)\n  },\n  gridLines: {\n    color: 'rgba(0, 0, 0, 0.07)',\n    drawBorder: false,\n    tickMarkLength: 6\n  }\n};\nconst xAxisDefaults = {\n  gridLines: {\n    color: 'rgba(0, 0, 0, 0)'\n  }\n};\nexport { defaultOptions, formatNumber, yAxisDefaults, xAxisDefaults };","map":{"version":3,"sources":["/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/components/Charts/chart-defaults.js"],"names":["deepmerge","defaults","global","defaultFontFamily","elements","line","fill","point","pointStyle","tooltips","intersect","mode","position","displayColors","borderWidth","titleSpacing","titleMarginBottom","bodySpacing","cornerRadius","xPadding","yPadding","caretSize","legend","display","labels","padding","usePointStyle","hover","layout","left","right","top","bottom","formatNumber","number","window","Intl","NumberFormat","format","defaultOptions","responsive","events","maintainAspectRatio","backgroundColor","titleFontColor","bodyFontColor","callbacks","label","tooltipItem","data","datasets","datasetIndex","Math","round","yLabel","radius","tension","yAxisDefaults","type","ticks","beginAtZero","max","undefined","precision","callback","value","gridLines","color","drawBorder","tickMarkLength","xAxisDefaults"],"mappings":"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","sourcesContent":["import deepmerge from 'deepmerge';\nimport {defaults} from 'react-chartjs-2';\n\ndefaults.global = deepmerge(defaults.global, {\n  defaultFontFamily: 'Archia',\n  elements: {\n    line: {\n      fill: false,\n    },\n    point: {\n      pointStyle: 'rectRounded',\n    },\n  },\n  tooltips: {\n    intersect: false,\n    mode: 'nearest',\n    position: 'average',\n    displayColors: false,\n    borderWidth: 0,\n    titleSpacing: 4,\n    titleMarginBottom: 8,\n    bodySpacing: 5,\n    cornerRadius: 3,\n    xPadding: 6,\n    yPadding: 6,\n    caretSize: 0,\n  },\n  legend: {\n    display: true,\n    position: 'bottom',\n    labels: {\n      padding: 15,\n      usePointStyle: true,\n    },\n  },\n  hover: {\n    intersect: false,\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 20,\n    },\n  },\n});\n\nconst formatNumber = (number) =>\n  'Intl' in window ? new Intl.NumberFormat('en-IN').format(number) : number;\n\nconst defaultOptions = {\n  responsive: true,\n  events: [\n    'click',\n    'mousemove',\n    'mouseout',\n    'touchstart',\n    'touchmove',\n    'touchend',\n  ],\n  maintainAspectRatio: false,\n  tooltips: {\n    backgroundColor: 'rgba(20,20,20,0.9)',\n    titleFontColor: 'rgba(255,255,255, 0.9)',\n    bodyFontColor: 'rgba(255,255,255, 0.9)',\n    caretSize: 0,\n    borderWidth: 0,\n    mode: 'index',\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let label = data.datasets[tooltipItem.datasetIndex].label || '';\n        if (label) {\n          label += ': ';\n        }\n        label += formatNumber(Math.round(tooltipItem.yLabel * 100) / 100);\n        return label;\n      },\n    },\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n    line: {\n      tension: 0.1,\n    },\n  },\n};\n\nconst yAxisDefaults = {\n  type: 'linear',\n  ticks: {\n    beginAtZero: true,\n    max: undefined,\n    precision: 0,\n    callback: (value) => formatNumber(value),\n  },\n  gridLines: {\n    color: 'rgba(0, 0, 0, 0.07)',\n    drawBorder: false,\n    tickMarkLength: 6,\n  },\n};\n\nconst xAxisDefaults = {\n  gridLines: {\n    color: 'rgba(0, 0, 0, 0)',\n  },\n};\n\nexport {defaultOptions, formatNumber, yAxisDefaults, xAxisDefaults};\n"]},"metadata":{},"sourceType":"module"}