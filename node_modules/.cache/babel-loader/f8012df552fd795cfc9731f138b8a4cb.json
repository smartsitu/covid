{"ast":null,"code":"import { ResizeObserver } from '@juggle/resize-observer';\nimport { useState, useEffect } from 'react';\nexport const useResizeObserver = ref => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};","map":{"version":3,"sources":["/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/utils/hooks.js"],"names":["ResizeObserver","useState","useEffect","useResizeObserver","ref","dimensions","setDimensions","observeTarget","current","resizeObserver","entries","observer","forEach","entry","index","contentRect","observe","unobserve"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,yBAA7B;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,GAAD,IAAS;AACxC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,IAAD,CAA5C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,aAAa,GAAGH,GAAG,CAACI,OAA1B;AACA,UAAMC,cAAc,GAAG,IAAIT,cAAJ,CAAmB,CAACU,OAAD,EAAUC,QAAV,KAAuB;AAC/DD,MAAAA,OAAO,CAACE,OAAR,CAAgB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAChCR,QAAAA,aAAa,CAACO,KAAK,CAACE,WAAP,CAAb;AACD,OAFD;AAGD,KAJsB,CAAvB;AAKAN,IAAAA,cAAc,CAACO,OAAf,CAAuBT,aAAvB;AACA,WAAO,MAAM;AACXE,MAAAA,cAAc,CAACQ,SAAf,CAAyBV,aAAzB;AACD,KAFD;AAGD,GAXQ,EAWN,CAACH,GAAD,CAXM,CAAT;AAYA,SAAOC,UAAP;AACD,CAfM","sourcesContent":["import {ResizeObserver} from '@juggle/resize-observer';\nimport {useState, useEffect} from 'react';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n"]},"metadata":{},"sourceType":"module"}