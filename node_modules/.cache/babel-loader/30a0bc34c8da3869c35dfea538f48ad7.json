{"ast":null,"code":"var _jsxFileName = \"/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/components/Essentials/essentialsaccordionmobile.js\";\nimport { getFormattedLinkForAccordion, parseText, getHighlightedText } from './essentialsutls';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nconst usePanelSummaryStyles = makeStyles(theme => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  root: {\n    backgroundColor: '#201aa220',\n    height: '4rem'\n  }\n}));\nconst usePanelDetailsStyles = makeStyles(theme => ({\n  root: {\n    padding: '0px 5px 0px 24px'\n  }\n}));\nconst useListStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  }\n}));\nconst usePanelStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginBottom: '0.2rem'\n  }\n}));\nconst useItemTextStyles = makeStyles(theme => ({\n  primary: {\n    fontFamily: 'Archia',\n    fontWeight: 500,\n    fontStyle: 'normal',\n    fontSize: '13px',\n    fontTransform: 'uppercase'\n  },\n  secondary: {\n    fontFamily: 'Archia',\n    fontWeight: 400,\n    fontStyle: 'normal',\n    fontSize: '12px',\n    width: '100%',\n    wordWrap: 'break-word' // fontTransform: 'uppercase'\n\n  }\n}));\n\nfunction TableAccordion({\n  rows,\n  searchValue\n}) {\n  const classesPannelSummary = usePanelSummaryStyles();\n  const classesPanel = usePanelStyles();\n  const classesListItemText = useItemTextStyles();\n  const classesPanelDetails = usePanelDetailsStyles();\n  const classesList = useListStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpansionChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, rows.map((row, i) => {\n    return /*#__PURE__*/React.createElement(ExpansionPanel, {\n      key: i,\n      classes: {\n        root: classesPanel.root\n      },\n      expanded: expanded === `panel-${i}`,\n      onChange: handleExpansionChange(`panel-${i}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n      classes: {\n        content: classesPannelSummary.content,\n        root: classesPannelSummary.root\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"orgname\",\n      style: {\n        maxWidth: '10rem',\n        textAlign: 'start',\n        color: '#201aa2dd'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, parseText(row.values['nameoftheorganisation'], 50))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"orgcategory\",\n      style: {\n        maxWidth: '10.9rem',\n        textAlign: 'end'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, row.values['category']))), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n      classes: {\n        root: classesPanelDetails.root\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      disablePadding: true,\n      dense: true,\n      classes: {\n        root: classesList.root\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      dense: true,\n      divider: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Organisation Name\",\n      secondary: getHighlightedText(row.values['nameoftheorganisation'], searchValue, 'mobile'),\n      classes: {\n        primary: classesListItemText.primary,\n        secondary: classesListItemText.secondary\n      },\n      secondaryTypographyProps: {\n        component: 'a',\n        href: row.values.contact,\n        target: '_blank',\n        rel: 'noopener noreferrer',\n        color: 'blue'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      dense: true,\n      divider: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Location\",\n      secondary: getHighlightedText(row.values['city'], searchValue, 'mobile'),\n      classes: {\n        primary: classesListItemText.primary,\n        secondary: classesListItemText.secondary\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      dense: true,\n      divider: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Description\",\n      secondary: getHighlightedText(row.values['descriptionandorserviceprovided'], searchValue, 'mobile'),\n      classes: {\n        primary: classesListItemText.primary,\n        secondary: classesListItemText.secondary\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      dense: true,\n      divider: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Service\",\n      secondary: getHighlightedText(row.values['category'], searchValue, 'mobile'),\n      classes: {\n        primary: classesListItemText.primary,\n        secondary: classesListItemText.secondary\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      dense: true,\n      divider: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Phonenumber\",\n      secondary: getFormattedLinkForAccordion(row.values['phonenumber']),\n      classes: {\n        primary: classesListItemText.primary,\n        secondary: classesListItemText.secondary\n      },\n      secondaryTypographyProps: {\n        component: 'span'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    })))));\n  }));\n}\n\nexport default TableAccordion;","map":{"version":3,"sources":["/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/components/Essentials/essentialsaccordionmobile.js"],"names":["getFormattedLinkForAccordion","parseText","getHighlightedText","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","List","ListItem","ListItemText","makeStyles","React","usePanelSummaryStyles","theme","content","display","flexDirection","justifyContent","root","backgroundColor","height","usePanelDetailsStyles","padding","useListStyles","width","usePanelStyles","marginBottom","useItemTextStyles","primary","fontFamily","fontWeight","fontStyle","fontSize","fontTransform","secondary","wordWrap","TableAccordion","rows","searchValue","classesPannelSummary","classesPanel","classesListItemText","classesPanelDetails","classesList","expanded","setExpanded","useState","handleExpansionChange","panel","event","isExpanded","map","row","i","maxWidth","textAlign","color","values","component","href","contact","target","rel"],"mappings":"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","sourcesContent":["import {\n  getFormattedLinkForAccordion,\n  parseText,\n  getHighlightedText,\n} from './essentialsutls';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {makeStyles} from '@material-ui/core/styles';\nimport React from 'react';\n\nconst usePanelSummaryStyles = makeStyles((theme) => ({\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  root: {\n    backgroundColor: '#201aa220',\n    height: '4rem',\n  },\n}));\nconst usePanelDetailsStyles = makeStyles((theme) => ({\n  root: {\n    padding: '0px 5px 0px 24px',\n  },\n}));\nconst useListStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n}));\n\nconst usePanelStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    marginBottom: '0.2rem',\n  },\n}));\nconst useItemTextStyles = makeStyles((theme) => ({\n  primary: {\n    fontFamily: 'Archia',\n    fontWeight: 500,\n    fontStyle: 'normal',\n    fontSize: '13px',\n    fontTransform: 'uppercase',\n  },\n  secondary: {\n    fontFamily: 'Archia',\n    fontWeight: 400,\n    fontStyle: 'normal',\n    fontSize: '12px',\n    width: '100%',\n    wordWrap: 'break-word',\n    // fontTransform: 'uppercase'\n  },\n}));\n\nfunction TableAccordion({rows, searchValue}) {\n  const classesPannelSummary = usePanelSummaryStyles();\n  const classesPanel = usePanelStyles();\n  const classesListItemText = useItemTextStyles();\n  const classesPanelDetails = usePanelDetailsStyles();\n  const classesList = useListStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpansionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  return (\n    <React.Fragment>\n      {rows.map((row, i) => {\n        return (\n          <ExpansionPanel\n            key={i}\n            classes={{root: classesPanel.root}}\n            expanded={expanded === `panel-${i}`}\n            onChange={handleExpansionChange(`panel-${i}`)}\n          >\n            <ExpansionPanelSummary\n              classes={{\n                content: classesPannelSummary.content,\n                root: classesPannelSummary.root,\n              }}\n            >\n              <div\n                className=\"orgname\"\n                style={{\n                  maxWidth: '10rem',\n                  textAlign: 'start',\n                  color: '#201aa2dd',\n                }}\n              >\n                <h6>{parseText(row.values['nameoftheorganisation'], 50)}</h6>\n              </div>\n              <div\n                className=\"orgcategory\"\n                style={{maxWidth: '10.9rem', textAlign: 'end'}}\n              >\n                <h6>{row.values['category']}</h6>\n              </div>\n              {/* </div> */}\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails classes={{root: classesPanelDetails.root}}>\n              <List\n                disablePadding={true}\n                dense={true}\n                classes={{root: classesList.root}}\n              >\n                <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                  <ListItemText\n                    primary=\"Organisation Name\"\n                    secondary={getHighlightedText(\n                      row.values['nameoftheorganisation'],\n                      searchValue,\n                      'mobile'\n                    )}\n                    classes={{\n                      primary: classesListItemText.primary,\n                      secondary: classesListItemText.secondary,\n                    }}\n                    secondaryTypographyProps={{\n                      component: 'a',\n                      href: row.values.contact,\n                      target: '_blank',\n                      rel: 'noopener noreferrer',\n                      color: 'blue',\n                    }}\n                  />\n                </ListItem>\n                <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                  <ListItemText\n                    primary=\"Location\"\n                    secondary={getHighlightedText(\n                      row.values['city'],\n                      searchValue,\n                      'mobile'\n                    )}\n                    classes={{\n                      primary: classesListItemText.primary,\n                      secondary: classesListItemText.secondary,\n                    }}\n                  />\n                </ListItem>\n                <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                  <ListItemText\n                    primary=\"Description\"\n                    secondary={getHighlightedText(\n                      row.values['descriptionandorserviceprovided'],\n                      searchValue,\n                      'mobile'\n                    )}\n                    classes={{\n                      primary: classesListItemText.primary,\n                      secondary: classesListItemText.secondary,\n                    }}\n                  />\n                </ListItem>\n                <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                  <ListItemText\n                    primary=\"Service\"\n                    secondary={getHighlightedText(\n                      row.values['category'],\n                      searchValue,\n                      'mobile'\n                    )}\n                    classes={{\n                      primary: classesListItemText.primary,\n                      secondary: classesListItemText.secondary,\n                    }}\n                  />\n                </ListItem>\n                <ListItem alignItems=\"flex-start\" dense={true} divider={true}>\n                  <ListItemText\n                    primary=\"Phonenumber\"\n                    secondary={getFormattedLinkForAccordion(\n                      row.values['phonenumber']\n                    )}\n                    classes={{\n                      primary: classesListItemText.primary,\n                      secondary: classesListItemText.secondary,\n                    }}\n                    secondaryTypographyProps={{component: 'span'}}\n                  />\n                </ListItem>\n              </List>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        );\n      })}\n    </React.Fragment>\n  );\n}\n\nexport default TableAccordion;\n"]},"metadata":{},"sourceType":"module"}