{"ast":null,"code":"var _jsxFileName = \"/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/components/Essentials/essentialsutls.js\";\nimport React from 'react';\nexport const getNumbersLink = initialValue => {\n  // const phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n  const numbf = initialValue.split(',');\n  const numberList = numbf.map(el => {\n    return `<a href=\"tel:${el}\">${el}</a>`;\n  }); // const numbg = /^\\d{3,12}$/g;\n  // const numberList = numbf.map((iv, i) => {\n  //   iv = iv.trim();\n  //   return iv.replace(numbg, '<a href=\"tel:$&\">$&</a>');\n  // });\n\n  return {\n    numberList\n  };\n};\nexport const getFormattedLinkForAccordion = initialValue => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tablecelldata\",\n    dangerouslySetInnerHTML: {\n      __html: getFormattedLink(initialValue)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  });\n};\nexport const getFormattedLink = initialValue => {\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g; // let reurl2 = /\\s*.(www\\..+)\\s/g\n\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\n  const noLetters = /^[\\d,\\s]+$/;\n  let s3 = '';\n\n  if (initialValue.match(noLetters) != null) {\n    const formatedLink = getNumbersLink(initialValue);\n    const links = JSON.parse(JSON.stringify(formatedLink));\n    s3 = String(links.numberList).replace(/,/g, '<br>');\n  } else {\n    const s1 = initialValue.replace(reurl1, '<a href=\"$1\" target=\"_blank\">Link</a>');\n    const s2 = s1.replace(reinsta, '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>');\n    s3 = s2.replace(refb, '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>');\n  }\n\n  return s3;\n};\n\nconst customJoinHighlight = (list, joinVals) => {\n  let result = '';\n  let i = 0;\n\n  for (i = 0; i < list.length - 1; i++) {\n    result += list[i] + '<span style=\"background-color: yellow\">' + joinVals[i] + '</span>';\n  }\n\n  result += list[i];\n  return result;\n};\n\nconst customJoinHighlightMobile = (list, joinVals) => {\n  const result = [];\n  let i = 0;\n\n  for (i = 0; i < list.length - 1; i++) {\n    result.push( /*#__PURE__*/React.createElement(\"span\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, list[i]));\n    result.push( /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        backgroundColor: 'yellow'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, joinVals[i]));\n  }\n\n  result.push( /*#__PURE__*/React.createElement(\"span\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, list[i]));\n  return result;\n};\n\nexport const getHighlightedText = (text, searchValue, type) => {\n  // uses searchValue state!!\n  if (searchValue === '') {\n    return text;\n  }\n\n  const regexObject = new RegExp(searchValue, 'gi');\n  const parts = text.split(regexObject);\n\n  if (parts.length === 1) {\n    return text;\n  } else {\n    const matches = [...text.matchAll(regexObject)];\n\n    if (type === 'desktop') {\n      return customJoinHighlight(parts, matches);\n    } else {\n      return customJoinHighlightMobile(parts, matches);\n    }\n  }\n}; // searchbar stuff\n\nexport const getSuggestions = (value, resources) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  return inputLength === 0 ? resources : resources.filter(resource => resource.category.toLowerCase().indexOf(inputValue) !== -1 || resource.city.toLowerCase().indexOf(inputValue) !== -1 || resource.descriptionandorserviceprovided.toLowerCase().indexOf(inputValue) !== -1 || resource.nameoftheorganisation.toLowerCase().indexOf(inputValue) !== -1 || resource.state.toLowerCase().indexOf(inputValue) !== -1);\n}; // export const getSuggestionValue = (suggestion) =>\n//   suggestion.nameoftheorganisation;\n// export const renderSuggestion = (suggestion) => (\n//   <div>{suggestion.nameoftheorganisation}</div>\n// );\n\nexport const parseText = function (text, limit) {\n  if (text.length > limit) {\n    for (let i = limit; i > 0; i--) {\n      if (text.charAt(i) === ' ' && (text.charAt(i - 1) !== ',' || text.charAt(i - 1) !== '.' || text.charAt(i - 1) !== ';')) {\n        return text.substring(0, i) + '...';\n      }\n    }\n\n    return text.substring(0, limit) + '...';\n  } else return text;\n};","map":{"version":3,"sources":["/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/components/Essentials/essentialsutls.js"],"names":["React","getNumbersLink","initialValue","numbf","split","numberList","map","el","getFormattedLinkForAccordion","__html","getFormattedLink","reurl1","reinsta","refb","noLetters","s3","match","formatedLink","links","JSON","parse","stringify","String","replace","s1","s2","customJoinHighlight","list","joinVals","result","i","length","customJoinHighlightMobile","push","backgroundColor","getHighlightedText","text","searchValue","type","regexObject","RegExp","parts","matches","matchAll","getSuggestions","value","resources","inputValue","trim","toLowerCase","inputLength","filter","resource","category","indexOf","city","descriptionandorserviceprovided","nameoftheorganisation","state","parseText","limit","charAt","substring"],"mappings":"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","sourcesContent":["import React from 'react';\nexport const getNumbersLink = (initialValue) => {\n  // const phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n  const numbf = initialValue.split(',');\n  const numberList = numbf.map((el) => {\n    return `<a href=\"tel:${el}\">${el}</a>`;\n  });\n  // const numbg = /^\\d{3,12}$/g;\n  // const numberList = numbf.map((iv, i) => {\n  //   iv = iv.trim();\n  //   return iv.replace(numbg, '<a href=\"tel:$&\">$&</a>');\n  // });\n  return {numberList};\n};\nexport const getFormattedLinkForAccordion = (initialValue) => {\n  return (\n    <div\n      className=\"tablecelldata\"\n      dangerouslySetInnerHTML={{\n        __html: getFormattedLink(initialValue),\n      }}\n    ></div>\n  );\n};\n\nexport const getFormattedLink = (initialValue) => {\n  const reurl1 = /\\s*(https?:\\/\\/.+)\\s*/g;\n  // let reurl2 = /\\s*.(www\\..+)\\s/g\n  const reinsta = /\\s*Instagram: @(.+)\\s*/g;\n  const refb = /\\s*Facebook: @(.+)\\s*/g;\n  const noLetters = /^[\\d,\\s]+$/;\n  let s3 = '';\n  if (initialValue.match(noLetters) != null) {\n    const formatedLink = getNumbersLink(initialValue);\n    const links = JSON.parse(JSON.stringify(formatedLink));\n    s3 = String(links.numberList).replace(/,/g, '<br>');\n  } else {\n    const s1 = initialValue.replace(\n      reurl1,\n      '<a href=\"$1\" target=\"_blank\">Link</a>'\n    );\n    const s2 = s1.replace(\n      reinsta,\n      '<a href=\"https://www.instagram.com/$1\" target=\"_blank\">Instagram: @$1</a>'\n    );\n    s3 = s2.replace(\n      refb,\n      '<a href=\"https://www.facebook.com/$1\" target=\"_blank\">Facebook: @$1</a>'\n    );\n  }\n  return s3;\n};\n\nconst customJoinHighlight = (list, joinVals) => {\n  let result = '';\n  let i = 0;\n  for (i = 0; i < list.length - 1; i++) {\n    result +=\n      list[i] +\n      '<span style=\"background-color: yellow\">' +\n      joinVals[i] +\n      '</span>';\n  }\n  result += list[i];\n  return result;\n};\n\nconst customJoinHighlightMobile = (list, joinVals) => {\n  const result = [];\n  let i = 0;\n  for (i = 0; i < list.length - 1; i++) {\n    result.push(<span key={i}>{list[i]}</span>);\n    result.push(<span style={{backgroundColor: 'yellow'}}>{joinVals[i]}</span>);\n  }\n  result.push(<span key={i}>{list[i]}</span>);\n  return result;\n};\n\nexport const getHighlightedText = (text, searchValue, type) => {\n  // uses searchValue state!!\n  if (searchValue === '') {\n    return text;\n  }\n\n  const regexObject = new RegExp(searchValue, 'gi');\n\n  const parts = text.split(regexObject);\n  if (parts.length === 1) {\n    return text;\n  } else {\n    const matches = [...text.matchAll(regexObject)];\n    if (type === 'desktop') {\n      return customJoinHighlight(parts, matches);\n    } else {\n      return customJoinHighlightMobile(parts, matches);\n    }\n  }\n};\n\n// searchbar stuff\n\nexport const getSuggestions = (value, resources) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  return inputLength === 0\n    ? resources\n    : resources.filter(\n        (resource) =>\n          resource.category.toLowerCase().indexOf(inputValue) !== -1 ||\n          resource.city.toLowerCase().indexOf(inputValue) !== -1 ||\n          resource.descriptionandorserviceprovided\n            .toLowerCase()\n            .indexOf(inputValue) !== -1 ||\n          resource.nameoftheorganisation.toLowerCase().indexOf(inputValue) !==\n            -1 ||\n          resource.state.toLowerCase().indexOf(inputValue) !== -1\n      );\n};\n\n// export const getSuggestionValue = (suggestion) =>\n//   suggestion.nameoftheorganisation;\n\n// export const renderSuggestion = (suggestion) => (\n//   <div>{suggestion.nameoftheorganisation}</div>\n// );\n\nexport const parseText = function (text, limit) {\n  if (text.length > limit) {\n    for (let i = limit; i > 0; i--) {\n      if (\n        text.charAt(i) === ' ' &&\n        (text.charAt(i - 1) !== ',' ||\n          text.charAt(i - 1) !== '.' ||\n          text.charAt(i - 1) !== ';')\n      ) {\n        return text.substring(0, i) + '...';\n      }\n    }\n    return text.substring(0, limit) + '...';\n  } else return text;\n};\n"]},"metadata":{},"sourceType":"module"}