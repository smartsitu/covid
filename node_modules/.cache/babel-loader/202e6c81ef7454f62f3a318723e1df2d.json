{"ast":null,"code":"var _jsxFileName = \"/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/components/Charts/totalconfirmedchart.js\";\nimport { defaultOptions, xAxisDefaults, yAxisDefaults } from './chart-defaults';\nimport { parse } from 'date-fns';\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nfunction TotalConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    });\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      const date = parse(data.date, 'dd MMMM', new Date(2020, 0, 1));\n      dates.push(date);\n      confirmed.push(data.totalconfirmed);\n      recovered.push(data.totalrecovered);\n      deceased.push(data.totaldeceased);\n    }\n  });\n  const dataset = {\n    labels: dates,\n    datasets: [{\n      borderWidth: 2,\n      data: confirmed,\n      borderCapStyle: 'round',\n      pointBackgroundColor: '#ff6862',\n      label: 'Confirmed',\n      borderColor: '#ff6862',\n      pointHoverRadius: 2\n    }, {\n      borderWidth: 2,\n      data: recovered,\n      borderCapStyle: 'round',\n      pointBackgroundColor: '#7ebf80',\n      label: 'Recovered',\n      borderColor: '#7ebf80',\n      pointHoverRadius: 2\n    }, {\n      borderWidth: 2,\n      data: deceased,\n      borderCapStyle: 'round',\n      pointBackgroundColor: '#6c757d',\n      label: 'Deceased',\n      borderColor: '#6c757d',\n      pointHoverRadius: 2\n    }]\n  };\n  const options = deepmerge(defaultOptions, {\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0.1\n      }\n    },\n    scales: {\n      yAxes: [deepmerge(yAxisDefaults, {\n        scaleLabel: {\n          display: false,\n          labelString: 'Total Cases'\n        }\n      })],\n      xAxes: [deepmerge(xAxisDefaults, {\n        type: 'time',\n        time: {\n          unit: 'day',\n          tooltipFormat: 'MMM DD',\n          stepSize: 7,\n          displayFormats: {\n            millisecond: 'MMM DD',\n            second: 'MMM DD',\n            minute: 'MMM DD',\n            hour: 'MMM DD',\n            day: 'MMM DD',\n            week: 'MMM DD',\n            month: 'MMM DD',\n            quarter: 'MMM DD',\n            year: 'MMM DD'\n          }\n        }\n      })]\n    }\n  });\n\n  if (props.mode) {\n    options.scales.yAxes = [{\n      type: 'logarithmic',\n      ticks: {\n        min: 0,\n        max: 10000,\n        callback: function (value, index, values) {\n          if (value === 10000) return '10000';\n          if (value === 2000) return '2500';\n          if (value === 500) return '500';\n          if (value === 100) return '100';\n          if (value === 20) return '25';\n          if (value === 5) return '5';\n          if (value === 0) return '0';\n          return null;\n        }\n      },\n      scaleLabel: {\n        display: false,\n        labelString: 'Total Cases'\n      }\n    }];\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"charts-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: dataset,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default TotalConfirmedChart;","map":{"version":3,"sources":["/Users/maclaptop/Documents/GitHub/ashokpandey.com/src/components/Charts/totalconfirmedchart.js"],"names":["defaultOptions","xAxisDefaults","yAxisDefaults","parse","deepmerge","React","Line","TotalConfirmedChart","props","dates","confirmed","recovered","deceased","timeseries","length","forEach","data","index","date","Date","push","totalconfirmed","totalrecovered","totaldeceased","dataset","labels","datasets","borderWidth","borderCapStyle","pointBackgroundColor","label","borderColor","pointHoverRadius","options","elements","point","radius","line","tension","scales","yAxes","scaleLabel","display","labelString","xAxes","type","time","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","day","week","month","quarter","year","mode","ticks","min","max","callback","value","values","title"],"mappings":"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","sourcesContent":["import {defaultOptions, xAxisDefaults, yAxisDefaults} from './chart-defaults';\n\nimport {parse} from 'date-fns';\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nfunction TotalConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      const date = parse(data.date, 'dd MMMM', new Date(2020, 0, 1));\n      dates.push(date);\n      confirmed.push(data.totalconfirmed);\n      recovered.push(data.totalrecovered);\n      deceased.push(data.totaldeceased);\n    }\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: [\n      {\n        borderWidth: 2,\n        data: confirmed,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#ff6862',\n        label: 'Confirmed',\n        borderColor: '#ff6862',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: recovered,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#7ebf80',\n        label: 'Recovered',\n        borderColor: '#7ebf80',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: deceased,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#6c757d',\n        label: 'Deceased',\n        borderColor: '#6c757d',\n        pointHoverRadius: 2,\n      },\n    ],\n  };\n\n  const options = deepmerge(defaultOptions, {\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0.1,\n      },\n    },\n    scales: {\n      yAxes: [\n        deepmerge(yAxisDefaults, {\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        }),\n      ],\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n        }),\n      ],\n    },\n  });\n\n  if (props.mode) {\n    options.scales.yAxes = [\n      {\n        type: 'logarithmic',\n        ticks: {\n          min: 0,\n          max: 10000,\n          callback: function (value, index, values) {\n            if (value === 10000) return '10000';\n            if (value === 2000) return '2500';\n            if (value === 500) return '500';\n            if (value === 100) return '100';\n            if (value === 20) return '25';\n            if (value === 5) return '5';\n            if (value === 0) return '0';\n            return null;\n          },\n        },\n        scaleLabel: {\n          display: false,\n          labelString: 'Total Cases',\n        },\n      },\n    ];\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default TotalConfirmedChart;\n"]},"metadata":{},"sourceType":"module"}