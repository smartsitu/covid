(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@primer/primitives'), require('styled-system'), require('prop-types'), require('@styled-system/prop-types'), require('@styled-system/theme-get'), require('react'), require('styled-components'), require('classnames'), require('@primer/octicons-react'), require('@reach/dialog'), require('nanoid'), require('react-is'), require('@styled-system/props')) :
  typeof define === 'function' && define.amd ? define(['exports', '@primer/primitives', 'styled-system', 'prop-types', '@styled-system/prop-types', '@styled-system/theme-get', 'react', 'styled-components', 'classnames', '@primer/octicons-react', '@reach/dialog', 'nanoid', 'react-is', '@styled-system/props'], factory) :
  (global = global || self, factory(global.primer = {}, global.primitives, global.styledSystem, global.PropTypes, global.systemPropTypes, global.themeGet, global.React, global.styled, global.classnames, global.Octicon, global.dialog, global.nanoid, global.reactIs, global.props));
}(this, function (exports, primitives, styledSystem, PropTypes, systemPropTypes, themeGet, React, styled, classnames, Octicon, dialog, nanoid, reactIs, props) { 'use strict';

  PropTypes = PropTypes && PropTypes.hasOwnProperty('default') ? PropTypes['default'] : PropTypes;
  systemPropTypes = systemPropTypes && systemPropTypes.hasOwnProperty('default') ? systemPropTypes['default'] : systemPropTypes;
  themeGet = themeGet && themeGet.hasOwnProperty('default') ? themeGet['default'] : themeGet;
  var React__default = 'default' in React ? React['default'] : React;
  var styled__default = 'default' in styled ? styled['default'] : styled;
  classnames = classnames && classnames.hasOwnProperty('default') ? classnames['default'] : classnames;
  var Octicon__default = 'default' in Octicon ? Octicon['default'] : Octicon;
  nanoid = nanoid && nanoid.hasOwnProperty('default') ? nanoid['default'] : nanoid;

  var lineHeights = primitives.typography.lineHeights;
  var black = primitives.colors.black,
      white = primitives.colors.white,
      pink = primitives.colors.pink,
      gray = primitives.colors.gray,
      blue = primitives.colors.blue,
      green = primitives.colors.green,
      orange = primitives.colors.orange,
      purple = primitives.colors.purple,
      red = primitives.colors.red,
      yellow = primitives.colors.yellow; // General

  var colors = {
    bodytext: gray[9],
    black: black,
    white: white,
    gray: gray,
    blue: blue,
    green: green,
    orange: orange,
    purple: purple,
    red: red,
    yellow: yellow,
    pink: pink,
    blackfade15: 'rgba(27, 31, 35, 0.15)',
    blackfade20: 'rgba(27, 31, 35, 0.20)',
    blackfade30: 'rgba(27,31,35,0.3)',
    blackfade35: 'rgba(27, 31, 35, 0.35)',
    blackfade50: 'rgba(27, 31, 35, 0.5)',
    whitefade15: 'rgba(255, 255, 255, 0.15)',
    whitefade50: 'rgba(255, 255, 255, 0.50)',
    state: {
      error: red[5],
      failure: red[5],
      pending: yellow[7],
      queued: yellow[7],
      success: green[5],
      unknown: gray[4]
    },
    border: {
      grayLight: '#eaecef',
      gray: gray[2],
      grayDark: '#d1d5da'
    },
    counter: {
      bg: 'rgba(27, 31, 35, 0.08)'
    },
    filterList: {
      hoverBg: '#eaecef'
    },
    text: {
      gray: gray[6],
      grayLight: gray[5],
      grayDark: gray[9],
      red: red[6]
    },
    bg: {
      gray: gray[1],
      grayLight: gray[0],
      disabled: '#F3F4F6'
    },
    accent: orange[5],
    labels: {
      gray: gray[2],
      grayText: gray[9],
      grayDark: gray[5],
      grayDarkText: gray[9],
      blue: blue[5],
      blueText: blue[5],
      orange: orange[5],
      orangeText: orange[6],
      green: green[5],
      greenText: green[6],
      red: red[6],
      redText: red[6],
      yellow: yellow[6],
      yellowText: yellow[9],
      pink: pink[4],
      pinkText: pink[6],
      purple: purple[4],
      purpleText: [5]
    }
  };
  var breakpoints = ['544px', '768px', '1012px', '1280px'];
  var fonts = {
    normal: fontStack(['-apple-system', 'BlinkMacSystemFont', 'Segoe UI', 'Helvetica', 'Arial', 'sans-serif', 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol']),
    mono: fontStack(['SFMono-Regular', 'Consolas', 'Liberation Mono', 'Menlo', 'Courier', 'monospace'])
  };
  var fontWeights = {
    light: 300,
    normal: 400,
    semibold: 500,
    bold: 600
  };
  var borders = [0, '1px solid'];
  var radii = ['0', '3px', '6px', '100px'];
  var shadows = {
    small: '0 1px 0 rgba(149, 157, 165, 0.1)',
    medium: '0 3px 6px rgba(149, 157, 165, 0.15)',
    large: '0 8px 24px rgba(149, 157, 165, 0.2)',
    'extra-large': '0 12px 48px rgba(149, 157, 165, 0.3)',
    formControl: 'inset 0px 2px 0px rgba(225, 228, 232, 0.2)',
    formControlDisabled: 'inset 0px 2px 0px rgba(220, 227, 237, 0.3)',
    formControlFocus: 'rgba(3, 102, 214, 0.3) 0px 0px 0px 0.2em',
    primaryShadow: '0px 1px 0px rgba(20, 70, 32, 0.1), inset 0px 2px 0px rgba(255, 255, 255, 0.03)',
    primaryActiveShadow: 'inset 0px 1px 0px rgba(20, 70, 32, 0.2)'
  };
  var sizes = {
    small: '544px',
    medium: '768px',
    large: '1012px',
    xlarge: '1280px'
  };
  var fontSizes = ['12px', '14px', '16px', '20px', '24px', '32px', '40px', '48px'];
  var space = ['0', '4px', '8px', '16px', '24px', '32px', '40px', '48px', '64px', '80px', '96px', '112px', '128px']; // Components

  var buttons = {
    "default": {
      color: {
        "default": colors.text.grayDark,
        disabled: gray[4]
      },
      border: {
        "default": 'rgba(27, 31, 35, 0.12)',
        active: colors.border.grayDark,
        disabled: colors.border.grayLight
      },
      bg: {
        "default": colors.bg.grayLight,
        hover: '#F3F4F6',
        // custom gray
        active: '#edeff2',
        //custom gray
        disabled: colors.bg.grayLight
      },
      shadow: {
        "default": '0px 1px 0px rgba(27, 31, 35, 0.04), inset 0px 2px 0px rgba(255, 255, 255, 0.25)',
        hover: '0px 1px 0px rgba(209, 213, 218, 0.2), inset 0px 2px 0px rgba(255, 255, 255, 0.1)',
        active: 'inset 0px 2px 0px rgba(149, 157, 165, 0.1)',
        focus: '0 0 0 3px rgba(3, 102, 214, 0.3)'
      }
    },
    primary: {
      color: {
        "default": white,
        disabled: colors.whitefade50
      },
      border: {
        "default": green[6],
        hover: 'rgba(27, 31, 35, 0.15)',
        active: 'rgba(27, 31, 35, 0.15)',
        disabled: 'rgba(34, 134, 58, 0.1)'
      },
      bg: {
        "default": '#2EA44F',
        //custom green
        focus: '#2C974B',
        //custom green
        hover: '#2C974B',
        //custom green
        active: '#128031',
        // 2% darker than hover bg
        disabled: '#94D3A2' // custom gray

      },
      shadow: {
        "default": ' 0px 1px 0px rgba(20, 70, 32, 0.1), inset 0px 2px 0px rgba(255, 255, 255, 0.03)',
        active: '0px 1px 0px rgba(27, 31, 35, 0.1), inset 0px 2px 0px rgba(255, 255, 255, 0.03)',
        hover: '0px 1px 0px rgba(27, 31, 35, 0.1), inset 0px 2px 0px rgba(255, 255, 255, 0.03)',
        focus: '0 0 0 3px #94D3A2'
      }
    },
    danger: {
      color: {
        "default": colors.text.red,
        hover: white,
        active: white,
        disabled: 'rgba(203,36,49, .5)' // custom?

      },
      border: {
        "default": colors.border.gray,
        hover: 'rgba(27, 31, 35, 0.15)',
        active: 'rgba(27, 31, 35, 0.15)'
      },
      bg: {
        "default": gray[0],
        hover: red[6],
        active: '#be222e',
        // 2% darker than hover bg
        disabled: '#F3F4F6'
      },
      shadow: {
        "default": '0px 1px 0px rgba(149, 157, 165, 0.1), inset 0px 2px 0px rgba(255, 255, 255, 0.25)',
        active: '0px 1px 0px rgba(27, 31, 35, 0.1), inset 0px 2px 0px rgba(255, 255, 255, 0.03)',
        hover: '0px 1px 0px rgba(27, 31, 35, 0.1), inset 0px 2px 0px rgba(255, 255, 255, 0.03)',
        focus: '0 0 0 3px rgba(203, 36, 49, 0.4)'
      }
    },
    outline: {
      color: {
        "default": blue[5],
        hover: white,
        active: white,
        disabled: gray[4]
      },
      border: {
        "default": gray[2],
        //border-gray
        hover: 'rgba(27, 31, 35, 0.15)',
        active: 'rgba(27, 31, 35, 0.15)'
      },
      bg: {
        "default": gray[0],
        hover: blue[5],
        active: '#035fc7',
        // 2% darker than hover bg
        disabled: '#F3F4F6'
      },
      shadow: {
        "default": '0px 1px 0px rgba(149, 157, 165, 0.1), inset 0px 2px 0px rgba(255, 255, 255, 0.25)',
        active: '0px 1px 0px rgba(27, 31, 35, 0.1), inset 0px 2px 0px rgba(255, 255, 255, 0.03)',
        hover: '0px 1px 0px rgba(27, 31, 35, 0.1), inset 0px 2px 0px rgba(255, 255, 255, 0.03)',
        focus: '0 0 0 3px rgba(3, 102, 214, 0.3)'
      }
    }
  };
  var popovers = {
    colors: {
      caret: 'rgba(27, 31, 35, 0.15)'
    }
  };
  var pagination = {
    fontSize: '13px',
    fontWeight: fontWeights.bold,
    borderRadius: radii[1],
    colors: {
      normal: {
        fg: colors.blue[5],
        bg: colors.white,
        border: colors.border.gray
      },
      disabled: {
        fg: colors.gray[3],
        bg: colors.gray[0],
        border: colors.border.gray
      },
      hover: {
        fg: colors.blue[5],
        bg: colors.gray[1],
        border: colors.border.gray
      },
      selected: {
        fg: colors.white,
        bg: colors.blue[5],
        border: colors.blue[5]
      }
    }
  };
  var theme = {
    // General
    borders: borders,
    breakpoints: breakpoints,
    colors: colors,
    fonts: fonts,
    fontSizes: fontSizes,
    fontWeights: fontWeights,
    lineHeights: lineHeights,
    radii: radii,
    shadows: shadows,
    sizes: sizes,
    space: space,
    // Components
    buttons: buttons,
    pagination: pagination,
    popovers: popovers
  };

  function fontStack(fonts) {
    return fonts.map(function (font) {
      return font.includes(' ') ? "\"".concat(font, "\"") : font;
    }).join(', ');
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(Object(source), true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = _objectWithoutPropertiesLoose(source, excluded);

    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  function _taggedTemplateLiteral(strings, raw) {
    if (!raw) {
      raw = strings.slice(0);
    }

    return Object.freeze(Object.defineProperties(strings, {
      raw: {
        value: Object.freeze(raw)
      }
    }));
  }

  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArrayLimit(arr, i) {
    if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
      return;
    }

    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  var getKey = styledSystem.get,
      compose = styledSystem.compose,
      system = styledSystem.system;
  var get = function get(key) {
    return themeGet(key, getKey(theme, key));
  };
  var whiteSpace = system({
    whiteSpace: {
      property: 'whiteSpace',
      cssProperty: 'whiteSpace'
    }
  });
  var TYPOGRAPHY = compose(styledSystem.typography, whiteSpace);
  TYPOGRAPHY.propTypes = _objectSpread2({}, systemPropTypes.typography, {
    whiteSpace: PropTypes.oneOf(['normal', 'nowrap', 'pre-wrap', 'pre', 'pre-line'])
  });
  var COMMON = compose(styledSystem.space, styledSystem.color, styledSystem.display);
  COMMON.propTypes = _objectSpread2({}, systemPropTypes.space, {}, systemPropTypes.color);
  var BORDER = compose(styledSystem.border, styledSystem.shadow);
  BORDER.propTypes = _objectSpread2({}, systemPropTypes.border, {}, systemPropTypes.shadow); // these are 1:1 with styled-system's API now,
  // so you could consider dropping the abstraction

  var LAYOUT = styledSystem.layout;
  var POSITION = styledSystem.position;
  var FLEX = styledSystem.flexbox;
  var GRID = styledSystem.grid;
  TYPOGRAPHY.propTypes = systemPropTypes.typography;
  LAYOUT.propTypes = systemPropTypes.layout;
  POSITION.propTypes = systemPropTypes.position;
  FLEX.propTypes = systemPropTypes.flexbox;
  GRID.propTypes = systemPropTypes.grid;

  function _templateObject2() {
    var data = _taggedTemplateLiteral(["\n  ", " ", ";\n"]);

    _templateObject2 = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject() {
    var data = _taggedTemplateLiteral(["\n  * { box-sizing: border-box; }\n  body { margin: 0; }\n  table { border-collapse: collapse; }\n"]);

    _templateObject = function _templateObject() {
      return data;
    };

    return data;
  }
  var GlobalStyle = styled.createGlobalStyle(_templateObject());

  var Base = function Base(props) {
    var color = props.color,
        lineHeight = props.lineHeight,
        fontFamily = props.fontFamily,
        theme = props.theme,
        rest = _objectWithoutProperties(props, ["color", "lineHeight", "fontFamily", "theme"]);

    return React__default.createElement("div", rest, React__default.createElement(GlobalStyle, null), props.children);
  };

  Base.displayName = "Base";
  var BaseStyles = styled__default(Base)(_templateObject2(), TYPOGRAPHY, COMMON);
  BaseStyles.defaultProps = {
    color: 'gray.9',
    fontFamily: 'normal',
    lineHeight: 'default',
    theme: theme
  };
  BaseStyles.propTypes = _objectSpread2({}, TYPOGRAPHY.propTypes, {}, COMMON.propTypes, {
    theme: PropTypes.object
  });

  function _templateObject$1() {
    var data = _taggedTemplateLiteral(["\n  ", "\n  ", "\n  ", "\n"]);

    _templateObject$1 = function _templateObject() {
      return data;
    };

    return data;
  }
  var Box = styled__default.div(_templateObject$1(), LAYOUT, styledSystem.space, styledSystem.color);
  Box.defaultProps = {
    theme: theme
  };
  Box.propTypes = _objectSpread2({}, LAYOUT.propTypes, {}, systemPropTypes.space, {}, systemPropTypes.color, {
    theme: PropTypes.object
  });

  var BorderBox = styled__default(Box)(BORDER);
  BorderBox.defaultProps = {
    theme: theme,
    border: '1px solid',
    borderColor: 'gray.2',
    borderRadius: 2
  };
  BorderBox.propTypes = _objectSpread2({
    theme: PropTypes.object
  }, Box.propTypes, {}, BORDER.propTypes);

  function _templateObject2$1() {
    var data = _taggedTemplateLiteral(["\n  ", ";\n"]);

    _templateObject2$1 = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$2() {
    var data = _taggedTemplateLiteral(["\n  ", ";\n"]);

    _templateObject$2 = function _templateObject() {
      return data;
    };

    return data;
  }
  var Flex = styled__default(Box)(_templateObject$2(), FLEX); // Keeping this around for backwards compatibility, but it's the same as `FLEX`

  Flex.Item = styled__default(Box)(_templateObject2$1(), FLEX);
  Flex.defaultProps = {
    theme: theme,
    display: 'flex'
  };
  Flex.Item.defaultProps = {
    theme: theme
  };
  Flex.propTypes = _objectSpread2({}, Box.propTypes, {}, FLEX.propTypes);
  Flex.Item.propTypes = _objectSpread2({}, FLEX.propTypes, {
    theme: PropTypes.object
  });

  function _templateObject$3() {
    var data = _taggedTemplateLiteral(["\n  ", ";\n"]);

    _templateObject$3 = function _templateObject() {
      return data;
    };

    return data;
  }
  var Grid = styled__default(Box)(_templateObject$3(), GRID);
  Grid.defaultProps = {
    theme: theme,
    display: 'grid'
  };
  Grid.propTypes = _objectSpread2({}, Box.propTypes, {}, GRID.propTypes);

  function _templateObject$4() {
    var data = _taggedTemplateLiteral(["\n  ", "\n  ", "\n  ", "\n"]);

    _templateObject$4 = function _templateObject() {
      return data;
    };

    return data;
  }
  var Position = styled__default.div(_templateObject$4(), LAYOUT, COMMON, POSITION);
  Position.defaultProps = {
    theme: theme
  };
  Position.propTypes = _objectSpread2({}, COMMON.propTypes, {}, LAYOUT.propTypes, {}, POSITION.propTypes, {
    theme: PropTypes.object
  });

  function withPosition(position) {
    var WithPosition = function WithPosition(props) {
      return React__default.createElement(Position, _extends({}, props, {
        position: position
      }));
    };

    WithPosition.propTypes = Position.propTypes;
    WithPosition.defaultProps = Position.defaultProps;
    WithPosition.displayName = "Position.".concat(position);
    return WithPosition;
  }

  var Absolute = withPosition('absolute');
  var Fixed = withPosition('fixed');
  var Relative = withPosition('relative');
  var Sticky = withPosition('sticky');
  Sticky.defaultProps = {
    theme: theme,
    top: 0,
    zIndex: 1
  };

  function _templateObject$5() {
    var data = _taggedTemplateLiteral(["\n  display: inline-block;\n  overflow: hidden; // Ensure page layout in Firefox should images fail to load\n  line-height: ", ";\n  vertical-align: middle;\n  ", ";\n  ", ";\n"]);

    _templateObject$5 = function _templateObject() {
      return data;
    };

    return data;
  }

  function borderRadius(_ref) {
    var size = _ref.size;
    return {
      borderRadius: size <= 24 ? '2px' : '3px'
    };
  }

  var Avatar = styled__default.img.attrs(function (props) {
    return {
      height: props.size,
      width: props.size,
      alt: props.alt
    };
  })(_templateObject$5(), get('lineHeights.condensedUltra'), borderRadius, styledSystem.space);
  Avatar.defaultProps = {
    theme: theme,
    size: 20,
    alt: ''
  };
  Avatar.propTypes = _objectSpread2({
    alt: PropTypes.string.isRequired,
    size: PropTypes.number,
    src: PropTypes.string
  }, systemPropTypes.space, {
    theme: PropTypes.object
  });

  function _templateObject$6() {
    var data = _taggedTemplateLiteral(["\n  display: inline-flex;\n  position: relative;\n"]);

    _templateObject$6 = function _templateObject() {
      return data;
    };

    return data;
  }
  var getBackgroundColor = get('colors.white');
  var Wrapper = styled__default('div')(_templateObject$6());

  var childStyles = function childStyles(props) {
    return {
      display: 'inline-block',
      overflow: 'hidden',
      // Ensure page layout in Firefox should images fail to load
      lineHeight: "".concat(get('lineHeights.condensedUltra')),
      verticalAlign: 'middle',
      borderRadius: '2px',
      position: 'absolute',
      right: '-15%',
      bottom: '-9%',
      boxShadow: '-2px -2px 0 rgba(255,255,255,0.8)',
      backgroundColor: "".concat(getBackgroundColor(props))
    };
  };

  var ChildAvatar = styled__default(Avatar)(childStyles);

  var AvatarPair = function AvatarPair(_ref) {
    var children = _ref.children,
        rest = _objectWithoutProperties(_ref, ["children"]);

    var avatars = React__default.Children.map(children, function (child, i) {
      return i === 0 ? React__default.cloneElement(child, {
        size: 40
      }) : React__default.createElement(ChildAvatar, _extends({}, child.props, {
        size: 20
      }));
    });
    return React__default.createElement(Wrapper, rest, avatars);
  };

  AvatarPair.displayName = "AvatarPair";
  // styled() changes this
  AvatarPair.displayName = 'AvatarPair';
  AvatarPair.defaultProps = {
    theme: theme
  };
  AvatarPair.propTypes = _objectSpread2({
    children: PropTypes.instanceOf(Avatar)
  }, Avatar.propTypes, {
    theme: PropTypes.object
  });

  function _templateObject2$2() {
    var data = _taggedTemplateLiteral(["\n  display: flex;\n  position: absolute;\n  background: white;\n\n  &:hover {\n    .AvatarItem {\n      margin-right: 3px;\n    }\n\n    .AvatarItem:nth-child(n + 4) {\n      display: flex;\n      opacity: 1;\n    }\n\n    .AvatarItem-more {\n      display: none !important;\n    }\n  }\n\n  .AvatarItem {\n    position: relative;\n    z-index: 2;\n    display: flex;\n    width: 20px;\n    height: 20px;\n    box-sizing: content-box;\n    margin-right: -11px;\n    background-color: ", ";\n    border-right: ", " ", ";\n    border-radius: 2px;\n    transition: margin 0.1s ease-in-out;\n\n    &:first-child {\n      z-index: 3;\n    }\n\n    &:last-child {\n      z-index: 1;\n      border-right: 0;\n    }\n\n    img {\n      border-radius: 2px;\n      width: inherit;\n    }\n\n    // Account for 4+ avatars\n    &:nth-child(n + 4) {\n      display: none;\n      opacity: 0;\n    }\n  }\n\n  .AvatarItem-more {\n    z-index: 1;\n    margin-right: 0;\n    background: ", ";\n\n    &::before,\n    &::after {\n      position: absolute;\n      display: block;\n      height: 20px;\n      content: '';\n      border-radius: 2px;\n      outline: ", " ", ";\n    }\n\n    &::before {\n      width: 17px;\n      background: ", ";\n    }\n\n    &::after {\n      width: 14px;\n      background: ", ";\n    }\n  }\n  ", "\n"]);

    _templateObject2$2 = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$7() {
    var data = _taggedTemplateLiteral(["\n  display: inline-block;\n  position: relative;\n  min-width: ", ";\n  height: 20px;\n  ", "\n"]);

    _templateObject$7 = function _templateObject() {
      return data;
    };

    return data;
  }

  var alignRightStyles = function alignRightStyles(theme) {
    return "\n    right: 0;\n    flex-direction: row-reverse;\n\n    &:hover .AvatarItem {\n      margin-right: 0;\n      margin-left: 3px;\n    }\n\n    .AvatarItem-more {\n      background: ".concat(get('colors.gray.3')(theme), ";\n\n      &::before {\n        width: 5px;\n      }\n\n      &::after {\n        background: ").concat(get('colors.gray.1')(theme), ";\n        width: 2px;\n      }\n    }\n\n    .AvatarItem {\n      margin-right: 0;\n      margin-left: -11px;\n      border-right: 0;\n      border-left: ").concat(get('borders.1')(theme), " ").concat(get('colors.white')(theme), ";\n    }\n  ");
  };

  var transformChildren = function transformChildren(children) {
    var count = children.length;
    return React__default.Children.map(children, function (child, index) {
      return React__default.createElement(React__default.Fragment, null, count > 3 && index === 2 && React__default.createElement("div", {
        className: "AvatarItem-more AvatarItem"
      }), React__default.cloneElement(child, {
        className: 'AvatarItem'
      }));
    });
  };

  var AvatarStackWrapper = styled__default.span(_templateObject$7(), function (props) {
    return props.count === 1 ? '26px' : props.count === 2 ? '36px' : '46px';
  }, COMMON);
  var AvatarStackBody = styled__default.span(_templateObject2$2(), get('colors.white'), get('borders.1'), get('colors.white'), get('colors.gray.1'), get('borders.1'), get('colors.white'), get('colors.gray.2'), get('colors.gray.3'), function (props) {
    return props.alignRight ? alignRightStyles(props.theme) : '';
  });

  var AvatarStack = function AvatarStack(_ref) {
    var _ref$children = _ref.children,
        children = _ref$children === void 0 ? [] : _ref$children,
        alignRight = _ref.alignRight,
        rest = _objectWithoutProperties(_ref, ["children", "alignRight"]);

    return React__default.createElement(AvatarStackWrapper, _extends({
      count: children.length
    }, rest), React__default.createElement(AvatarStackBody, {
      alignRight: alignRight,
      className: "AvatarStackBody"
    }, transformChildren(children)));
  };

  AvatarStack.displayName = "AvatarStack";
  AvatarStack.defaultProps = {
    theme: theme
  };
  AvatarStack.propTypes = _objectSpread2({}, COMMON.propTypes, {
    alignRight: PropTypes.bool
  });

  function _templateObject$8() {
    var data = _taggedTemplateLiteral(["\n  display: inline-block;\n  padding: 2px 6px;\n  font-size: ", ";\n  font-family: ", ";\n  color: rgba(27, 31, 35, 0.6);\n  background-color: #eaf5ff;\n  border-radius: 3px;\n  ", ";\n"]);

    _templateObject$8 = function _templateObject() {
      return data;
    };

    return data;
  }
  var BranchName = styled__default.a(_templateObject$8(), get('fontSizes.0'), get('fonts.mono'), COMMON);
  BranchName.defaultProps = {
    theme: theme
  };
  BranchName.propTypes = _objectSpread2({
    href: PropTypes.string
  }, COMMON.propTypes, {
    theme: PropTypes.object
  });

  function _templateObject3() {
    var data = _taggedTemplateLiteral(["\n  color: ", ";\n  display: inline-block;\n  font-size: ", ";\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n  &.selected {\n    color: ", ";\n    pointer-events: none;\n  }\n  ", "\n"]);

    _templateObject3 = function _templateObject3() {
      return data;
    };

    return data;
  }

  function _templateObject2$3() {
    var data = _taggedTemplateLiteral(["\n  display: flex;\n  justify-content: space-between;\n  ", ";\n  ", ";\n"]);

    _templateObject2$3 = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$9() {
    var data = _taggedTemplateLiteral(["\n  display: inline-block;\n  white-space: nowrap;\n  list-style: none;\n  &::after {\n    padding-right: 0.5em;\n    padding-left: 0.5em;\n    color: ", ";\n    font-size: ", ";\n    content: '/';\n  }\n  &:first-child {\n    margin-left: 0;\n  }\n  &:last-child {\n    &::after {\n      content: none;\n    }\n  }\n"]);

    _templateObject$9 = function _templateObject() {
      return data;
    };

    return data;
  }
  var SELECTED_CLASS = 'selected';
  var Wrapper$1 = styled__default.li(_templateObject$9(), get('colors.gray.2'), get('fontSizes.1'));

  var BreadcrumbBase = function BreadcrumbBase(_ref) {
    var className = _ref.className,
        children = _ref.children,
        theme = _ref.theme,
        rest = _objectWithoutProperties(_ref, ["className", "children", "theme"]);

    var classes = classnames(className, 'Breadcrumb');
    var wrappedChildren = React__default.Children.map(children, function (child) {
      return React__default.createElement(Wrapper$1, {
        theme: theme
      }, child);
    });
    return React__default.createElement("nav", _extends({
      className: classes,
      "aria-label": "breadcrumb"
    }, rest), React__default.createElement(Box, {
      as: "ol",
      my: 0,
      pl: 0
    }, wrappedChildren));
  };

  BreadcrumbBase.displayName = "BreadcrumbBase";
  var Breadcrumb = styled__default(BreadcrumbBase)(_templateObject2$3(), COMMON, FLEX);
  Breadcrumb.Item = styled__default.a.attrs(function (props) {
    return {
      activeClassName: typeof props.to === 'string' ? 'selected' : '',
      className: classnames(props.selected && SELECTED_CLASS, props.className),
      'aria-current': props.selected ? 'page' : null
    };
  })(_templateObject3(), get('colors.blue.5'), get('fontSizes.1'), get('colors.gray.7'), COMMON);
  Breadcrumb.defaultProps = {
    theme: theme
  };
  Breadcrumb.propTypes = _objectSpread2({}, COMMON.propTypes);
  Breadcrumb.Item.defaultProps = {
    theme: theme
  };
  Breadcrumb.Item.propTypes = _objectSpread2({
    as: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
    href: PropTypes.string,
    selected: PropTypes.bool
  }, COMMON.propTypes);

  var buttonBaseStyles = styled.css(["position:relative;display:inline-block;padding:6px 16px;font-weight:", ";line-height:20px;white-space:nowrap;vertical-align:middle;cursor:pointer;user-select:none;border-radius:", ";appearance:none;text-decoration:none;&:hover{text-decoration:none;}&:focus{outline:none;}&:disabled{cursor:default;}&:disabled svg{opacity:0.6;}"], get('fontWeights.bold'), get('radii.2'));

  function _templateObject$a() {
    var data = _taggedTemplateLiteral(["\n  ", "\n  ", "\n  ", "\n"]);

    _templateObject$a = function _templateObject() {
      return data;
    };

    return data;
  }
  var variants = styledSystem.variant({
    variants: {
      small: {
        p: '4px 12px',
        fontSize: 0
      },
      medium: {
        fontSize: 1
      },
      large: {
        fontSize: 2,
        p: '10px 20px'
      }
    }
  });
  var ButtonBase = styled__default.button.attrs(function (_ref) {
    var disabled = _ref.disabled,
        onClick = _ref.onClick;
    return {
      onClick: disabled ? undefined : onClick
    };
  })(_templateObject$a(), buttonBaseStyles, variants, styledSystem.compose(styledSystem.fontSize, COMMON, styledSystem.layout));
  ButtonBase.defaultProps = {
    theme: theme,
    variant: 'medium'
  };
  ButtonBase.propTypes = _objectSpread2({
    as: PropTypes.oneOfType([PropTypes.oneOf(['button', 'a', 'summary', 'input']), PropTypes.func]),
    children: PropTypes.node,
    disabled: PropTypes.bool,
    fontSize: systemPropTypes.typography.fontSize,
    onClick: PropTypes.func,
    theme: PropTypes.object,
    variant: PropTypes.oneOf(['small', 'medium', 'large'])
  }, COMMON.propTypes, {}, systemPropTypes.layout);

  function _templateObject$b() {
    var data = _taggedTemplateLiteral(["\n  color: ", ";\n  border: 1px solid ", ";\n  background-color: ", ";\n  box-shadow: ", ";\n\n  &:hover {\n    color: ", ";\n    background-color: ", ";\n    border-color: ", ";\n    box-shadow: ", ";\n  }\n  // focus must come before :active so that the active box shadow overrides\n  &:focus {\n    border-color: transparent;\n    box-shadow: ", ";\n  }\n\n  &:active {\n    color: ", ";\n    background-color: ", ";\n    box-shadow: ", ";\n    border-color: ", ";\n  }\n\n  &:disabled {\n    color: ", ";\n    background-color: ", ";\n    border: 1px solid ", ";\n  }\n"]);

    _templateObject$b = function _templateObject() {
      return data;
    };

    return data;
  }
  var ButtonDanger = styled__default(ButtonBase)(_templateObject$b(), get('buttons.danger.color.default'), get('buttons.danger.border.default'), get('buttons.danger.bg.default'), get('buttons.danger.shadow.default'), get('buttons.danger.color.hover'), get('buttons.danger.bg.hover'), get('buttons.danger.border.hover'), get('buttons.danger.shadow.hover'), get('buttons.danger.shadow.focus'), get('buttons.danger.color.active'), get('buttons.danger.bg.active'), get('buttons.danger.shadow.active'), get('buttons.danger.border.active'), get('buttons.danger.color.disabled'), get('buttons.danger.bg.disabled'), get('buttons.danger.border.default'));

  function _templateObject$c() {
    var data = _taggedTemplateLiteral(["\n  vertical-align: middle;\n\n  && > * {\n    position: relative;\n    border-right-width: 0;\n    border-radius: 0;\n\n    :first-child {\n      border-top-left-radius: ", ";\n      border-bottom-left-radius: ", ";\n      margin-right: 0;\n    }\n\n    :not(:first-child) {\n      margin-left: 0;\n      margin-right: 0;\n    }\n\n    :last-child {\n      border-right-width: 1px;\n      border-top-right-radius: ", ";\n      border-bottom-right-radius: ", ";\n    }\n\n    :focus,\n    :active,\n    :hover {\n      border-right-width: 1px;\n      + * {\n        border-left-width: 0;\n      }\n    }\n\n    :focus,\n    :active {\n      z-index: 1;\n    }\n  }\n"]);

    _templateObject$c = function _templateObject() {
      return data;
    };

    return data;
  }
  var ButtonGroup = styled__default(Box)(_templateObject$c(), get('radii.2'), get('radii.2'), get('radii.2'), get('radii.2'));
  ButtonGroup.defaultProps = {
    display: 'inline-block'
  };
  ButtonGroup.propTypes = _objectSpread2({}, Box.propTypes);

  function _templateObject$d() {
    var data = _taggedTemplateLiteral(["\n  color: ", ";\n  border: 1px solid ", ";\n  background-color: ", ";\n  box-shadow: ", ";\n\n  &:hover {\n    color: ", ";\n    background-color: ", ";\n    border-color: ", ";\n    box-shadow: ", ";\n  }\n  // focus must come before :active so that the active box shadow overrides\n  &:focus {\n    border-color: transparent;\n    box-shadow: ", ";\n  }\n\n  &:active {\n    color: ", ";\n    background-color: ", ";\n    border-color: ", ";\n    box-shadow: ", ";\n  }\n\n  &:disabled {\n    color: ", ";\n    border-color: ", ";\n    background-color: ", ";\n  }\n"]);

    _templateObject$d = function _templateObject() {
      return data;
    };

    return data;
  }
  var ButtonOutline = styled__default(ButtonBase)(_templateObject$d(), get('buttons.outline.color.default'), get('buttons.outline.border.default'), get('buttons.outline.bg.default'), get('buttons.outline.shadow.default'), get('buttons.outline.color.hover'), get('buttons.outline.bg.hover'), get('buttons.outline.border.hover'), get('buttons.outline.shadow.hover'), get('buttons.outline.shadow.focus'), get('buttons.outline.color.active'), get('buttons.outline.bg.active'), get('buttons.outline.border.active'), get('buttons.outline.shadow.active'), get('buttons.outline.color.disabled'), get('buttons.outline.border.default'), get('buttons.outline.bg.disabled'));

  function _templateObject$e() {
    var data = _taggedTemplateLiteral(["\n  color: ", ";\n  background-color: ", ";\n  border: 1px solid ", ";\n  box-shadow: ", ";\n\n  &:hover {\n    background-color: ", ";\n    border-color: ", ";\n  }\n  // focus must come before :active so that the active box shadow overrides\n  &:focus {\n    border-color: transparent;\n    box-shadow: ", ";\n    background-color: ", ";\n  }\n\n  &:active {\n    background-color: ", ";\n    box-shadow: ", ";\n    border-color: ", ";\n  }\n\n  &:disabled {\n    color: ", ";\n    background-color: ", ";\n    border-color: ", ";\n  }\n"]);

    _templateObject$e = function _templateObject() {
      return data;
    };

    return data;
  }
  var ButtonPrimary = styled__default(ButtonBase)(_templateObject$e(), get('buttons.primary.color.default'), get('buttons.primary.bg.default'), get('buttons.primary.border.default'), get('buttons.primary.shadow.default'), get('buttons.primary.bg.hover'), get('buttons.primary.border.hover'), get('buttons.primary.shadow.focus'), get('buttons.primary.bg.focus'), get('buttons.primary.bg.active'), get('buttons.primary.shadow.active'), get('buttons.primary.border.active'), get('buttons.primary.color.disabled'), get('buttons.primary.bg.disabled'), get('buttons.primary.border.disabled'));

  function _templateObject$f() {
    var data = _taggedTemplateLiteral(["\n  display: inline-block;\n  padding: 0;\n  font-size: ", ";\n  color: ", ";\n  text-decoration: none;\n  white-space: nowrap;\n  cursor: pointer;\n  user-select: none;\n  background-color: transparent;\n  border: 0;\n  appearance: none; // Corrects inability to style clickable input types in iOS.\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &:disabled {\n    &,\n    &:hover {\n      color: rgba(", ", 0.5);\n      cursor: default;\n    }\n  }\n\n  &:after {\n    display: inline-block;\n    margin-left: ", ";\n    width: 0;\n    height: 0;\n    vertical-align: -2px;\n    content: \"\";\n    border: 4px solid transparent;\n    border-top-color: currentcolor;\n  }\n  ", "\n  ", "\n  ", "\n"]);

    _templateObject$f = function _templateObject() {
      return data;
    };

    return data;
  }
  var ButtonTableList = styled__default.summary(_templateObject$f(), get('fontSizes.1'), get('colors.gray.6'), get('colors.gray.6'), get('space.1'), COMMON, TYPOGRAPHY, LAYOUT);
  ButtonTableList.defaultProps = {
    theme: theme
  };

  function _templateObject$g() {
    var data = _taggedTemplateLiteral(["\n  color: ", ";\n  background-color: ", ";\n  border: 1px solid ", ";\n  box-shadow: ", ";\n\n  &:hover {\n    background-color: ", ";\n    border-color: ", ";\n    box-shadow: ", ";\n  }\n\n  // focus must come before :active so that the active box shadow overrides\n  &:focus {\n    border-color: transparent;\n    box-shadow: ", ";\n  }\n\n  &:active {\n    background-color: ", ";\n    box-shadow: ", ";\n    border-color: ", ";\n  }\n\n  &:disabled {\n    color: ", ";\n    background-color: ", ";\n    border-color: ", ";\n  }\n"]);

    _templateObject$g = function _templateObject() {
      return data;
    };

    return data;
  }
  var Button = styled__default(ButtonBase)(_templateObject$g(), get('buttons.default.color.default'), get('buttons.default.bg.default'), get('buttons.default.border.default'), get('buttons.default.shadow.default'), get('buttons.default.bg.hover'), get('buttons.default.border.hover'), get('buttons.default.shadow.hover'), get('buttons.default.shadow.focus'), get('buttons.default.bg.active'), get('buttons.default.shadow.active'), get('buttons.default.border.active'), get('buttons.default.color.disabled'), get('buttons.default.bg.disabled'), get('buttons.default.border.disabled'));
  Button.defaultProps = {
    theme: theme
  };
  Button.propTypes = _objectSpread2({
    theme: PropTypes.object
  }, COMMON.propTypes, {}, systemPropTypes.layout);

  var oppositeEdge = {
    top: 'Bottom',
    right: 'Left',
    bottom: 'Top',
    left: 'Right'
  };
  var perpendicularEdge = {
    top: 'Left',
    right: 'Top',
    bottom: 'Left',
    left: 'Top'
  };

  function getEdgeAlign(location) {
    var _location$split = location.split('-'),
        _location$split2 = _slicedToArray(_location$split, 2),
        edge = _location$split2[0],
        align = _location$split2[1];

    return [edge, align];
  }

  function getPosition(edge, align, spacing) {
    var _ref;

    var opposite = oppositeEdge[edge].toLowerCase();
    var perp = perpendicularEdge[edge].toLowerCase();
    return _ref = {}, _defineProperty(_ref, opposite, '100%'), _defineProperty(_ref, align || perp, align ? spacing : '50%'), _ref;
  }

  var getBg = styledSystem.style({
    prop: 'bg',
    key: 'colors'
  });
  var getBorderColor = styledSystem.style({
    prop: 'borderColor',
    key: 'colors'
  });
  var getBorderWidth = styledSystem.style({
    prop: 'borderWidth',
    key: 'borderWidths',
    scale: [0, 1]
  });

  function Caret(props) {
    var _objectSpread2$1;

    var _getBg = getBg(props),
        bg = _getBg.bg;

    var _getBorderColor = getBorderColor(props),
        borderColor = _getBorderColor.borderColor;

    var _getBorderWidth = getBorderWidth(props),
        borderWidth = _getBorderWidth.borderWidth;

    var size = props.size,
        location = props.location;

    var _getEdgeAlign = getEdgeAlign(location),
        _getEdgeAlign2 = _slicedToArray(_getEdgeAlign, 2),
        edge = _getEdgeAlign2[0],
        align = _getEdgeAlign2[1];

    var perp = perpendicularEdge[edge];

    var style = _objectSpread2({
      pointerEvents: 'none',
      position: 'absolute'
    }, getPosition(edge, align, size), (_objectSpread2$1 = {}, _defineProperty(_objectSpread2$1, "margin".concat(perp), align ? null : -size), _defineProperty(_objectSpread2$1, "marginTop", '-1px'), _objectSpread2$1)); // note: these arrays represent points in the form [x, y]


    var a = [-size, 0];
    var b = [0, size];
    var c = [size, 0]; // spaces are optional in path `d` attribute, and points are
    // represented in the form `x,y` -- which is what the arrays above
    // become when stringified!

    var triangle = "M".concat(a, "L").concat(b, "L").concat(c, "L").concat(a, "Z");
    var line = "M".concat(a, "L").concat(b, "L").concat(c);
    var transform = {
      top: "translate(".concat([size, size * 2], ") rotate(180)"),
      right: "translate(".concat([0, size], ") rotate(-90)"),
      bottom: "translate(".concat([size, 0], ")"),
      left: "translate(".concat([size * 2, size], ") rotate(90)")
    }[edge];
    return React__default.createElement("svg", {
      width: size * 2,
      height: size * 2,
      style: style
    }, React__default.createElement("g", {
      transform: transform
    }, React__default.createElement("path", {
      d: triangle,
      fill: bg
    }), React__default.createElement("path", {
      d: line,
      fill: "none",
      stroke: borderColor,
      strokeWidth: borderWidth
    })));
  }

  Caret.displayName = "Caret";
  Caret.locations = ['top', 'top-left', 'top-right', 'right', 'right-top', 'right-bottom', 'bottom', 'bottom-left', 'bottom-right', 'left', 'left-top', 'left-bottom'];
  Caret.defaultProps = {
    bg: 'white',
    borderColor: 'gray.2',
    borderWidth: 1,
    location: 'bottom',
    size: 8,
    theme: theme
  };
  Caret.propTypes = {
    /* eslint-disable react/sort-prop-types  */
    // eslint can't determine whether these props are used
    // because they're accessed inside of styled-system.

    /* eslint-disable react/no-unused-prop-types */
    bg: PropTypes.string,
    borderColor: PropTypes.string,
    borderWidth: PropTypes.number,
    size: PropTypes.number,
    location: PropTypes.oneOf(Caret.locations)
    /* eslint-enable */

  };

  function isNumeric(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
  }

  function _templateObject2$4() {
    var data = _taggedTemplateLiteral(["\n  max-width: 60% !important;\n  height: auto !important;\n  max-height: 55% !important;\n  ", ";\n"]);

    _templateObject2$4 = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$h() {
    var data = _taggedTemplateLiteral(["\n  display: ", ";\n  align-items: center;\n  justify-content: center;\n  background-color: ", ";\n  border-radius: 50%;\n  box-shadow: ", ";\n  ", " ", ";\n"]);

    _templateObject$h = function _templateObject() {
      return data;
    };

    return data;
  }
  var variantSizes = {
    small: 56,
    medium: 96,
    large: 128
  };

  var sizeStyles = function sizeStyles(_ref) {
    var size = _ref.size,
        variant = _ref.variant;
    var calc = isNumeric(size) ? size : variantSizes[variant];
    return {
      width: calc,
      height: calc
    };
  };

  var CircleBadge = styled__default.div(_templateObject$h(), function (props) {
    return props.inline ? 'inline-flex' : 'flex';
  }, get('colors.white'), get('shadows.medium'), COMMON, sizeStyles);
  var Icon = styled__default(Octicon__default)(_templateObject2$4(), COMMON);
  CircleBadge.Icon = Icon;
  CircleBadge.defaultProps = {
    inline: false,
    theme: theme,
    variant: 'medium'
  };
  CircleBadge.propTypes = _objectSpread2({
    inline: PropTypes.bool,
    size: PropTypes.number,
    theme: PropTypes.object,
    variant: PropTypes.oneOf(['small', 'medium', 'large'])
  }, COMMON.propTypes);
  CircleBadge.Icon.defaultProps = {
    theme: theme
  };
  CircleBadge.Icon.propsTypes = _objectSpread2({
    theme: PropTypes.object
  }, COMMON.propTypes);

  function CircleOcticon(props) {
    var size = props.size,
        as = props.as;

    var icon = props.icon,
        bg = props.bg,
        asProp = props.as,
        rest = _objectWithoutProperties(props, ["icon", "bg", "as"]);

    return React__default.createElement(BorderBox, {
      as: as,
      bg: bg,
      overflow: "hidden",
      border: "none",
      size: size,
      borderRadius: "50%"
    }, React__default.createElement(Flex, _extends({}, rest, {
      alignItems: "center",
      justifyContent: "center"
    }), React__default.createElement(Octicon__default, {
      icon: icon,
      size: size
    })));
  }

  CircleOcticon.displayName = "CircleOcticon";
  CircleOcticon.defaultProps = _objectSpread2({
    theme: theme
  }, Flex.defaultProps, {
    size: 32
  });
  CircleOcticon.propTypes = _objectSpread2({}, Flex.propTypes, {
    icon: Octicon__default.propTypes.icon,
    size: PropTypes.number,
    theme: PropTypes.object
  });

  function _templateObject$i() {
    var data = _taggedTemplateLiteral(["\n  display: inline-block;\n  padding: 2px 5px;\n  font-size: ", ";\n  font-weight: ", ";\n  line-height: ", ";\n  border-radius: 20px;\n  ", ";\n  ", ";\n  ", ";\n\n  &:empty {\n    visibility: hidden;\n  }\n"]);

    _templateObject$i = function _templateObject() {
      return data;
    };

    return data;
  }

  var colorStyles = function colorStyles(_ref) {
    var scheme = _ref.scheme,
        props = _objectWithoutProperties(_ref, ["scheme"]);

    return {
      color: scheme === 'gray-light' ? get('colors.gray.9')(props) : scheme === 'gray' ? get('colors.white')(props) : get('colors.gray.6')(props)
    };
  };

  var bgStyles = function bgStyles(_ref2) {
    var scheme = _ref2.scheme,
        props = _objectWithoutProperties(_ref2, ["scheme"]);

    return {
      backgroundColor: scheme === 'gray-light' ? get('colors.blackfade15')(props) : scheme === 'gray' ? get('colors.gray.5')(props) : get('colors.counter.bg')(props)
    };
  };

  var CounterLabel = styled__default.span(_templateObject$i(), get('fontSizes.0'), get('fontWeights.bold'), get('lineHeights.condensedUltra'), colorStyles, bgStyles, COMMON);
  CounterLabel.defaultProps = {
    theme: theme
  };
  CounterLabel.propTypes = _objectSpread2({
    children: PropTypes.node,
    scheme: PropTypes.oneOf(['gray', 'gray-light']),
    theme: PropTypes.object
  }, COMMON.propTypes);

  function _templateObject$j() {
    var data = _taggedTemplateLiteral(["\n  & > summary {\n    list-style: none;\n  }\n  & > summary::-webkit-details-marker {\n    display: none;\n  }\n\n  ", "\n"]);

    _templateObject$j = function _templateObject() {
      return data;
    };

    return data;
  }
  // We have to check if window is defined before importing the polyfill
  // so the code doesn’t run while pages build
  // uses require because of primer/components issue #638

  if (typeof window !== 'undefined') {
    require('details-element-polyfill');
  }

  var StyledDetails = styled__default('details')(_templateObject$j(), COMMON);

  function getRenderer(children) {
    return typeof children === 'function' ? children : function () {
      return children;
    };
  }

  function Details(_ref) {
    var children = _ref.children,
        overlay = _ref.overlay,
        _ref$render = _ref.render,
        render = _ref$render === void 0 ? getRenderer(children) : _ref$render,
        userOpen = _ref.open,
        onClickOutside = _ref.onClickOutside,
        onToggle = _ref.onToggle,
        _ref$defaultOpen = _ref.defaultOpen,
        defaultOpen = _ref$defaultOpen === void 0 ? false : _ref$defaultOpen,
        rest = _objectWithoutProperties(_ref, ["children", "overlay", "render", "open", "onClickOutside", "onToggle", "defaultOpen"]);

    var _useState = React.useState(defaultOpen),
        _useState2 = _slicedToArray(_useState, 2),
        internalOpen = _useState2[0],
        setInternalOpen = _useState2[1];

    var ref = React.useRef(null); // only use internal open state if user doesn't provide a value for the open prop

    var open = typeof userOpen !== 'undefined' ? userOpen : internalOpen;
    var onClickOutsideInternal = React.useCallback(function (event) {
      if (event.target.closest('details') !== ref.current) {
        onClickOutside && onClickOutside(event);

        if (!event.defaultPrevented) {
          setInternalOpen(false);
        }
      }
    }, [ref, onClickOutside, setInternalOpen]); // handles the overlay behavior - closing the menu when clicking outside of it

    React.useEffect(function () {
      if (open && overlay) {
        document.addEventListener('click', onClickOutsideInternal);
        return function () {
          document.removeEventListener('click', onClickOutsideInternal);
        };
      }
    }, [open, overlay, onClickOutsideInternal]);

    function handleToggle(e) {
      onToggle && onToggle(e);

      if (!e.defaultPrevented) {
        setInternalOpen(e.target.open);
      }
    }

    return React__default.createElement(StyledDetails, _extends({}, rest, {
      ref: ref,
      open: open,
      onToggle: handleToggle,
      overlay: overlay
    }), render({
      open: open
    }));
  }

  Details.displayName = "Details";
  Details.defaultProps = {
    theme: theme,
    overlay: false
  };
  Details.propTypes = _objectSpread2({
    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),
    className: PropTypes.string,
    defaultOpen: PropTypes.bool,
    overlay: PropTypes.bool,
    render: PropTypes.func,
    theme: PropTypes.object
  }, COMMON.propTypes);

  var StyledOcticon = styled__default(Octicon__default)(COMMON);
  StyledOcticon.defaultProps = {
    theme: theme
  };
  StyledOcticon.propTypes = _objectSpread2({}, COMMON.propTypes, {
    theme: PropTypes.object
  });

  function _templateObject$k() {
    var data = _taggedTemplateLiteral(["\n  ", ";\n  ", ";\n"]);

    _templateObject$k = function _templateObject() {
      return data;
    };

    return data;
  }
  var Text = styled__default.span(_templateObject$k(), TYPOGRAPHY, COMMON);
  Text.defaultProps = {
    theme: theme
  };
  Text.propTypes = _objectSpread2({}, TYPOGRAPHY.propTypes, {}, COMMON.propTypes, {
    theme: PropTypes.object
  });

  function _templateObject4() {
    var data = _taggedTemplateLiteral(["\n  border-radius: 4px 4px 0px 0px;\n  border-bottom: 1px solid #dad5da;\n\n  @media screen and (max-width: 750px) {\n    border-radius: 0px;\n  }\n"]);

    _templateObject4 = function _templateObject4() {
      return data;
    };

    return data;
  }

  function _templateObject3$1() {
    var data = _taggedTemplateLiteral(["\n  background: none;\n  border: none;\n  padding: 0;\n\n  position: absolute;\n  top: 16px;\n  right: 16px;\n"]);

    _templateObject3$1 = function _templateObject3() {
      return data;
    };

    return data;
  }

  function _templateObject2$5() {
    var data = _taggedTemplateLiteral(["\n  box-shadow: 0px 4px 32px rgba(0, 0, 0, 0.35);\n  border-radius: 4px;\n  padding: 0 !important;\n  position: relative;\n\n  @media screen and (max-width: 750px) {\n    width: 100vw !important;\n    margin: 0 !important;\n    border-radius: 0;\n    height: 100vh;\n  }\n\n  ", "\n  ", "\n  ", "\n"]);

    _templateObject2$5 = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$l() {
    var data = _taggedTemplateLiteral(["\n  ", "\n\n  [data-reach-dialog-overlay] {\n    z-index: 1000002; /* Higher than the Dropdown and Tooltip */\n  }\n"]);

    _templateObject$l = function _templateObject() {
      return data;
    };

    return data;
  }
  var reachStyles = "/* This code is subject to LICENSE in root of this repository */\n\n/* Used to detect in JavaScript if apps have loaded styles or not. */\n:root {\n  --reach-dialog: 1;\n}\n\n[data-reach-dialog-overlay] {\n  background: hsla(0, 0%, 0%, 0.33);\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  overflow: auto;\n}\n\n[data-reach-dialog-content] {\n  width: 50vw;\n  margin: 10vh auto;\n  background: white;\n  padding: 2rem;\n  outline: none;\n}\n";
  var ReachGlobalStyle = styled.createGlobalStyle(_templateObject$l(), reachStyles);
  var StyledDialog = styled__default(dialog.Dialog)(_templateObject2$5(), LAYOUT, styledSystem.space, styledSystem.color);
  var UnstyledButton = styled__default(Flex).attrs({
    as: 'button'
  })(_templateObject3$1());
  var DialogHeaderBase = styled__default(Flex)(_templateObject4());

  function DialogHeader(_ref) {
    var theme = _ref.theme,
        children = _ref.children,
        rest = _objectWithoutProperties(_ref, ["theme", "children"]);

    if (React__default.Children.toArray(children).every(function (ch) {
      return typeof ch === 'string';
    })) {
      children = React__default.createElement(Text, {
        theme: theme,
        color: "gray.9",
        fontSize: 1,
        fontWeight: "bold",
        fontFamily: "sans-serif"
      }, children);
    }

    return React__default.createElement(DialogHeaderBase, _extends({
      theme: theme,
      p: 3
    }, rest), children);
  }

  DialogHeader.displayName = "DialogHeader";

  var Dialog = function Dialog(_ref2) {
    var children = _ref2.children,
        props = _objectWithoutProperties(_ref2, ["children"]);

    return React__default.createElement(React__default.Fragment, null, React__default.createElement(StyledDialog, props, React__default.createElement(UnstyledButton, {
      onClick: props.onDismiss
    }, React__default.createElement(StyledOcticon, {
      icon: Octicon.X
    })), children), React__default.createElement(ReachGlobalStyle, null));
  };

  Dialog.defaultProps = {
    theme: theme
  };
  Dialog.propTypes = _objectSpread2({}, LAYOUT.propTypes, {}, systemPropTypes.space, {}, systemPropTypes.color, {
    children: PropTypes.node.isRequired,
    isOpen: PropTypes.bool.isRequired,
    onDismiss: PropTypes.func.isRequired,
    theme: PropTypes.object
  });
  DialogHeader.defaultProps = {
    backgroundColor: 'gray.1',
    theme: theme
  };
  DialogHeader.propTypes = _objectSpread2({}, Flex.propTypes);
  Dialog.Header = DialogHeader;

  var getDirectionStyles = function getDirectionStyles(theme, direction) {
    var map = {
      w: "\n      top: 0;\n      right: 100%;\n      left: auto;\n      width: auto;\n      margin-top: 0;\n      margin-right: 10px;\n\n      &::before {\n        top: 10px;\n        right: -16px;\n        left: auto;\n        border-color: transparent;\n        border-left-color: ".concat(get('colors.blackfade15')(theme), ";\n      }\n\n      &::after {\n        top: 11px;\n        right: -14px;\n        left: auto;\n        border-color: transparent;\n        border-left-color: ").concat(get('colors.white')(theme), ";\n      }\n    "),
      e: "\n      top: 0;\n      left: 100%;\n      width: auto;\n      margin-top: 0;\n      margin-left: 10px;\n\n      &::before {\n        top: 10px;\n        left: -16px;\n        border-color: transparent;\n        border-right-color: ".concat(get('colors.blackfade15')(theme), ";\n      }\n\n      &::after {\n        top: 11px;\n        left: -14px;\n        border-color: transparent;\n        border-right-color: ").concat(get('colors.white')(theme), ";\n      }\n    "),
      ne: "\n      top: auto;\n      bottom: 100%;\n      left: 0;\n      margin-bottom: 3px;\n\n      &::before,\n      &::after {\n        top: auto;\n        right: auto;\n      }\n\n      &::before {\n        bottom: -8px;\n        left: 9px;\n        border-top: 8px solid ".concat(get('colors.blackfade15')(theme), ";\n        border-bottom: 0;\n        border-left: 8px solid transparent;\n      }\n\n      &::after {\n        bottom: -7px;\n        left: 10px;\n        border-top: 7px solid ").concat(get('colors.white')(theme), ";\n        border-right: 7px solid transparent;\n        border-bottom: 0;\n        border-left: 7px solid transparent;\n      }\n    "),
      s: "\n      right: 50%;\n      left: auto;\n      transform: translateX(50%);\n\n      &::before {\n        top: -16px;\n        right: 50%;\n        transform: translateX(50%);\n      }\n\n      &::after {\n        top: -14px;\n        right: 50%;\n        transform: translateX(50%);\n      }\n    ",
      sw: "\n      right: 0;\n      left: auto;\n\n      &::before {\n        top: -16px;\n        right: 9px;\n        left: auto;\n      }\n\n      &::after {\n        top: -14px;\n        right: 10px;\n        left: auto;\n      }\n    ",
      se: "\n      &::before {\n        top: -16px;\n        left: 9px;\n      }\n\n      &::after {\n        top: -14px;\n        left: 10px;\n      }\n    "
    };
    return map[direction];
  };

  function _templateObject4$1() {
    var data = _taggedTemplateLiteral(["\n  display: block;\n  padding: ", " 10px ", " 15px;\n  overflow: hidden;\n  color: ", ";\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  a {\n    color: ", ";\n    text-decoration: none;\n    display: block;\n    padding: ", " 10px ", " 15px;\n    overflow: hidden;\n    color: ", ";\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  &:focus,\n  a:focus {\n    color: ", ";\n    text-decoration: none;\n    background-color: ", ";\n  }\n\n  &:hover,\n  &:hover a {\n    color: ", ";\n    text-decoration: none;\n    background-color: ", ";\n    outline: none;\n  }\n  ", ";\n"]);

    _templateObject4$1 = function _templateObject4() {
      return data;
    };

    return data;
  }

  function _templateObject3$2() {
    var data = _taggedTemplateLiteral(["\n  background-clip: padding-box;\n  background-color: ", ";\n  border: 1px solid rgba(27, 31, 35, 0.15);\n  border-radius: ", ";\n  box-shadow: 0 3px 12px rgba(27, 31, 35, 0.15);\n  left: 0;\n  list-style: none;\n  margin-top: 2px;\n  padding: 5px 0 5px 0 !important; //TODO: fix this override on our markdown styles\n  position: absolute;\n  top: 100%;\n  width: 160px;\n  z-index: 100;\n\n  &::before {\n    position: absolute;\n    display: inline-block;\n    content: '';\n  }\n\n  &::after {\n    position: absolute;\n    display: inline-block;\n    content: '';\n  }\n\n  &::before {\n    border: 8px solid transparent;\n    border-bottom-color: ", ";\n  }\n\n  &::after {\n    border: 7px solid transparent;\n    border-bottom-color: ", ";\n  }\n\n  // stylelint-disable-next-line selector-max-type\n  > ul {\n    list-style: none;\n  }\n  ", ";\n  ", ";\n"]);

    _templateObject3$2 = function _templateObject3() {
      return data;
    };

    return data;
  }

  function _templateObject2$6() {
    var data = _taggedTemplateLiteral(["\n  border: 4px solid transparent;\n  margin-left: 12px;\n  border-top-color: currentcolor;\n  border-bottom-width: 0;\n  content: '';\n  display: inline-block;\n  height: 0;\n  vertical-align: middle;\n  width: 0;\n  ", "\n"]);

    _templateObject2$6 = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$m() {
    var data = _taggedTemplateLiteral(["\n  position: relative;\n  display: inline-block;\n"]);

    _templateObject$m = function _templateObject() {
      return data;
    };

    return data;
  }
  var StyledDetails$1 = styled__default(Details)(_templateObject$m());

  var Dropdown = function Dropdown(_ref) {
    var children = _ref.children,
        className = _ref.className,
        rest = _objectWithoutProperties(_ref, ["children", "className"]);

    return React__default.createElement(StyledDetails$1, _extends({
      overlay: true,
      className: className
    }, rest), children);
  };

  Dropdown.displayName = "Dropdown";

  Dropdown.Button = function (_ref2) {
    var children = _ref2.children,
        rest = _objectWithoutProperties(_ref2, ["children"]);

    return React__default.createElement(Button, _extends({
      as: "summary",
      "aria-haspopup": "true"
    }, rest), children, React__default.createElement(Dropdown.Caret, null));
  };

  Dropdown.Caret = styled__default.div(_templateObject2$6(), COMMON);
  Dropdown.Menu = styled__default.ul(_templateObject3$2(), get('colors.white'), get('radii.2'), get('colors.blackfade15'), get('colors.white'), function (props) {
    return props.direction ? getDirectionStyles(props.theme, props.direction) : '';
  }, COMMON);
  Dropdown.Item = styled__default.li(_templateObject4$1(), get('space.1'), get('space.1'), get('colors.gray.9'), get('colors.gray.9'), get('space.1'), get('space.1'), get('colors.gray.9'), get('colors.white'), get('colors.blue.5'), get('colors.white'), get('colors.blue.5'), COMMON);
  Dropdown.Menu.propTypes = _objectSpread2({
    direction: PropTypes.oneOf(['ne', 'e', 'se', 's', 'sw', 'w'])
  }, COMMON.propTypes);
  Dropdown.Menu.defaultProps = {
    direction: 'sw',
    theme: theme
  };
  Dropdown.Item.defaultProps = {
    theme: theme
  };
  Dropdown.Item.propTypes = _objectSpread2({}, COMMON.propTypes);
  Dropdown.Button.defaultProps = {
    theme: theme
  };
  Dropdown.Caret.defaultProps = {
    theme: theme
  };
  Dropdown.Caret.propTpyes = _objectSpread2({}, COMMON.propTypes);
  Dropdown.defaultProps = {
    theme: theme
  };
  Dropdown.propTypes = _objectSpread2({}, Details.propTypes, {}, COMMON.propTypes);

  function _templateObject$n() {
    var data = _taggedTemplateLiteral(["\n  ", ";\n  display: flex;\n  align-items: stretch;\n\n  summary {\n    border-radius: 0;\n    border-top-left-radius: ", ";\n    border-bottom-left-radius: ", ";\n    border-right: 0;\n  }\n  .TextInput-wrapper {\n    border-radius: 0;\n    border-top-right-radius: ", ";\n    border-bottom-right-radius: ", ";\n    z-index: 1; // Allows the focus outline to show on top of the dropdown.\n  }\n"]);

    _templateObject$n = function _templateObject() {
      return data;
    };

    return data;
  }
  var FilteredSearch = styled__default.div(_templateObject$n(), COMMON, get('radii.2'), get('radii.2'), get('radii.2'), get('radii.2'));
  FilteredSearch.defaultProps = {
    theme: theme
  };
  FilteredSearch.propTypes = _objectSpread2({}, COMMON.propTypes, {
    theme: PropTypes.object
  });

  function _templateObject2$7() {
    var data = _taggedTemplateLiteral(["\n  list-style-type: none;\n  ", ";\n"]);

    _templateObject2$7 = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$o() {
    var data = _taggedTemplateLiteral(["\n  position: relative;\n  display: block;\n  padding: ", ";\n  margin: ", ";\n  overflow: hidden;\n  font-size: ", ";\n  color: ", ";\n  background-color: ", "!important;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: pointer;\n  border-radius: ", ";\n  &:hover {\n    text-decoration: none;\n    background-color: ", ";\n  }\n  &:active {\n    color: ", ";\n    background-color: ", ";\n  }\n  .count {\n    float: right;\n    font-weight: ", ";\n  }\n  ", ": ;\n"]);

    _templateObject$o = function _templateObject() {
      return data;
    };

    return data;
  }

  function ItemBase(_ref) {
    var children = _ref.children,
        count = _ref.count,
        theme = _ref.theme,
        rest = _objectWithoutProperties(_ref, ["children", "count", "theme"]);

    return React__default.createElement("a", _extends({
      key: nanoid()
    }, rest), count && React__default.createElement("span", {
      title: "results",
      className: "count"
    }, count), children);
  }

  ItemBase.displayName = "ItemBase";
  var Item = styled__default(ItemBase)(_templateObject$o(), function (props) {
    return props.small ? "".concat(get('space.1')(props), " 10px") : "".concat(get('space.2')(props), " 11px");
  }, function (props) {
    return props.small ? '0 0 2px' : '0 0 5px 0';
  }, get('fontSizes.1'), function (props) {
    return props.selected ? get('colors.white') : get('colors.gray.6');
  }, function (props) {
    return props.selected ? get('colors.blue.5') : '';
  }, get('radii.1'), get('colors.filterList.hoverBg'), get('colors.white'), get('colors.blue.5'), get('fontWeights.bold'), COMMON);

  var FilterListBase = function FilterListBase(_ref2) {
    var children = _ref2.children,
        theme = _ref2.theme,
        rest = _objectWithoutProperties(_ref2, ["children", "theme"]);

    var items = React__default.Children.map(children, function (child) {
      return React__default.createElement("li", null, child);
    });
    return React__default.createElement("ul", rest, items);
  };

  FilterListBase.displayName = "FilterListBase";
  var FilterList = styled__default(FilterListBase)(_templateObject2$7(), COMMON);
  FilterList.defaultProps = {
    theme: theme,
    m: 0,
    p: 0
  };
  FilterList.propTypes = _objectSpread2({
    children: PropTypes.node,
    small: PropTypes.bool
  }, COMMON.propTypes);
  FilterList.Item = Item;
  FilterList.Item.defaultProps = {
    theme: theme
  };
  FilterList.Item.propTypes = _objectSpread2({
    as: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
    children: PropTypes.node,
    className: PropTypes.string,
    count: PropTypes.string,
    selected: PropTypes.bool,
    theme: PropTypes.object
  }, COMMON.propTypes);

  function _templateObject$p() {
    var data = _taggedTemplateLiteral(["\n  position: relative;\n  padding: ", ";\n  color: ", ";\n  background-color: ", ";\n  border-color: ", ";\n  border-style: solid;\n  border-width: ", ";\n  border-radius: ", ";\n  margin-top: ", ";\n\n  p:last-child {\n    margin-bottom: 0;\n  }\n  ", ";\n"]);

    _templateObject$p = function _templateObject() {
      return data;
    };

    return data;
  }
  var schemeMap = {
    green: {
      color: 'colors.green.8',
      bg: 'colors.green.1'
    },
    red: {
      color: 'colors.red.9',
      bg: 'colors.red.1'
    },
    yellow: {
      color: 'colors.yellow.9',
      bg: 'colors.yellow.1'
    },
    base: {
      color: 'colors.blue.8',
      bg: 'colors.blue.1'
    }
  };
  var Flash = styled__default.div(_templateObject$p(), get('space.3'), function (props) {
    return get(schemeMap[props.scheme] ? schemeMap[props.scheme].color : '');
  }, function (props) {
    return get(schemeMap[props.scheme] ? schemeMap[props.scheme].bg : '');
  }, get('colors.blackfade15'), function (props) {
    return props.full ? '1px 0px' : '1px';
  }, function (props) {
    return props.full ? '0' : '3px';
  }, function (props) {
    return props.full ? '-1px' : '0';
  }, COMMON);
  Flash.defaultProps = {
    theme: theme,
    scheme: 'base'
  };
  Flash.propTypes = _objectSpread2({
    children: PropTypes.node,
    full: PropTypes.bool,
    scheme: PropTypes.oneOf(Object.keys(schemeMap)),
    theme: PropTypes.object
  }, COMMON.propTypes);

  function _templateObject$q() {
    var data = _taggedTemplateLiteral(["\n  font-weight: ", ";\n  font-size: ", ";\n  margin: 0;\n  ", " ", ";\n"]);

    _templateObject$q = function _templateObject() {
      return data;
    };

    return data;
  }
  var Heading = styled__default.h2(_templateObject$q(), get('fontWeights.bold'), get('fontSizes.5'), TYPOGRAPHY, COMMON);
  Heading.defaultProps = {
    theme: theme
  };
  Heading.propTypes = _objectSpread2({
    theme: PropTypes.object
  }, COMMON.propTypes, {}, TYPOGRAPHY.propTypes);

  function _templateObject$r() {
    var data = _taggedTemplateLiteral(["\n  display: inline-block;\n  font-weight: ", ";\n  color: ", ";\n  border-radius: ", ";\n  &:hover {\n    text-decoration: none;\n  }\n  ", "\n  ", " ", ";\n  ", "; // must be last to override other values\n"]);

    _templateObject$r = function _templateObject() {
      return data;
    };

    return data;
  }
  var outlineStyles = styled.css(["margin-top:-1px;margin-bottom:-1px;color:", ";border:", " ", ";box-shadow:none;", ";", ";background-color:transparent;"], get('colors.gray.6'), get('borders.1'), get('colors.blackfade15'), styledSystem.borderColor, COMMON);
  var sizeVariant = styledSystem.variant({
    variants: {
      small: {
        fontSize: 0,
        lineHeight: '16px',
        padding: '0px 8px'
      },
      medium: {
        fontSize: 0,
        lineHeight: '20px',
        padding: '0 8px'
      },
      large: {
        fontSize: 0,
        lineHeight: '24px',
        padding: '0 12px'
      },
      // corresponds to StateLabel fontSize/lineHeight/padding
      xl: {
        fontSize: 1,
        lineHeight: '16px',
        padding: '8px 12px'
      }
    }
  });
  var Label = styled__default('span')(_templateObject$r(), get('fontWeights.normal'), get('colors.white'), get('radii.3'), sizeVariant, COMMON, function (props) {
    return props.dropshadow ? 'box-shadow: inset 0 -1px 0 rgba(27, 31, 35, 0.12)' : '';
  }, function (props) {
    return props.outline ? outlineStyles : '';
  });
  Label.defaultProps = {
    theme: theme,
    bg: 'gray.5',
    variant: 'medium'
  };
  Label.propTypes = _objectSpread2({
    dropshadow: PropTypes.bool,
    outline: PropTypes.bool,
    theme: PropTypes.object,
    variant: PropTypes.oneOf(['small', 'medium', 'large', 'xl'])
  }, COMMON.propTypes);

  function _templateObject$s() {
    var data = _taggedTemplateLiteral(["\n  ", "\n  & .LabelItem {\n    margin-right: ", ";\n  }\n  & .LabelItem:last-child {\n    margin-right: 0;\n  }\n"]);

    _templateObject$s = function _templateObject() {
      return data;
    };

    return data;
  }

  var transformChildren$1 = function transformChildren(children) {
    return React__default.Children.map(children, function (child) {
      return React__default.cloneElement(child, {
        className: 'LabelItem'
      });
    });
  };

  var StyledLabelGroup = styled__default.span(_templateObject$s(), COMMON, get('space.1'));

  var LabelGroup = function LabelGroup(_ref) {
    var children = _ref.children,
        rest = _objectWithoutProperties(_ref, ["children"]);

    return React__default.createElement(StyledLabelGroup, rest, transformChildren$1(children));
  };

  LabelGroup.displayName = "LabelGroup";
  LabelGroup.defaultProps = {
    theme: theme
  };
  LabelGroup.propTypes = _objectSpread2({}, COMMON.propTypes);

  // the official PropTypes.elementType working (https://git.io/fjMLX).
  // PropTypes.elementType is currently `undefined` in the browser.

  function elementType(props, propName, componentName) {
    if (props[propName] && !reactIs.isValidElementType(props[propName])) {
      return new Error("Invalid prop '".concat(propName, "' supplied to '").concat(componentName, "': the prop is not a valid React component"));
    }
  }

  function _templateObject$t() {
    var data = _taggedTemplateLiteral(["\n  text-decoration: ", ";\n  &:hover {\n    text-decoration: ", ";\n    ", ";\n  }\n  ", ";\n  ", " ", ";\n"]);

    _templateObject$t = function _templateObject() {
      return data;
    };

    return data;
  }
  var buttonStyles = {
    display: 'inline-block',
    padding: '0',
    fontSize: 'inherit',
    whiteSpace: 'nowrap',
    cursor: 'pointer',
    userSelect: 'none',
    backgroundColor: 'transparent',
    border: '0',
    appearance: 'none'
  };
  var hoverColor = styledSystem.system({
    hoverColor: {
      property: 'color',
      scale: 'colors'
    }
  });
  var Link = styled__default.a.attrs(function (props) {
    return {
      color: props.color ? props.color : props.muted ? 'gray.6' : 'blue.5'
    };
  })(_templateObject$t(), function (props) {
    return props.underline ? 'underline' : 'none';
  }, function (props) {
    return props.muted ? 'none' : 'underline';
  }, function (props) {
    return props.hoverColor ? hoverColor : props.muted ? "color: ".concat(get('colors.blue.5')(theme)) : '';
  }, function (props) {
    return props.as === 'button' ? buttonStyles : '';
  }, TYPOGRAPHY, COMMON);
  Link.defaultProps = {
    theme: theme
  };
  Link.propTypes = _objectSpread2({
    as: elementType,
    href: PropTypes.string,
    muted: PropTypes.bool,
    theme: PropTypes.object,
    underline: PropTypes.bool
  }, TYPOGRAPHY.propTypes, {}, COMMON.propTypes);

  function buildPaginationModel(pageCount, currentPage, showPages, marginPageCount, surroundingPageCount) {
    var pages = [];

    if (showPages) {
      var pageNums = [];

      var addPage = function addPage(n) {
        if (n >= 1 && n <= pageCount) {
          pageNums.push(n);
        }
      }; // Start by defining the window of pages to show around the current page.
      // If the window goes off either edge, shift it until it fits.


      var extentLeft = currentPage - surroundingPageCount;
      var extentRight = currentPage + surroundingPageCount;

      if (extentLeft < 1 && extentRight > pageCount) {
        // Our window is larger than the entire range,
        // so simply display every page.
        extentLeft = 1;
        extentRight = pageCount;
      } else if (extentLeft < 1) {
        while (extentLeft < 1) {
          extentLeft++;
          extentRight++;
        }
      } else if (extentRight > pageCount) {
        while (extentRight > pageCount) {
          extentLeft--;
          extentRight--;
        }
      } // Next, include the pages in the margins.
      // If a margin page is already covered in the window,
      // extend the window to the other direction.


      for (var i = 1; i <= marginPageCount; i++) {
        var leftPage = i;
        var rightPage = pageCount - (i - 1);

        if (leftPage >= extentLeft) {
          extentRight++;
        } else {
          addPage(leftPage);
        }

        if (rightPage <= extentRight) {
          extentLeft--;
        } else {
          addPage(rightPage);
        }
      }

      for (var _i = extentLeft; _i <= extentRight; _i++) {
        addPage(_i);
      }

      var sorted = pageNums.slice().sort(function (a, b) {
        return a - b;
      }).filter(function (item, idx, ary) {
        return !idx || item !== ary[idx - 1];
      });

      for (var idx = 0; idx < sorted.length; idx++) {
        var num = sorted[idx];
        var selected = num === currentPage;

        if (idx === 0) {
          if (num !== 1) {
            // If the first page isn't page one,
            // we need to add a break
            pages.push({
              type: 'BREAK',
              num: 1
            });
          }

          pages.push({
            type: 'NUM',
            num: num,
            selected: selected
          });
        } else {
          var last = sorted[idx - 1];
          var delta = num - last;

          if (delta === 1) {
            pages.push({
              type: 'NUM',
              num: num,
              selected: selected
            });
          } else {
            // We skipped some, so add a break
            pages.push({
              type: 'BREAK',
              num: num - 1
            });
            pages.push({
              type: 'NUM',
              num: num,
              selected: selected
            });
          }
        }
      }

      var lastPage = pages[pages.length - 1];

      if (lastPage.type === 'NUM' && lastPage.num !== pageCount) {
        // The last page we rendered wasn't the actual last page,
        // so we need an additional break
        pages.push({
          type: 'BREAK',
          num: pageCount
        });
      }
    }

    var prev = {
      type: 'PREV',
      num: currentPage - 1,
      disabled: currentPage === 1
    };
    var next = {
      type: 'NEXT',
      num: currentPage + 1,
      disabled: currentPage === pageCount
    };
    return [prev].concat(pages, [next]);
  }
  function buildComponentData(page, hrefBuilder, onClick) {
    var props = {};
    var content = '';
    var key = '';

    switch (page.type) {
      case 'PREV':
        {
          key = 'page-prev';
          content = 'Previous';

          if (page.disabled) {
            Object.assign(props, {
              as: 'span',
              'aria-disabled': 'true',
              disabled: true
            });
          } else {
            Object.assign(props, {
              rel: 'prev',
              href: hrefBuilder(page.num),
              'aria-label': 'Previous Page',
              onClick: onClick
            });
          }

          break;
        }

      case 'NEXT':
        {
          key = 'page-next';
          content = 'Next';

          if (page.disabled) {
            Object.assign(props, {
              as: 'span',
              'aria-disabled': 'true',
              disabled: true
            });
          } else {
            Object.assign(props, {
              rel: 'next',
              href: hrefBuilder(page.num),
              'aria-label': 'Next Page',
              onClick: onClick
            });
          }

          break;
        }

      case 'NUM':
        {
          key = "page-".concat(page.num);
          content = page.num;

          if (page.selected) {
            Object.assign(props, {
              as: 'em',
              'aria-current': 'page',
              selected: true
            });
          } else {
            Object.assign(props, {
              href: hrefBuilder(page.num),
              'aria-label': "Page ".concat(page.num),
              onClick: onClick
            });
          }

          break;
        }

      case 'BREAK':
        {
          key = "page-".concat(page.num, "-break");
          content = '…';
          Object.assign(props, {
            as: 'span',
            disabled: true
          });
        }
    }

    return {
      props: props,
      key: key,
      content: content
    };
  }

  function _templateObject2$8() {
    var data = _taggedTemplateLiteral(["\n  margin-top: 20px;\n  margin-bottom: 15px;\n  text-align: center;\n"]);

    _templateObject2$8 = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$u() {
    var data = _taggedTemplateLiteral(["\n  position: relative;\n  float: left;\n  padding: 7px 12px;\n  margin-left: -1px;\n  font-size: ", ";\n  font-style: normal;\n  font-weight: ", ";\n  color: ", ";\n  white-space: nowrap;\n  vertical-align: middle;\n  cursor: pointer;\n  user-select: none;\n  background: ", ";\n  border: ", " ", ";\n  text-decoration: none;\n\n  &:first-child {\n    margin-left: 0;\n    border-top-left-radius: ", ";\n    border-bottom-left-radius: ", ";\n  }\n\n  &:last-child {\n    border-top-right-radius: ", ";\n    border-bottom-right-radius: ", ";\n  }\n\n  ", "\n\n  ", "\n\n  ", "\n\n  ", ";\n"]);

    _templateObject$u = function _templateObject() {
      return data;
    };

    return data;
  }
  var Page = styled__default.a(_templateObject$u(), get('pagination.fontSize'), get('pagination.fontWeight'), get('pagination.colors.normal.fg'), get('pagination.colors.normal.bg'), get('borders.1'), get('pagination.colors.normal.border'), get('pagination.borderRadius'), get('pagination.borderRadius'), get('pagination.borderRadius'), get('pagination.borderRadius'), function (props) {
    return !props.selected && !props.disabled && styled.css(["&:hover,&:focus{z-index:2;color:", ";background-color:", ";border-color:", ";}"], get('pagination.colors.hover.fg'), get('pagination.colors.hover.bg'), get('pagination.colors.hover.border'));
  }, function (props) {
    return props.selected && styled.css(["z-index:3;color:", ";background-color:", ";border-color:", ";"], get('pagination.colors.selected.fg'), get('pagination.colors.selected.bg'), get('pagination.colors.selected.border'));
  }, function (props) {
    return props.disabled && styled.css(["color:", ";cursor:default;background-color:", ";border-color:", ";"], get('pagination.colors.disabled.fg'), get('pagination.colors.disabled.bg'), get('pagination.colors.disabled.border'));
  }, COMMON);

  function usePaginationPages(_ref) {
    var theme = _ref.theme,
        pageCount = _ref.pageCount,
        currentPage = _ref.currentPage,
        onPageChange = _ref.onPageChange,
        hrefBuilder = _ref.hrefBuilder,
        marginPageCount = _ref.marginPageCount,
        showPages = _ref.showPages,
        surroundingPageCount = _ref.surroundingPageCount;
    var pageChange = React__default.useCallback(function (n) {
      return function (e) {
        return onPageChange(e, n);
      };
    }, [onPageChange]);
    var model = React__default.useMemo(function () {
      return buildPaginationModel(pageCount, currentPage, showPages, marginPageCount, surroundingPageCount);
    }, [pageCount, currentPage, showPages, marginPageCount, surroundingPageCount]);
    var children = React__default.useMemo(function () {
      return model.map(function (page) {
        var _buildComponentData = buildComponentData(page, hrefBuilder, pageChange(page.num)),
            props = _buildComponentData.props,
            key = _buildComponentData.key,
            content = _buildComponentData.content;

        return React__default.createElement(Page, _extends({}, props, {
          key: key,
          theme: theme
        }), content);
      });
    }, [model, hrefBuilder, pageChange, theme]);
    return children;
  }

  var PaginationContainer = styled__default.nav(_templateObject2$8());

  function Pagination(_ref2) {
    var theme = _ref2.theme,
        pageCount = _ref2.pageCount,
        currentPage = _ref2.currentPage,
        onPageChange = _ref2.onPageChange,
        hrefBuilder = _ref2.hrefBuilder,
        marginPageCount = _ref2.marginPageCount,
        showPages = _ref2.showPages,
        surroundingPageCount = _ref2.surroundingPageCount,
        rest = _objectWithoutProperties(_ref2, ["theme", "pageCount", "currentPage", "onPageChange", "hrefBuilder", "marginPageCount", "showPages", "surroundingPageCount"]);

    var pageElements = usePaginationPages({
      theme: theme,
      pageCount: pageCount,
      currentPage: currentPage,
      onPageChange: onPageChange,
      hrefBuilder: hrefBuilder,
      marginPageCount: marginPageCount,
      showPages: showPages,
      surroundingPageCount: surroundingPageCount
    });
    return React__default.createElement(PaginationContainer, _extends({
      "aria-label": "Pagination"
    }, rest, {
      theme: theme
    }), React__default.createElement(Box, {
      display: "inline-block",
      theme: theme
    }, pageElements));
  }

  Pagination.displayName = "Pagination";

  function defaultHrefBuilder(pageNum) {
    return "#".concat(pageNum);
  }

  function noop() {}

  Pagination.propTypes = _objectSpread2({
    currentPage: PropTypes.number.isRequired,
    hrefBuilder: PropTypes.func,
    marginPageCount: PropTypes.number,
    onPageChange: PropTypes.func,
    pageCount: PropTypes.number.isRequired,
    showPages: PropTypes.bool,
    surroundingPageCount: PropTypes.number
  }, COMMON.propTypes);
  Pagination.defaultProps = {
    hrefBuilder: defaultHrefBuilder,
    marginPageCount: 1,
    onPageChange: noop,
    showPages: true,
    surroundingPageCount: 2,
    theme: theme
  };

  function PointerBox(props) {
    // don't destructure these, just grab them
    var bg = props.bg,
        border = props.border,
        borderColor = props.borderColor,
        as = props.as;

    var caret = props.caret,
        children = props.children,
        boxProps = _objectWithoutProperties(props, ["caret", "children"]);

    var caretProps = {
      bg: bg,
      borderColor: borderColor,
      borderWidth: border,
      location: caret
    };
    return React__default.createElement(Relative, {
      as: as
    }, React__default.createElement(BorderBox, boxProps, children, React__default.createElement(Caret, caretProps)));
  }

  PointerBox.displayName = "PointerBox";
  PointerBox.defaultProps = {
    theme: theme
  };
  PointerBox.propTypes = _objectSpread2({}, BorderBox.propTypes, {
    caret: Caret.propTypes.location,
    theme: PropTypes.object
  });

  function _templateObject2$9() {
    var data = _taggedTemplateLiteral(["\n  position: relative;\n  width: 232px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: ", ";\n  background-color: ", ";\n\n  ", ";\n  ", ";\n\n  // Carets\n  &::before,\n  &::after {\n    position: absolute;\n    left: 50%;\n    display: inline-block;\n    content: '';\n  }\n\n  &::before {\n    top: -", ";\n    margin-left: -9px;\n    border: ", " solid transparent; // TODO: solid?\n    border-bottom-color: ", ";\n  }\n\n  &::after {\n    top: -14px;\n    margin-left: -", ";\n    border: 7px solid transparent; // todo: solid\n    border-bottom-color: ", ";\n  }\n\n  // Bottom-oriented carets\n  ", ".caret-pos--bottom & ,\n  ", ".caret-pos--bottom-right & ,\n  ", ".caret-pos--bottom-left & {\n    &::before,\n    &::after {\n      top: auto;\n      border-bottom-color: transparent;\n    }\n\n    &::before {\n      bottom: -", ";\n      border-top-color: ", ";\n    }\n\n    &::after {\n      bottom: -14px;\n      // stylelint-disable-next-line primer/borders\n      border-top-color: ", ";\n    }\n  }\n\n  // Top & Bottom: Right-oriented carets\n  ", ".caret-pos--top-right & ,\n  ", ".caret-pos--bottom-right & {\n    right: -9px;\n    margin-right: 0;\n\n    &::before,\n    &::after {\n      left: auto;\n      margin-left: 0;\n    }\n\n    &::before {\n      right: 20px;\n    }\n\n    &::after {\n      right: 21px;\n    }\n  }\n\n  // Top & Bottom: Left-oriented carets\n  ", ".caret-pos--top-left & ,\n  ", ".caret-pos--bottom-left & {\n    left: -9px;\n    margin-left: 0;\n\n    &::before,\n    &::after {\n      left: ", ";\n      margin-left: 0;\n    }\n\n    &::after {\n      left: calc(", " + 1px);\n    }\n  }\n\n  // Right- & Left-oriented carets\n  ", ".caret-pos--right & ,\n  ", ".caret-pos--right-top & ,\n  ", ".caret-pos--right-bottom & ,\n  ", ".caret-pos--left & ,\n  ", ".caret-pos--left-top & ,\n  ", ".caret-pos--left-bottom & {\n    &::before,\n    &::after {\n      top: 50%;\n      left: auto;\n      margin-left: 0;\n      border-bottom-color: transparent;\n    }\n\n    &::before {\n      // stylelint-disable-next-line primer/spacing\n      margin-top: calc((", " + 1px) * -1);\n    }\n\n    &::after {\n      margin-top: -", ";\n    }\n  }\n\n  // Right-oriented carets\n  ", ".caret-pos--right & ,\n  ", ".caret-pos--right-top & ,\n  ", ".caret-pos--right-bottom & {\n    &::before {\n      right: -", ";\n      border-left-color: ", ";\n    }\n\n    &::after {\n      right: -14px;\n      // stylelint-disable-next-line primer/borders\n      border-left-color: ", ";\n    }\n  }\n\n  // Left-oriented carets\n  ", ".caret-pos--left & ,\n  ", ".caret-pos--left-top & ,\n  ", ".caret-pos--left-bottom & {\n    &::before {\n      left: -", ";\n      border-right-color: ", ";\n    }\n\n    &::after {\n      left: -14px;\n      // stylelint-disable-next-line primer/borders\n      border-right-color: ", ";\n    }\n  }\n\n  // Right & Left: Top-oriented carets\n  ", ".caret-pos--right-top & ,\n  ", ".caret-pos--left-top & {\n    &::before,\n    &::after {\n      top: ", ";\n    }\n  }\n\n  // Right & Left: Bottom-oriented carets\n  ", ".caret-pos--right-bottom & ,\n  ", ".caret-pos--left-bottom & {\n    &::before,\n    &::after {\n      top: auto;\n    }\n\n    &::before {\n      bottom: ", ";\n    }\n\n    &::after {\n      bottom: calc(", " + 1px);\n    }\n  }\n"]);

    _templateObject2$9 = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$v() {
    var data = _taggedTemplateLiteral(["\n  position: ", ";\n  z-index: 100;\n  display: ", ";\n\n  ", ";\n  ", ";\n  ", ";\n"]);

    _templateObject$v = function _templateObject() {
      return data;
    };

    return data;
  }
  var Popover = styled__default.div.attrs(function (_ref) {
    var className = _ref.className,
        caret = _ref.caret;
    return {
      className: classnames(className, "caret-pos--".concat(caret))
    };
  })(_templateObject$v(), function (props) {
    return props.relative ? 'relative' : 'absolute';
  }, function (props) {
    return props.open ? 'block' : 'none';
  }, COMMON, LAYOUT, POSITION);
  Popover.Content = styled__default(BorderBox)(_templateObject2$9(), get('space.4'), get('colors.white'), COMMON, LAYOUT, get('space.3'), get('space.2'), get('popovers.colors.caret'), get('space.2'), get('colors.white'), Popover, Popover, Popover, get('space.3'), get('popovers.colors.caret'), get('colors.white'), Popover, Popover, Popover, Popover, get('space.4'), get('space.4'), Popover, Popover, Popover, Popover, Popover, Popover, get('space.2'), get('space.2'), Popover, Popover, Popover, get('space.3'), get('popovers.colors.caret'), get('colors.white'), Popover, Popover, Popover, get('space.3'), get('popovers.colors.caret'), get('colors.white'), Popover, Popover, get('space.4'), Popover, Popover, get('space.3'), get('space.3'));
  var CARET_POSITIONS = ['top', 'bottom', 'left', 'right', 'bottom-left', 'bottom-right', 'top-left', 'top-right', 'left-bottom', 'left-top', 'right-bottom', 'right-top'];
  Popover.defaultProps = {
    caret: 'top',
    theme: theme
  };
  Popover.propTypes = _objectSpread2({
    as: elementType,
    caret: PropTypes.oneOf(CARET_POSITIONS),
    open: PropTypes.bool,
    relative: PropTypes.bool,
    theme: PropTypes.object
  }, COMMON.propTypes, {}, LAYOUT.propTypes, {}, POSITION.propTypes);
  Popover.Content.defaultProps = {
    theme: theme
  };
  Popover.Content.propTypes = _objectSpread2({
    as: elementType,
    theme: PropTypes.object
  }, BorderBox.propTypes);

  function _templateObject2$a() {
    var data = _taggedTemplateLiteral(["\n  display: ", ";\n  overflow: hidden;\n  background-color: ", ";\n  border-radius: ", ";\n  height: ", ";\n  ", "\n  ", "\n"]);

    _templateObject2$a = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$w() {
    var data = _taggedTemplateLiteral(["\n  width: ", ";\n  ", "\n"]);

    _templateObject$w = function _templateObject() {
      return data;
    };

    return data;
  }
  var Bar = styled__default.span(_templateObject$w(), function (props) {
    return props.progress ? "".concat(props.progress, "%") : 0;
  }, COMMON);
  var sizeMap = {
    small: '5px',
    large: '10px',
    "default": '8px'
  };
  var ProgressContainer = styled__default.span(_templateObject2$a(), function (props) {
    return props.inline ? 'inline-flex' : 'flex';
  }, get('colors.gray.2'), get('radii.1'), function (props) {
    return sizeMap[props.barSize];
  }, COMMON, styledSystem.layout.width);

  var ProgressBar = function ProgressBar(_ref) {
    var progress = _ref.progress,
        bg = _ref.bg,
        theme = _ref.theme,
        rest = _objectWithoutProperties(_ref, ["progress", "bg", "theme"]);

    return React__default.createElement(ProgressContainer, _extends({
      theme: theme
    }, rest), React__default.createElement(Bar, {
      progress: progress,
      bg: bg,
      theme: theme
    }));
  };

  ProgressBar.displayName = "ProgressBar";
  ProgressBar.defaultProps = {
    bg: 'green.5',
    barSize: 'default',
    theme: theme
  };
  ProgressBar.propTypes = _objectSpread2({}, COMMON.propTypes, {
    barSize: PropTypes.oneOf(['small', 'default', 'large']),
    inline: PropTypes.bool,
    progress: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    theme: PropTypes.object,
    width: systemPropTypes.layout.width
  });

  var MenuContext = React.createContext();

  function _templateObject$x() {
    var data = _taggedTemplateLiteral(["\n  ", "\n  ", "\n"]);

    _templateObject$x = function _templateObject() {
      return data;
    };

    return data;
  }
  var dividerStyles = styled.css(["padding:", " ", ";margin:0;font-size:", ";font-weight:", ";color:", ";background-color:", ";border-bottom:", " ", ";"], get('space.1'), get('space.3'), get('fontSizes.0'), get('fontWeights.bold'), get('colors.text.grayLight'), get('colors.bg.gray'), get('borders.1'), get('colors.border.grayLight'));
  var SelectMenuDivider = styled__default.div(_templateObject$x(), dividerStyles, COMMON);
  SelectMenuDivider.defaultProps = {
    theme: theme
  };
  SelectMenuDivider.propTypes = _objectSpread2({}, COMMON.propTypes);

  function _templateObject2$b() {
    var data = _taggedTemplateLiteral(["\n  display: inline-flex;\n  align-items: stretch;\n  min-height: 34px;\n  font-size: ", ";\n  line-height: 20px;\n  color: ", ";\n  vertical-align: middle;\n  background-repeat: no-repeat; // Repeat and position set for form states (success, error, etc)\n  background-position: right 8px center; // For form validation. This keeps images 8px from right and centered vertically.\n  border: 1px solid ", ";\n  border-radius: ", ";\n  outline: none;\n  box-shadow: ", ";\n\n  ", "\n\n  .TextInput-icon {\n    align-self: center;\n    color: ", ";\n    margin: 0 ", ";\n    flex-shrink: 0;\n  }\n\n  &:focus-within {\n    border-color: ", ";\n    box-shadow: ", ", ", ";\n  }\n\n  ", "\n\n  ", "    \n\n  // Ensures inputs don't zoom on mobile but are body-font size on desktop\n  @media (min-width: ", ") {\n    font-size: ", ";\n  }\n  ", "\n  ", "\n  ", "\n  ", "\n  ", "\n"]);

    _templateObject2$b = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$y() {
    var data = _taggedTemplateLiteral(["\n  border: 0;\n  font-size: inherit;\n  background-color: transparent;\n  -webkit-appearance: none;\n  color: inherit;\n  width: 100%;\n  &:focus {\n    outline: 0;\n  }\n"]);

    _templateObject$y = function _templateObject() {
      return data;
    };

    return data;
  }
  var sizeVariants = styledSystem.variant({
    variants: {
      small: {
        minHeight: '28px',
        px: 2,
        py: '3px',
        fontSize: 0,
        lineHeight: '20px'
      },
      large: {
        px: 2,
        py: '10px',
        fontSize: 3
      }
    }
  }); // using forwardRef is important so that other components (ex. SelectMenu) can autofocus the input

  var TextInput = React__default.forwardRef(function (_ref, ref) {
    var icon = _ref.icon,
        className = _ref.className,
        block = _ref.block,
        disabled = _ref.disabled,
        rest = _objectWithoutProperties(_ref, ["icon", "className", "block", "disabled"]);

    // this class is necessary to style FilterSearch, plz no touchy!
    var wrapperClasses = classnames(className, 'TextInput-wrapper');
    var wrapperProps = props.pick(rest);
    var inputProps = props.omit(rest);
    return React__default.createElement(Wrapper$2, _extends({
      className: wrapperClasses,
      hasIcon: !!icon,
      block: block,
      theme: theme,
      disabled: disabled
    }, wrapperProps), icon && React__default.createElement(StyledOcticon, {
      className: "TextInput-icon",
      icon: icon
    }), React__default.createElement(Input, _extends({
      ref: ref,
      disabled: disabled
    }, inputProps)));
  });
  var Input = styled__default.input(_templateObject$y());
  var Wrapper$2 = styled__default.span(_templateObject2$b(), get('fontSizes.1'), get('colors.gray.9'), get('colors.border.gray'), get('radii.2'), get('shadows.formControl'), function (props) {
    if (props.hasIcon) {
      return styled.css(["padding:0;"]);
    } else {
      return styled.css(["padding:6px 12px;"]);
    }
  }, get('colors.gray.4'), get('space.2'), get('colors.blue.4'), get('shadows.formControl'), get('shadows.formControlFocus'), function (props) {
    return props.disabled && styled.css(["background-color:", ";box-shadow:", "}"], get('colors.bg.disabled'), get('shadows.formControlDisabled'));
  }, function (props) {
    return props.block && styled.css(["display:block;width:100%;"]);
  }, get('breakpoints.1'), get('fontSizes.1'), COMMON, styledSystem.width, styledSystem.minWidth, styledSystem.maxWidth, sizeVariants);
  TextInput.defaultProps = {
    theme: theme,
    type: 'text'
  };
  TextInput.propTypes = _objectSpread2({
    block: PropTypes.bool,
    maxWidth: systemPropTypes.layout.maxWidth,
    minWidth: systemPropTypes.layout.minWidth,
    variant: PropTypes.oneOf(['small', 'large'])
  }, COMMON.propTypes, {
    width: systemPropTypes.layout.width
  });

  function _templateObject$z() {
    var data = _taggedTemplateLiteral(["\n  padding: ", ";\n  margin: 0;\n  border-top: ", " ", ";\n  background-color: ", ";\n  ", ";\n\n  @media (min-width: ", ") {\n    padding: ", ";\n  }\n"]);

    _templateObject$z = function _templateObject() {
      return data;
    };

    return data;
  }
  var StyledForm = styled__default.form(_templateObject$z(), get('space.3'), get('borders.1'), get('colors.border.gray'), get('colors.white'), COMMON, get('breakpoints.0'), get('space.2'));

  function SelectMenuFilter(_ref) {
    var theme = _ref.theme,
        value = _ref.value,
        rest = _objectWithoutProperties(_ref, ["theme", "value"]);

    var inputRef = React.useRef(null);

    var _useContext = React.useContext(MenuContext),
        open = _useContext.open; // puts focus on the filter input when the menu is opened


    React.useEffect(function () {
      if (open) {
        inputRef.current.focus();
      }
    }, [open]);
    return React__default.createElement(StyledForm, {
      theme: theme
    }, React__default.createElement(TextInput, _extends({
      theme: theme,
      ref: inputRef,
      width: "100%",
      block: true,
      value: value
    }, rest)));
  }

  SelectMenuFilter.displayName = "SelectMenuFilter";
  SelectMenuFilter.defaultProps = {
    theme: theme
  };
  SelectMenuFilter.propTypes = _objectSpread2({}, COMMON.propTypes, {
    value: PropTypes.string
  });

  function _templateObject$A() {
    var data = _taggedTemplateLiteral(["\n  ", "\n  ", "\n"]);

    _templateObject$A = function _templateObject() {
      return data;
    };

    return data;
  }
  var footerStyles = styled.css(["margin-top:-1px;padding:", " ", ";font-size:", ";color:", ";text-align:center;border-top:", " ", ";@media (min-width:", "){padding:", " ", ";}"], get('space.2'), get('space.3'), get('fontSizes.0'), get('colors.text.grayLight'), get('borders.1'), get('colors.border.gray'), get('breakpoints.0'), get('space.1'), get('space.2'));
  var SelectMenuFooter = styled__default.footer(_templateObject$A(), footerStyles, COMMON);
  SelectMenuFooter.defaultProps = {
    theme: theme
  };
  SelectMenuFooter.propTypes = _objectSpread2({}, COMMON.propTypes);

  function _templateObject$B() {
    var data = _taggedTemplateLiteral(["\n  ", "\n  ", "\n"]);

    _templateObject$B = function _templateObject() {
      return data;
    };

    return data;
  }
  var listItemStyles = styled.css(["display:flex;align-items:center;padding:", ";overflow:hidden;text-align:left;cursor:pointer;background-color:", ";border:0;border-bottom:", " ", ";color:", ";text-decoration:none;&:hover{text-decoration:none;}&:focus{outline:none;}&[hidden]{display:none !important;}@media (min-width:", "){padding-top:", ";padding-bottom:", ";}.SelectMenu-icon{width:", ";margin-right:", ";flex-shrink:0;}.SelectMenu-selected-icon{visibility:hidden;transition:transform 0.12s cubic-bezier(0.5,0.1,1,0.5),visibility 0s 0.12s linear;transform:scale(0);}&[aria-checked='true']{font-weight:500;color:", ";.SelectMenu-selected-icon{visibility:visible;transition:transform 0.12s cubic-bezier(0,0,0.2,1),visibility 0s linear;transform:scale(1);}}@media (hover:hover){body:not(.intent-mouse) .SelectMenu-item:focus,&:hover,&:active,&:focus{background-color:", ";}}@media (hover:none){&:focus,&:active{background-color:", ";}-webkit-tap-highlight-color:rgba(", ",0.5);}"], get('space.3'), get('colors.white'), get('borders.1'), get('colors.border.grayLight'), get('colors.text.gray'), get('breakpoints.0'), get('space.2'), get('space.2'), get('space.3'), get('space.2'), get('colors.gray.9'), get('colors.bg.gray'), get('colors.bg.grayLight'), get('colors.gray.3'));
  var StyledItem = styled__default.a.attrs(function () {
    return {
      role: 'menuitemcheckbox'
    };
  })(_templateObject$B(), listItemStyles, COMMON); // 'as' is spread out because we don't want users to be able to change the tag. using something
  // other than 'a' will break a11y.

  var SelectMenuItem = function SelectMenuItem(_ref) {
    var children = _ref.children,
        selected = _ref.selected,
        theme = _ref.theme,
        onClick = _ref.onClick,
        as = _ref.as,
        rest = _objectWithoutProperties(_ref, ["children", "selected", "theme", "onClick", "as"]);

    var menuContext = React.useContext(MenuContext); // close the menu when an item is clicked
    // this can be overriden if the user provides a `onClick` prop and prevents default in it

    var handleClick = function handleClick(e) {
      onClick && onClick(e);

      if (!e.defaultPrevented) {
        menuContext.setOpen(false);
      }
    };

    return React__default.createElement(StyledItem, _extends({}, rest, {
      theme: theme,
      onClick: handleClick,
      "aria-checked": selected
    }), React__default.createElement(StyledOcticon, {
      theme: theme,
      className: "SelectMenu-icon SelectMenu-selected-icon",
      icon: Octicon.Check
    }), children);
  };

  SelectMenuItem.displayName = "SelectMenuItem";
  SelectMenuItem.defaultProps = {
    theme: theme,
    selected: false
  };
  SelectMenuItem.propTypes = _objectSpread2({
    selected: PropTypes.bool
  }, COMMON.propTypes);

  function _templateObject$C() {
    var data = _taggedTemplateLiteral(["\n  ", "\n  ", "\n"]);

    _templateObject$C = function _templateObject() {
      return data;
    };

    return data;
  }
  var listStyles = styled.css(["position:relative;padding:0;margin:0;flex:auto;overflow-x:hidden;overflow-y:auto;background-color:", ";-webkit-overflow-scrolling:touch;@media (hover:hover){.SelectMenuTab:focus{background-color:", ";}.SelectMenuTab:not([aria-checked='true']):hover{color:", ";background-color:", ";}.SelectMenuTab:not([aria-checked='true']):active{color:", ";background-color:", ";}}"], get('colors.white'), get('colors.blue.1'), get('colors.gray.9'), get('colors.gray.2'), get('colors.gray.9'), get('colors.gray.1'));
  var SelectMenuList = styled__default.div(_templateObject$C(), listStyles, COMMON);
  SelectMenuList.defaultProps = {
    theme: theme
  };
  SelectMenuList.propTypes = _objectSpread2({}, COMMON.propTypes);

  function _templateObject2$c() {
    var data = _taggedTemplateLiteral(["\n  ", "\n  ", "\n"]);

    _templateObject2$c = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$D() {
    var data = _taggedTemplateLiteral(["\n  ", "\n"]);

    _templateObject$D = function _templateObject() {
      return data;
    };

    return data;
  }
  var animateModal = styled.keyframes(["0%{opacity:0;transform:scale(0.9);}"]);
  var modalStyles = styled.css(["position:relative;z-index:99;display:flex;", ";max-height:", ";margin:auto 0;", ";overflow:hidden;pointer-events:auto;flex-direction:column;background-color:", ";border-radius:", ";box-shadow:0 1px 5px rgba(27,31,35,0.15);animation:", " 0.12s cubic-bezier(0,0.1,0.1,1) backwards;@media (min-width:", "){width:'300px';height:auto;max-height:350px;margin:", " 0 ", " 0;font-size:", ";border:", " ", ";border-radius:", ";box-shadow:0 1px 5px ", " !default;}"], function (props) {
    return props.filter ? 'height: 80%' : '';
  }, function (props) {
    return props.filter ? 'none' : '66%';
  }, function (props) {
    return props.filter ? 'margin-top: 0' : '';
  }, get('colors.white'), get('radii.2'), animateModal, get('breakpoints.0'), get('space.1'), get('space.3'), get('fontSizes.0'), get('borders.1'), get('colors.border.grayDark'), get('radii.2'), get('colors.blackfade15'));
  var modalWrapperStyles = styled.css(["position:fixed;top:0;right:0;bottom:0;left:0;z-index:99;display:flex;padding:", ";pointer-events:none;flex-direction:column;&::before{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none;content:'';background-color:", ";@media (min-width:", "){display:none;}}@media (min-width:", "){position:absolute;top:auto;right:auto;bottom:auto;left:auto;padding:0;}"], get('space.3'), get('colors.blackfade50'), get('breakpoints.0'), get('breakpoints.0'));
  var Modal = styled__default.div(_templateObject$D(), modalStyles);
  var ModalWrapper = styled__default.div(_templateObject2$c(), modalWrapperStyles, COMMON);

  var SelectMenuModal = function SelectMenuModal(_ref) {
    var children = _ref.children,
        theme = _ref.theme,
        rest = _objectWithoutProperties(_ref, ["children", "theme"]);

    return React__default.createElement(ModalWrapper, _extends({
      theme: theme
    }, rest, {
      role: "menu"
    }), React__default.createElement(Modal, {
      theme: theme
    }, children));
  };

  SelectMenuModal.displayName = "SelectMenuModal";
  SelectMenuModal.defaultProps = {
    theme: theme
  };
  SelectMenuModal.propTypes = _objectSpread2({}, COMMON.propTypes);

  function _templateObject$E() {
    var data = _taggedTemplateLiteral(["\n  ", "\n  ", "\n"]);

    _templateObject$E = function _templateObject() {
      return data;
    };

    return data;
  }
  var tabWrapperStyles = styled.css(["display:flex;flex-shrink:0;margin-bottom:-1px;-webkit-overflow-scrolling:touch;overflow-x:auto;overflow-y:hidden;&::-webkit-scrollbar{display:none;}@media (min-width:", "){padding:0 ", ";margin-top:", ";}"], get('breakpoints.0'), get('space.2'), get('space.3'));

  var Tabs = function Tabs(_ref) {
    var children = _ref.children,
        rest = _objectWithoutProperties(_ref, ["children"]);

    return React__default.createElement("div", _extends({
      role: "tablist"
    }, rest), children);
  };

  Tabs.displayName = "Tabs";
  var SelectMenuTabs = styled__default(Tabs)(_templateObject$E(), tabWrapperStyles, COMMON);
  SelectMenuTabs.defaultProps = {
    theme: theme
  };
  SelectMenuTabs.propTypes = _objectSpread2({}, COMMON.propTypes);

  function _templateObject2$d() {
    var data = _taggedTemplateLiteral(["\n  display: flex;\n  flex: none; // fixes header from getting squeezed in Safari iOS\n  padding: ", ";\n  border-bottom: ", " ", ";\n  ", "\n  ", "\n\n  @media (min-width: ", ") {\n    padding-top: ", ";\n    padding-bottom: ", ";\n  }\n"]);

    _templateObject2$d = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$F() {
    var data = _taggedTemplateLiteral(["\n  flex: auto;\n  font-size: ", ";\n  font-weight: ", ";\n  margin: 0;\n\n  @media (min-width: ", ") {\n    font-size: inherit;\n  }\n"]);

    _templateObject$F = function _templateObject() {
      return data;
    };

    return data;
  }
  // SelectMenu.Modal

  var SelectMenuTitle = styled__default.h3(_templateObject$F(), get('fontSizes.1'), get('fontWeights.bold'), get('breakpoints.0'));
  var StyledHeader = styled__default.header(_templateObject2$d(), get('space.3'), get('borders.1'), get('colors.border.gray'), COMMON, TYPOGRAPHY, get('breakpoints.0'), get('space.2'), get('space.2'));

  var SelectMenuHeader = function SelectMenuHeader(_ref) {
    var children = _ref.children,
        theme = _ref.theme,
        rest = _objectWithoutProperties(_ref, ["children", "theme"]);

    return React__default.createElement(StyledHeader, _extends({
      theme: theme
    }, rest), React__default.createElement(SelectMenuTitle, {
      theme: theme
    }, children));
  };

  SelectMenuHeader.displayName = "SelectMenuHeader";
  SelectMenuHeader.defaultProps = {
    theme: theme
  };

  function _templateObject$G() {
    var data = _taggedTemplateLiteral(["\n  ", "\n  ", "\n"]);

    _templateObject$G = function _templateObject() {
      return data;
    };

    return data;
  }
  var tabStyles = styled.css(["flex:1;padding:", " ", ";font-size:", ";font-weight:500;color:", ";text-align:center;background-color:", ";border:0;box-shadow:inset 0 -1px 0 ", ";@media (min-width:", "){flex:none;padding:", " ", ";border:", " transparent;border-bottom-width:0;border-top-left-radius:", ";border-top-right-radius:", ";background-color:", ";}&[aria-selected='true']{z-index:1;color:", ";background-color:", ";box-shadow:0 0 0 1px ", ";@media (min-width:", "){border-color:", ";box-shadow:none;}}&:focus{background-color:#dbedff;}"], get('space.2'), get('space.3'), get('fontSizes.0'), get('colors.gray.5'), get('colors.gray.1'), get('colors.border.gray'), get('breakpoints.0'), get('space.1'), get('space.3'), get('borders.1'), get('radii.2'), get('radii.2'), get('colors.white'), get('colors.gray.9'), get('colors.white'), get('colors.border.gray'), get('breakpoints.0'), get('colors.border.gray'));
  var StyledTab = styled__default.button(_templateObject$G(), tabStyles, COMMON);

  var SelectMenuTab = function SelectMenuTab(_ref) {
    var tabName = _ref.tabName,
        index = _ref.index,
        className = _ref.className,
        onClick = _ref.onClick,
        rest = _objectWithoutProperties(_ref, ["tabName", "index", "className", "onClick"]);

    var menuContext = React.useContext(MenuContext);

    var handleClick = function handleClick(e) {
      // if consumer has attached an onClick event, call it
      onClick && onClick(e);

      if (!e.defaultPrevented) {
        menuContext.setSelectedTab(tabName);
      }
    }; // if no tab is selected when the component renders, show the first tab


    React.useEffect(function () {
      if (!menuContext.selectedTab && index === 0) {
        menuContext.setSelectedTab(tabName);
      }
    }, [index, menuContext, tabName]);
    var isSelected = menuContext.selectedTab === tabName;
    return React__default.createElement(StyledTab, _extends({
      role: "tab",
      className: classnames('SelectMenuTab', className),
      "aria-selected": isSelected,
      onClick: handleClick
    }, rest), tabName);
  };

  SelectMenuTab.displayName = "SelectMenuTab";
  SelectMenuTab.defaultProps = {
    theme: theme
  };
  SelectMenuTab.propTypes = _objectSpread2({
    index: PropTypes.number,
    onClick: PropTypes.func,
    tabName: PropTypes.string
  }, COMMON.propTypes);

  function _templateObject$H() {
    var data = _taggedTemplateLiteral(["\n  border-top: ", " ", ";\n  ", "\n"]);

    _templateObject$H = function _templateObject() {
      return data;
    };

    return data;
  }

  var TabPanelBase = function TabPanelBase(_ref) {
    var tabName = _ref.tabName,
        className = _ref.className,
        children = _ref.children,
        rest = _objectWithoutProperties(_ref, ["tabName", "className", "children"]);

    var menuContext = React.useContext(MenuContext);
    return React__default.createElement("div", _extends({
      role: "tabpanel",
      className: className,
      hidden: menuContext.selectedTab !== tabName
    }, rest), React__default.createElement(SelectMenuList, null, children));
  };

  TabPanelBase.displayName = "TabPanelBase";
  var TabPanel = styled__default(TabPanelBase)(_templateObject$H(), get('borders.1'), get('colors.border.gray'), COMMON);
  TabPanel.defaultProps = {
    theme: theme
  };
  TabPanel.propTypes = _objectSpread2({
    tabName: PropTypes.string
  }, COMMON.propTypes);

  function useKeyboardNav(details, open, setOpen) {
    var handleKeyDown = React.useCallback(function (event) {
      var closeDetails = function closeDetails() {
        setOpen(false);
        var summary = details.current.querySelector('summary');
        if (summary) summary.focus();
      };

      var openDetails = function openDetails() {
        setOpen(true);
      };

      var focusItem = function focusItem(next) {
        var options = Array.from(details.current.querySelectorAll('[role^="menuitem"]:not([hidden]):not([disabled]):not([aria-disabled="true"])'));
        var selected = document.activeElement;
        var index = options.indexOf(selected);
        var found = next ? options[index + 1] : options[index - 1];
        var def = next ? options[0] : options[options.length - 1];
        return found || def;
      };

      var isMenuItem = function isMenuItem(el) {
        var role = el.getAttribute('role');
        return role === 'menuitem' || role === 'menuitemcheckbox' || role === 'menuitemradio';
      };

      if (!(event instanceof KeyboardEvent)) return;
      var isSummaryFocused = event.target instanceof Element && event.target.tagName === 'SUMMARY';

      switch (event.key) {
        case 'Escape':
          if (open) {
            closeDetails();
            event.preventDefault();
            event.stopPropagation();
          }

          break;

        case 'ArrowDown':
          {
            if (isSummaryFocused && !open) {
              openDetails();
            }

            var target = focusItem(true);
            if (target) target.focus();
            event.preventDefault();
          }
          break;

        case 'ArrowUp':
          {
            if (isSummaryFocused && !open) {
              openDetails();
            }

            var _target = focusItem(false);

            if (_target) _target.focus();
            event.preventDefault();
          }
          break;

        case ' ':
        case 'Enter':
          {
            var selected = document.activeElement;

            if (selected && isMenuItem(selected) && selected.closest('details') === details) {
              event.preventDefault();
              event.stopPropagation();
              selected.click();
            }
          }
          break;
      }
    }, [details, open, setOpen]);
    React.useEffect(function () {
      var current = details.current;
      if (!current) return;
      current.addEventListener('keydown', handleKeyDown);
      return function () {
        current.removeEventListener('keydown', handleKeyDown);
      };
    }, [details, handleKeyDown]);
  }

  function _templateObject$I() {
    var data = _taggedTemplateLiteral(["\n  ", "\n  ", "\n"]);

    _templateObject$I = function _templateObject() {
      return data;
    };

    return data;
  }
  var wrapperStyles = "\n  &[open] > summary::before {\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 80;\n    display: block;\n    cursor: default;\n    content: ' ';\n    background: transparent;\n  }\n  // Remove marker added by the display: list-item browser default\n  > summary {\n    list-style: none;\n  }\n  // Remove marker added by details polyfill\n  > summary::before {\n    display: none;\n  }\n  // Remove marker added by Chrome\n  > summary::-webkit-details-marker {\n    display: none;\n  }\n";
  var StyledSelectMenu = styled__default.details(_templateObject$I(), wrapperStyles, COMMON); // 'as' is spread out because we don't want users to be able to change the tag.

  var SelectMenu = function SelectMenu(_ref) {
    var children = _ref.children,
        initialTab = _ref.initialTab,
        as = _ref.as,
        rest = _objectWithoutProperties(_ref, ["children", "initialTab", "as"]);

    var ref = React.useRef(null);

    var _useState = React.useState(initialTab),
        _useState2 = _slicedToArray(_useState, 2),
        selectedTab = _useState2[0],
        setSelectedTab = _useState2[1];

    var _useState3 = React.useState(false),
        _useState4 = _slicedToArray(_useState3, 2),
        open = _useState4[0],
        setOpen = _useState4[1];

    var menuProviderValues = {
      selectedTab: selectedTab,
      setSelectedTab: setSelectedTab,
      setOpen: setOpen,
      open: open,
      initialTab: initialTab
    };

    function toggle(event) {
      setOpen(event.target.open);
    }

    useKeyboardNav(ref, open, setOpen);
    return React__default.createElement(MenuContext.Provider, {
      value: menuProviderValues
    }, React__default.createElement(StyledSelectMenu, _extends({
      ref: ref
    }, rest, {
      open: open,
      onToggle: toggle
    }), children));
  };

  SelectMenu.displayName = "SelectMenu";
  SelectMenu.MenuContext = MenuContext;
  SelectMenu.List = SelectMenuList;
  SelectMenu.Divider = SelectMenuDivider;
  SelectMenu.Filter = SelectMenuFilter;
  SelectMenu.Footer = SelectMenuFooter;
  SelectMenu.Item = SelectMenuItem;
  SelectMenu.List = SelectMenuList;
  SelectMenu.Modal = SelectMenuModal;
  SelectMenu.Tabs = SelectMenuTabs;
  SelectMenu.Tab = SelectMenuTab;
  SelectMenu.TabPanel = TabPanel;
  SelectMenu.Header = SelectMenuHeader;
  SelectMenu.defaultProps = {
    theme: theme
  };
  SelectMenu.propTypes = _objectSpread2({
    initialTab: PropTypes.string
  }, COMMON.propTypes);

  function _templateObject2$e() {
    var data = _taggedTemplateLiteral(["\n  position: relative;\n  display: block;\n  ", "\n  width: 100%;\n  text-align: left;\n  font-size: ", ";\n\n  & > ", " {\n    border-bottom: none;\n  }\n\n  &:first-child {\n    border-top-right-radius: ", ";\n    border-top-left-radius: ", ";\n  }\n\n  &:last-child {\n    border-bottom-right-radius: ", ";\n    border-bottom-left-radius: ", ";\n  }\n\n  ", ".variant-normal > & {\n    color: ", ";\n    padding: ", ";\n    border: 0;\n    border-top: ", " ", ";\n\n    &:first-child {\n      border-top: 0;\n    }\n\n    // Bar on the left\n    &::before {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      z-index: 1;\n      width: 3px;\n      pointer-events: none;\n      content: '';\n    }\n\n    &:hover,\n    &:focus {\n      color: ", ";\n      text-decoration: none;\n      background-color: ", ";\n      outline: none;\n    }\n\n    &[aria-current='page'],\n    &[aria-selected='true'] {\n      font-weight: ", ";\n      color: ", ";\n\n      // Bar on the left\n      &::before {\n        background-color: ", ";\n      }\n    }\n  }\n\n  ", ".variant-lightweight > & {\n    padding: ", " 0;\n    color: ", ";\n\n    &:hover,\n    &:focus {\n      color: ", ";\n      text-decoration: none;\n      outline: none;\n    }\n\n    &[aria-current='page'],\n    &[aria-selected='true'] {\n      color: ", ";\n      font-weight: ", ";\n    }\n  }\n"]);

    _templateObject2$e = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$J() {
    var data = _taggedTemplateLiteral(["\n  background-color: ", ";\n\n  ", "\n\n  ", ";\n"]);

    _templateObject$J = function _templateObject() {
      return data;
    };

    return data;
  }

  function SideNavBase(_ref) {
    var variant = _ref.variant,
        className = _ref.className,
        bordered = _ref.bordered,
        children = _ref.children,
        props = _objectWithoutProperties(_ref, ["variant", "className", "bordered", "children"]);

    var variantClassName = variant === 'lightweight' ? 'lightweight' : 'normal';
    var newClassName = classnames(className, "variant-".concat(variantClassName));

    if (!bordered) {
      props = _objectSpread2({}, props, {
        border: 'none'
      });
    }

    return React__default.createElement(BorderBox, _extends({
      as: "nav",
      className: newClassName
    }, props), children);
  }

  SideNavBase.displayName = "SideNavBase";
  var SideNav = styled__default(SideNavBase)(_templateObject$J(), get('colors.white'), function (props) {
    return props.bordered && styled.css(["& > &{border-left:0;border-right:0;border-bottom:0;}"]);
  }, COMMON);
  SideNav.Link = styled__default(Link).attrs(function (props) {
    var isReactRouter = typeof props.to === 'string';

    if (isReactRouter || props.selected) {
      // according to their docs, NavLink supports aria-current:
      // https://reacttraining.com/react-router/web/api/NavLink/aria-current-string
      return {
        'aria-current': 'page'
      };
    } else {
      return {};
    }
  })(_templateObject2$e(), function (props) {
    return props.variant === 'full' && styled.css(["display:flex;align-items:center;justify-content:space-between;"]);
  }, get('fontSizes.1'), SideNav, get('radii.2'), get('radii.2'), get('radii.2'), get('radii.2'), SideNav, get('colors.gray.6'), get('space.3'), get('borders.1'), get('colors.gray.2'), get('colors.gray.9'), get('colors.gray.1'), get('fontWeights.semibold'), get('colors.gray.9'), get('colors.accent'), SideNav, get('space.1'), get('colors.blue.5'), get('colors.gray.9'), get('colors.gray.9'), get('fontWeights.semibold'));
  SideNav.defaultProps = {
    theme: theme,
    variant: 'normal'
  };
  SideNav.propTypes = _objectSpread2({
    as: elementType,
    bordered: PropTypes.bool,
    children: PropTypes.node,
    theme: PropTypes.object,
    variant: PropTypes.oneOf(['normal', 'lightweight'])
  }, BorderBox.propTypes, {}, COMMON.propTypes);
  SideNav.Link.defaultProps = {
    theme: theme,
    variant: 'normal'
  };
  SideNav.Link.propTypes = _objectSpread2({
    as: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
    selected: PropTypes.bool,
    theme: PropTypes.object,
    variant: PropTypes.oneOf(['normal', 'full'])
  }, Link.propTypes);

  function _templateObject$K() {
    var data = _taggedTemplateLiteral(["\n  display: inline-flex;\n  align-items: center;\n  padding: ", ";\n  font-weight: 600;\n  line-height: 16px;\n  color: ", ";\n  font-size: ", "; // TODO: these should use the get function instead of referencing the theme directly\n  text-align: center;\n  background-color: ", ";\n  border-radius: ", ";\n  ", ";\n"]);

    _templateObject$K = function _templateObject() {
      return data;
    };

    return data;
  }
  var statusMap = {
    issueClosed: colors.red[6],
    pullClosed: colors.red[5],
    pullMerged: colors.purple[5],
    issueOpened: '#159739',
    // Custom green
    pullOpened: '#2cbe4e',
    // This was generated by a sass function in Primer, so using a hex here
    gray: colors.gray[5]
  };
  var octiconMap = {
    issueOpened: Octicon.IssueOpened,
    pullOpened: Octicon.GitPullRequest,
    issueClosed: Octicon.IssueClosed,
    pullClosed: Octicon.GitPullRequest,
    pullMerged: Octicon.GitMerge
  };

  function StateLabelBase(_ref) {
    var className = _ref.className,
        status = _ref.status,
        _ref$small = _ref.small,
        small = _ref$small === void 0 ? false : _ref$small,
        children = _ref.children;
    var octiconProps = small ? {
      width: '1em'
    } : {};
    return React__default.createElement("span", {
      className: className
    }, status && React__default.createElement(StyledOcticon, _extends({
      mr: 1
    }, octiconProps, {
      icon: octiconMap[status]
    })), children);
  }

  StateLabelBase.displayName = "StateLabelBase";
  var StateLabel = styled__default(StateLabelBase)(_templateObject$K(), function (props) {
    return props.small ? "4px 8px" : "8px 12px";
  }, colors.white, function (props) {
    return props.small ? theme.fontSizes[0] : theme.fontSizes[1];
  }, function (props) {
    return props.status ? statusMap[props.status] : statusMap.gray;
  }, get('radii.3'), COMMON);
  StateLabel.defaultProps = {
    theme: theme
  };
  StateLabel.propTypes = _objectSpread2({
    small: PropTypes.bool,
    status: PropTypes.oneOf(['issueOpened', 'pullOpened', 'issueClosed', 'pullClosed', 'pullMerged']),
    theme: PropTypes.object
  }, COMMON.propTypes);

  function _templateObject2$f() {
    var data = _taggedTemplateLiteral(["\n  padding-left: ", ";\n  padding-right: ", ";\n  min-height: 34px; // copied from TextInput, but should be a variable.\n  font-weight: ", ";\n  font-size: ", ";\n  line-height: ", ";\n  color: ", ";\n  text-align: center;\n  text-decoration: none;\n  border-top: 1px solid ", ";\n  border-bottom: 1px solid ", ";\n  border-right: 1px solid ", ";\n  display: flex;\n  align-items: center;\n\n  &:first-of-type {\n    border-top-left-radius: ", ";\n    border-bottom-left-radius: ", ";\n    border-left: 1px solid ", ";\n  }\n\n  &:last-of-type {\n    border-top-right-radius: ", ";\n    border-bottom-right-radius: ", ";\n  }\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n    background-color: ", ";\n    transition: 0.2s ease;\n\n    .SubNav-octicon {\n      color: ", ";\n    }\n  }\n\n  &.selected {\n    color: ", ";\n    background-color: ", ";\n    border: 0;\n    .SubNav-octicon {\n      color: ", ";\n    }\n  }\n"]);

    _templateObject2$f = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$L() {
    var data = _taggedTemplateLiteral(["\n  display: flex;\n  justify-content: space-between;\n\n  .SubNav-body {\n    display: flex;\n    margin-bottom: -1px;\n\n    > * {\n      margin-left: ", ";\n    }\n\n    > *:first-child {\n      margin-left: 0;\n    }\n  }\n\n  .SubNav-actions {\n    align-self: center;\n  }\n\n  ", ";\n\n  ", ";\n"]);

    _templateObject$L = function _templateObject() {
      return data;
    };

    return data;
  }
  var ITEM_CLASS = 'SubNav-item';
  var SELECTED_CLASS$1 = 'selected';

  function SubNavBase(_ref) {
    var actions = _ref.actions,
        className = _ref.className,
        children = _ref.children,
        label = _ref.label,
        rest = _objectWithoutProperties(_ref, ["actions", "className", "children", "label"]);

    var classes = classnames(className, 'SubNav');
    return React__default.createElement("nav", _extends({
      className: classes,
      "aria-label": label
    }, rest), React__default.createElement("div", {
      className: "SubNav-body"
    }, children), actions && React__default.createElement("div", {
      className: "SubNav-actions"
    }, actions));
  }

  SubNavBase.displayName = "SubNavBase";
  var SubNav = styled__default(SubNavBase)(_templateObject$L(), get('space.2'), COMMON, FLEX);
  SubNav.Links = Flex;
  SubNav.Link = styled__default.a.attrs(function (props) {
    return {
      activeClassName: typeof props.to === 'string' ? 'selected' : '',
      className: classnames(ITEM_CLASS, props.selected && SELECTED_CLASS$1, props.className)
    };
  })(_templateObject2$f(), get('space.3'), get('space.3'), get('fontWeights.bold'), get('fontSizes.1'), get('lineHeights.default'), get('colors.gray.6'), get('colors.gray.2'), get('colors.gray.2'), get('colors.gray.2'), get('radii.2'), get('radii.2'), get('colors.gray.2'), get('radii.2'), get('radii.2'), get('colors.gray.1'), get('colors.gray.5'), get('colors.white'), get('colors.blue.5'), get('colors.gray.5'));
  SubNav.defaultProps = {
    theme: theme
  };
  SubNav.propTypes = _objectSpread2({
    actions: PropTypes.node,
    align: PropTypes.oneOf(['right']),
    children: PropTypes.node,
    full: PropTypes.bool,
    label: PropTypes.string,
    theme: PropTypes.object
  }, COMMON.propTypes);
  SubNav.Link.defaultProps = {
    theme: theme
  };
  SubNav.Link.propTypes = _objectSpread2({
    as: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
    href: PropTypes.string,
    selected: PropTypes.bool
  }, COMMON.propTypes);
  SubNav.Links.propTypes = _objectSpread2({}, COMMON.propTypes);

  function _templateObject2$g() {
    var data = _taggedTemplateLiteral(["\n  padding: 8px 12px;\n  font-size: ", ";\n  line-height: 20px;\n  color: ", ";\n  text-decoration: none;\n  background-color: transparent;\n  border: 1px solid transparent;\n  border-bottom: 0;\n\n  &:hover,\n  &:focus {\n    color: ", ";\n    text-decoration: none;\n  }\n\n  &.selected {\n    color: ", ";\n    border-color: ", ";\n    border-top-right-radius: ", ";\n    border-top-left-radius: ", ";\n    background-color: ", ";\n  }\n"]);

    _templateObject2$g = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$M() {
    var data = _taggedTemplateLiteral(["\n  display: flex;\n  border-bottom: 1px solid ", ";\n\n  .TabNav-body {\n    display: flex;\n    margin-bottom: -1px;\n  }\n\n  ", ";\n"]);

    _templateObject$M = function _templateObject() {
      return data;
    };

    return data;
  }
  var ITEM_CLASS$1 = 'TabNav-item';
  var SELECTED_CLASS$2 = 'selected';

  function TabNavBase(_ref) {
    var actions = _ref.actions,
        className = _ref.className,
        align = _ref.align,
        children = _ref.children,
        full = _ref.full,
        rest = _objectWithoutProperties(_ref, ["actions", "className", "align", "children", "full"]);

    var classes = classnames(className, 'TabNav');
    return React__default.createElement("nav", _extends({
      className: classes
    }, rest), React__default.createElement("div", {
      className: "TabNav-body"
    }, children));
  }

  TabNavBase.displayName = "TabNavBase";
  var TabNav = styled__default(TabNavBase)(_templateObject$M(), get('colors.border.gray'), COMMON);
  TabNav.Link = styled__default.a.attrs(function (props) {
    return {
      activeClassName: typeof props.to === 'string' ? 'selected' : '',
      className: classnames(ITEM_CLASS$1, props.selected && SELECTED_CLASS$2, props.className)
    };
  })(_templateObject2$g(), get('fontSizes.1'), get('colors.black'), get('colors.text.grayDark'), get('colors.text.grayDark'), get('colors.border.gray'), get('radii.2'), get('radii.2'), get('colors.white'));
  TabNav.defaultProps = {
    theme: theme
  };
  TabNav.propTypes = _objectSpread2({
    children: PropTypes.node,
    theme: PropTypes.object
  }, COMMON.propTypes);
  TabNav.Link.defaultProps = {
    theme: theme
  };
  TabNav.Link.propTypes = _objectSpread2({
    as: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
    href: PropTypes.string,
    selected: PropTypes.bool
  }, COMMON.propTypes);

  var Timeline = styled__default(Flex).withConfig({
    displayName: "Timeline",
    componentId: "sc-1y01lij-0"
  })(["flex-direction:column;", ""], function (props) {
    return props.clipSidebar && styled.css([".Timeline-Item:first-child{padding-top:0;}.Timeline-Item:last-child{padding-bottom:0;}"]);
  });
  Timeline.Item = styled__default(Flex).attrs(function (props) {
    return {
      className: classnames('Timeline-Item', props.className)
    };
  }).withConfig({
    displayName: "Timeline__Item",
    componentId: "sc-1y01lij-1"
  })(["position:relative;padding:", " 0;margin-left:", ";&::before{position:absolute;top:0;bottom:0;left:0;display:block;width:2px;content:'';background-color:", ";}", " ", ";"], get('space.3'), get('space.3'), get('colors.gray.2'), function (props) {
    return props.condensed && styled.css(["padding-top:", ";padding-bottom:0;&:last-child{padding-bottom:", ";}.TimelineItem-Badge{height:16px;margin-top:", ";margin-bottom:", ";color:", ";background-color:", ";border:0;}"], get('space.1'), get('space.3'), get('space.2'), get('space.2'), get('colors.gray.4'), get('colors.white'));
  }, COMMON);

  var _StyledFlex = styled__default(Flex).withConfig({
    displayName: "Timeline___StyledFlex",
    componentId: "sc-1y01lij-2"
  })(["border-radius:50%;border:2px solid ", ";"], function (p) {
    return p._css;
  });

  Timeline.Badge = function (props) {
    return React__default.createElement(Relative, {
      zIndex: 1
    }, React__default.createElement(_StyledFlex, _extends({
      className: classnames(props.className, 'TimelineItem-Badge'),
      flexShrink: 0,
      overflow: "hidden",
      color: "gray.7",
      bg: "gray.2",
      width: "32px",
      height: "32px",
      mr: 2,
      ml: "-15px",
      alignItems: "center",
      justifyContent: "center"
    }, props, {
      _css: get('colors.white')
    }), props.children));
  };

  Timeline.Body = styled__default(Box).withConfig({
    displayName: "Timeline__Body",
    componentId: "sc-1y01lij-3"
  })(["min-width:0;max-width:100%;margin-top:", ";color:", ";flex:auto;font-size:", ";"], get('space.1'), get('colors.gray.7'), get('fontSizes.1'));
  Timeline.Break = styled__default(Relative).withConfig({
    displayName: "Timeline__Break",
    componentId: "sc-1y01lij-4"
  })(["z-index:1;height:24px;margin:0;margin-bottom:-", ";margin-left:0;background-color:", ";border:0;border-top:", " solid ", ";"], get('space.3'), get('colors.white'), get('space.1'), get('colors.gray.2'));
  Timeline.defaultProps = {
    theme: theme
  };
  Timeline.propTypes = _objectSpread2({
    children: PropTypes.node,
    clipSidebar: PropTypes.bool,
    theme: PropTypes.object
  }, Flex.propTypes);
  Timeline.Item.defaultProps = {
    theme: theme
  };
  Timeline.Item.propTypes = _objectSpread2({
    children: PropTypes.node,
    condensed: PropTypes.bool,
    theme: PropTypes.object
  }, Flex.propTypes);
  Timeline.Badge.defaultProps = {
    theme: theme
  };
  Timeline.Badge.propTypes = _objectSpread2({
    children: PropTypes.node,
    theme: PropTypes.object
  }, Flex.propTypes);
  Timeline.Body.defaultProps = {
    theme: theme
  };
  Timeline.Body.propTypes = _objectSpread2({
    children: PropTypes.node,
    theme: PropTypes.object
  }, Box.propTypes);
  Timeline.Break.defaultProps = {
    theme: theme
  };
  Timeline.Break.propTypes = _objectSpread2({
    children: PropTypes.node,
    theme: PropTypes.object
  }, Box.propTypes);

  function _templateObject$N() {
    var data = _taggedTemplateLiteral(["\n  position: relative;\n\n  &::before {\n    position: absolute;\n    z-index: 1000001;\n    display: none;\n    width: 0px;\n    height: 0px;\n    color: ", ";\n    pointer-events: none;\n    content: '';\n    border: 6px solid transparent;\n    opacity: 0;\n  }\n\n  &::after {\n    position: absolute;\n    z-index: 1000000;\n    display: none;\n    padding: 0.5em 0.75em;\n    font: normal normal 11px/1.5 ", ";\n    -webkit-font-smoothing: subpixel-antialiased;\n    color: ", ";\n    text-align: center;\n    text-decoration: none;\n    text-shadow: none;\n    text-transform: none;\n    letter-spacing: normal;\n    word-wrap: break-word;\n    white-space: pre;\n    pointer-events: none;\n    content: attr(aria-label);\n    background: ", ";\n    border-radius: ", ";\n    opacity: 0;\n  }\n\n  // delay animation for tooltip\n  @keyframes tooltip-appear {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n\n  &:hover,\n  &:active,\n  &:focus {\n    &::before,\n    &::after {\n      display: inline-block;\n      text-decoration: none;\n      animation-name: tooltip-appear;\n      animation-duration: 0.1s;\n      animation-fill-mode: forwards;\n      animation-timing-function: ease-in;\n      animation-delay: 0.4s;\n    }\n  }\n\n  &.tooltipped-no-delay:hover,\n  &.tooltipped-no-delay:active,\n  &.tooltipped-no-delay:focus {\n    &::before,\n    &::after {\n      animation-delay: 0s;\n    }\n  }\n\n  &.tooltipped-multiline:hover,\n  &.tooltipped-multiline:active,\n  &.tooltipped-multiline:focus {\n    &::after {\n      display: table-cell;\n    }\n  }\n\n  // Tooltipped south\n  &.tooltipped-s,\n  &.tooltipped-se,\n  &.tooltipped-sw {\n    &::after {\n      top: 100%;\n      right: 50%;\n      margin-top: 6px;\n    }\n\n    &::before {\n      top: auto;\n      right: 50%;\n      bottom: -7px;\n      margin-right: -6px;\n      border-bottom-color: ", ";\n    }\n  }\n\n  &.tooltipped-se {\n    &::after {\n      right: auto;\n      left: 50%;\n      margin-left: -", ";\n    }\n  }\n\n  &.tooltipped-sw::after {\n    margin-right: -", ";\n  }\n\n  // Tooltips above the object\n  &.tooltipped-n,\n  &.tooltipped-ne,\n  &.tooltipped-nw {\n    &::after {\n      right: 50%;\n      bottom: 100%;\n      margin-bottom: 6px;\n    }\n\n    &::before {\n      top: -7px;\n      right: 50%;\n      bottom: auto;\n      margin-right: -6px;\n      border-top-color: ", ";\n    }\n  }\n\n  &.tooltipped-ne {\n    &::after {\n      right: auto;\n      left: 50%;\n      margin-left: -", ";\n    }\n  }\n\n  &.tooltipped-nw::after {\n    margin-right: -", ";\n  }\n\n  // Move the tooltip body to the center of the object.\n  &.tooltipped-s::after,\n  &.tooltipped-n::after {\n    transform: translateX(50%);\n  }\n\n  // Tooltipped to the left\n  &.tooltipped-w {\n    &::after {\n      right: 100%;\n      bottom: 50%;\n      margin-right: 6px;\n      transform: translateY(50%);\n    }\n\n    &::before {\n      top: 50%;\n      bottom: 50%;\n      left: -7px;\n      margin-top: -6px;\n      border-left-color: ", ";\n    }\n  }\n\n  // tooltipped to the right\n  &.tooltipped-e {\n    &::after {\n      bottom: 50%;\n      left: 100%;\n      margin-left: 6px;\n      transform: translateY(50%);\n    }\n\n    &::before {\n      top: 50%;\n      right: -7px;\n      bottom: 50%;\n      margin-top: -6px;\n      border-right-color: ", ";\n    }\n  }\n\n  &.tooltipped-multiline {\n    &::after {\n      width: max-content;\n      max-width: 250px;\n      word-wrap: break-word;\n      white-space: pre-line;\n      border-collapse: separate;\n    }\n\n    &.tooltipped-s::after,\n    &.tooltipped-n::after {\n      right: auto;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n\n    &.tooltipped-w::after,\n    &.tooltipped-e::after {\n      right: 100%;\n    }\n  }\n\n  &.tooltipped-align-right-2::after {\n    right: 0;\n    margin-right: 0;\n  }\n\n  &.tooltipped-align-right-2::before {\n    right: 15px;\n  }\n\n  &.tooltipped-align-left-2::after {\n    left: 0;\n    margin-left: 0;\n  }\n\n  &.tooltipped-align-left-2::before {\n    left: 10px;\n  }\n  ", ";\n"]);

    _templateObject$N = function _templateObject() {
      return data;
    };

    return data;
  }

  function TooltipBase(_ref) {
    var direction = _ref.direction,
        children = _ref.children,
        className = _ref.className,
        text = _ref.text,
        noDelay = _ref.noDelay,
        align = _ref.align,
        wrap = _ref.wrap,
        rest = _objectWithoutProperties(_ref, ["direction", "children", "className", "text", "noDelay", "align", "wrap"]);

    var classes = classnames(className, "tooltipped-".concat(direction), align && "tooltipped-align-".concat(align, "-2"), noDelay && 'tooltipped-no-delay', wrap && 'tooltipped-multiline');
    return React__default.createElement("span", _extends({
      "aria-label": text
    }, rest, {
      className: classes
    }), children);
  }

  TooltipBase.displayName = "TooltipBase";
  var Tooltip = styled__default(TooltipBase)(_templateObject$N(), get('colors.black'), get('fonts.normal'), get('colors.white'), get('colors.black'), get('radii.1'), get('colors.black'), get('space.3'), get('space.3'), get('colors.black'), get('space.3'), get('space.3'), get('colors.black'), get('colors.black'), COMMON);
  Tooltip.alignments = ['left', 'right'];
  Tooltip.directions = ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'];
  Tooltip.defaultProps = {
    theme: theme,
    direction: 'n'
  };
  Tooltip.propTypes = _objectSpread2({
    align: PropTypes.oneOf(Tooltip.alignments),
    children: PropTypes.node,
    direction: PropTypes.oneOf(Tooltip.directions),
    noDelay: PropTypes.bool,
    text: PropTypes.string,
    theme: PropTypes.object,
    wrap: PropTypes.bool
  }, COMMON.propTypes);

  function _templateObject$O() {
    var data = _taggedTemplateLiteral(["\n  ", "\n  ", "\n  display: ", ";\n  overflow: hidden;\n  text-overflow: ellipsis;\n  vertical-align: ", ";\n  white-space: nowrap;\n  ", "\n  ", "\n"]);

    _templateObject$O = function _templateObject() {
      return data;
    };

    return data;
  }
  var Truncate = styled__default('div')(_templateObject$O(), TYPOGRAPHY, COMMON, function (props) {
    return props.inline ? 'inline-block' : 'inherit';
  }, function (props) {
    return props.inline ? 'top' : 'initial';
  }, styledSystem.maxWidth, function (props) {
    return props.expandable ? "&:hover { max-width: 10000px; }" : '';
  });
  Truncate.defaultProps = {
    as: 'div',
    expandable: false,
    inline: false,
    maxWidth: 125,
    theme: theme
  };
  Truncate.propTypes = _objectSpread2({}, TYPOGRAPHY.propTypes, {}, COMMON.propTypes, {
    expandable: PropTypes.bool,
    inline: PropTypes.bool,
    maxWidth: PropTypes.number,
    theme: PropTypes.object,
    title: PropTypes.string.isRequired
  });

  function _templateObject2$h() {
    var data = _taggedTemplateLiteral(["\n  padding: ", " ", ";\n  margin-right: ", ";\n  font-size: ", ";\n  line-height: ", ";\n  color: ", ";\n  text-align: center;\n  border-bottom: 2px solid transparent;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: ", ";\n    text-decoration: none;\n    border-bottom-color: ", ";\n    transition: 0.2s ease;\n\n    .UnderlineNav-octicon {\n      color: ", ";\n    }\n  }\n\n  &.selected {\n    color: ", ";\n    border-bottom-color: ", ";\n\n    .UnderlineNav-octicon {\n      color: ", ";\n    }\n  }\n"]);

    _templateObject2$h = function _templateObject2() {
      return data;
    };

    return data;
  }

  function _templateObject$P() {
    var data = _taggedTemplateLiteral(["\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #eaecef;\n  &.UnderlineNav--right {\n    justify-content: flex-end;\n\n    .UnderlineNav-item {\n      margin-right: 0;\n      margin-left: ", ";\n    }\n\n    .UnderlineNav-actions {\n      flex: 1 1 auto;\n    }\n  }\n  &.UnderlineNav--full {\n    display: block;\n  }\n\n  .UnderlineNav-body {\n    display: flex;\n    margin-bottom: -1px;\n  }\n\n  .UnderlineNav-actions {\n    align-self: center;\n  }\n\n  ", ";\n"]);

    _templateObject$P = function _templateObject() {
      return data;
    };

    return data;
  }
  var ITEM_CLASS$2 = 'UnderlineNav-item';
  var SELECTED_CLASS$3 = 'selected';

  function UnderlineNavBase(_ref) {
    var actions = _ref.actions,
        className = _ref.className,
        align = _ref.align,
        children = _ref.children,
        full = _ref.full,
        label = _ref.label,
        rest = _objectWithoutProperties(_ref, ["actions", "className", "align", "children", "full", "label"]);

    var classes = classnames(className, 'UnderlineNav', align && "UnderlineNav--".concat(align), full && 'UnderlineNav--full');
    return React__default.createElement("nav", _extends({
      className: classes,
      "aria-label": label
    }, rest), React__default.createElement("div", {
      className: "UnderlineNav-body"
    }, children), actions && React__default.createElement("div", {
      className: "UnderlineNav-actions"
    }, actions));
  }

  UnderlineNavBase.displayName = "UnderlineNavBase";
  var UnderlineNav = styled__default(UnderlineNavBase)(_templateObject$P(), get('space.3'), COMMON);
  UnderlineNav.Link = styled__default.a.attrs(function (props) {
    return {
      activeClassName: typeof props.to === 'string' ? 'selected' : '',
      className: classnames(ITEM_CLASS$2, props.selected && SELECTED_CLASS$3, props.className)
    };
  })(_templateObject2$h(), get('space.3'), get('space.2'), get('space.3'), get('fontSizes.1'), get('lineHeights.default'), get('colors.gray.6'), get('colors.gray.9'), get('colors.gray.2'), get('colors.gray.5'), get('colors.gray.9'), get('colors.accent'), get('colors.gray.5'));
  UnderlineNav.defaultProps = {
    theme: theme
  };
  UnderlineNav.propTypes = _objectSpread2({
    actions: PropTypes.node,
    align: PropTypes.oneOf(['right']),
    children: PropTypes.node,
    full: PropTypes.bool,
    label: PropTypes.string,
    theme: PropTypes.object
  }, COMMON.propTypes);
  UnderlineNav.Link.defaultProps = {
    theme: theme
  };
  UnderlineNav.Link.propTypes = _objectSpread2({
    as: PropTypes.node,
    href: PropTypes.string,
    selected: PropTypes.bool
  }, COMMON.propTypes);

  exports.Absolute = Absolute;
  exports.Avatar = Avatar;
  exports.AvatarPair = AvatarPair;
  exports.AvatarStack = AvatarStack;
  exports.BaseStyles = BaseStyles;
  exports.BorderBox = BorderBox;
  exports.Box = Box;
  exports.BranchName = BranchName;
  exports.Breadcrumb = Breadcrumb;
  exports.Button = Button;
  exports.ButtonDanger = ButtonDanger;
  exports.ButtonGroup = ButtonGroup;
  exports.ButtonOutline = ButtonOutline;
  exports.ButtonPrimary = ButtonPrimary;
  exports.ButtonTableList = ButtonTableList;
  exports.Caret = Caret;
  exports.CircleBadge = CircleBadge;
  exports.CircleOcticon = CircleOcticon;
  exports.CounterLabel = CounterLabel;
  exports.Details = Details;
  exports.Dialog = Dialog;
  exports.Dropdown = Dropdown;
  exports.FilterList = FilterList;
  exports.FilteredSearch = FilteredSearch;
  exports.Fixed = Fixed;
  exports.Flash = Flash;
  exports.Flex = Flex;
  exports.Grid = Grid;
  exports.Heading = Heading;
  exports.Label = Label;
  exports.LabelGroup = LabelGroup;
  exports.Link = Link;
  exports.Pagination = Pagination;
  exports.PointerBox = PointerBox;
  exports.Popover = Popover;
  exports.Position = Position;
  exports.ProgressBar = ProgressBar;
  exports.Relative = Relative;
  exports.SelectMenu = SelectMenu;
  exports.SideNav = SideNav;
  exports.StateLabel = StateLabel;
  exports.Sticky = Sticky;
  exports.StyledOcticon = StyledOcticon;
  exports.SubNav = SubNav;
  exports.TabNav = TabNav;
  exports.Text = Text;
  exports.TextInput = TextInput;
  exports.Timeline = Timeline;
  exports.Tooltip = Tooltip;
  exports.Truncate = Truncate;
  exports.UnderlineNav = UnderlineNav;
  exports.theme = theme;
  exports.themeGet = get;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
